

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 25 17:41:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 30/04/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F15244 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  0119                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011C                     	;# 
   115  011D                     	;# 
   116  011E                     	;# 
   117  011F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  018E                     	;# 
   121  018F                     	;# 
   122  0190                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  020C                     	;# 
   126  020D                     	;# 
   127  020E                     	;# 
   128  020E                     	;# 
   129  020F                     	;# 
   130  020F                     	;# 
   131  0210                     	;# 
   132  0210                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  028C                     	;# 
   136  028C                     	;# 
   137  028D                     	;# 
   138  028D                     	;# 
   139  028E                     	;# 
   140  028F                     	;# 
   141  0290                     	;# 
   142  0291                     	;# 
   143  030C                     	;# 
   144  030C                     	;# 
   145  030D                     	;# 
   146  030E                     	;# 
   147  030F                     	;# 
   148  0310                     	;# 
   149  0310                     	;# 
   150  0311                     	;# 
   151  0312                     	;# 
   152  0313                     	;# 
   153  0314                     	;# 
   154  0314                     	;# 
   155  0315                     	;# 
   156  0316                     	;# 
   157  0318                     	;# 
   158  0318                     	;# 
   159  0319                     	;# 
   160  031A                     	;# 
   161  059C                     	;# 
   162  059C                     	;# 
   163  059D                     	;# 
   164  059D                     	;# 
   165  059E                     	;# 
   166  059F                     	;# 
   167  070C                     	;# 
   168  070D                     	;# 
   169  070E                     	;# 
   170  0716                     	;# 
   171  0717                     	;# 
   172  0718                     	;# 
   173  080C                     	;# 
   174  0811                     	;# 
   175  0813                     	;# 
   176  0814                     	;# 
   177  081A                     	;# 
   178  081A                     	;# 
   179  081B                     	;# 
   180  081C                     	;# 
   181  081C                     	;# 
   182  081D                     	;# 
   183  081E                     	;# 
   184  081F                     	;# 
   185  088E                     	;# 
   186  0890                     	;# 
   187  0891                     	;# 
   188  0892                     	;# 
   189  0893                     	;# 
   190  090C                     	;# 
   191  1E8F                     	;# 
   192  1E90                     	;# 
   193  1E91                     	;# 
   194  1E92                     	;# 
   195  1E93                     	;# 
   196  1E9C                     	;# 
   197  1EA1                     	;# 
   198  1EA2                     	;# 
   199  1EC3                     	;# 
   200  1EC5                     	;# 
   201  1EC6                     	;# 
   202  1EC7                     	;# 
   203  1ECB                     	;# 
   204  1ECB                     	;# 
   205  1ECB                     	;# 
   206  1ECC                     	;# 
   207  1ECC                     	;# 
   208  1ECC                     	;# 
   209  1F10                     	;# 
   210  1F11                     	;# 
   211  1F12                     	;# 
   212  1F14                     	;# 
   213  1F15                     	;# 
   214  1F1C                     	;# 
   215  1F1D                     	;# 
   216  1F1E                     	;# 
   217  1F1F                     	;# 
   218  1F20                     	;# 
   219  1F21                     	;# 
   220  1F22                     	;# 
   221  1F23                     	;# 
   222  1F24                     	;# 
   223  1F25                     	;# 
   224  1F26                     	;# 
   225  1F27                     	;# 
   226  1F38                     	;# 
   227  1F39                     	;# 
   228  1F3A                     	;# 
   229  1F3B                     	;# 
   230  1F3C                     	;# 
   231  1F3D                     	;# 
   232  1F3E                     	;# 
   233  1F3F                     	;# 
   234  1F43                     	;# 
   235  1F44                     	;# 
   236  1F45                     	;# 
   237  1F46                     	;# 
   238  1F47                     	;# 
   239  1F48                     	;# 
   240  1F49                     	;# 
   241  1F4A                     	;# 
   242  1F4E                     	;# 
   243  1F4F                     	;# 
   244  1F50                     	;# 
   245  1F51                     	;# 
   246  1F52                     	;# 
   247  1F53                     	;# 
   248  1F54                     	;# 
   249  1F55                     	;# 
   250  1FE4                     	;# 
   251  1FE5                     	;# 
   252  1FE6                     	;# 
   253  1FE7                     	;# 
   254  1FE8                     	;# 
   255  1FE8                     	;# 
   256  1FE9                     	;# 
   257  1FEA                     	;# 
   258  1FEB                     	;# 
   259  1FED                     	;# 
   260  1FEE                     	;# 
   261  1FEF                     	;# 
   262  0018                     _LATAbits	set	24
   263  0019                     _LATBbits	set	25
   264  0014                     _TRISC	set	20
   265  0013                     _TRISB	set	19
   266  0012                     _TRISA	set	18
   267  001A                     _LATC	set	26
   268  0019                     _LATB	set	25
   269  0018                     _LATA	set	24
   270  000D                     _PORTBbits	set	13
   271  000E                     _PORTCbits	set	14
   272  0013                     _TRISBbits	set	19
   273  0014                     _TRISCbits	set	20
   274  0892                     _OSCTUNE	set	2194
   275  0893                     _OSCFRQ	set	2195
   276  0891                     _OSCEN	set	2193
   277  1F52                     _INLVLC	set	8018
   278  1F3C                     _INLVLA	set	7996
   279  1F51                     _SLRCONC	set	8017
   280  1F3B                     _SLRCONA	set	7995
   281  1F50                     _ODCONC	set	8016
   282  1F3A                     _ODCONA	set	7994
   283  1F38                     _ANSELA	set	7992
   284  1F4E                     _ANSELC	set	8014
   285                           
   286                           	psect	stringtext1
   287  0800                     __pstringtext1:
   288  0800                     STR_2:
   289  0800  3463               	retlw	99	;'c'
   290  0801  3461               	retlw	97	;'a'
   291  0802  346E               	retlw	110	;'n'
   292  0803  3474               	retlw	116	;'t'
   293  0804  3469               	retlw	105	;'i'
   294  0805  3464               	retlw	100	;'d'
   295  0806  3461               	retlw	97	;'a'
   296  0807  3464               	retlw	100	;'d'
   297  0808  3420               	retlw	32	;' '
   298  0809  346D               	retlw	109	;'m'
   299  080A  3461               	retlw	97	;'a'
   300  080B  3478               	retlw	120	;'x'
   301  080C  3469               	retlw	105	;'i'
   302  080D  346D               	retlw	109	;'m'
   303  080E  3461               	retlw	97	;'a'
   304  080F  3400               	retlw	0
   305                           
   306                           	psect	stringtext2
   307  0810                     __pstringtext2:
   308  0810                     STR_3:
   309  0810  3463               	retlw	99	;'c'
   310  0811  3461               	retlw	97	;'a'
   311  0812  3470               	retlw	112	;'p'
   312  0813  3461               	retlw	97	;'a'
   313  0814  3463               	retlw	99	;'c'
   314  0815  3469               	retlw	105	;'i'
   315  0816  3464               	retlw	100	;'d'
   316  0817  3461               	retlw	97	;'a'
   317  0818  3464               	retlw	100	;'d'
   318  0819  343A               	retlw	58	;':'
   319  081A  3420               	retlw	32	;' '
   320  081B  3425               	retlw	37	;'%'
   321  081C  3464               	retlw	100	;'d'
   322  081D  3400               	retlw	0
   323                           
   324                           	psect	stringtext3
   325  081E                     __pstringtext3:
   326  081E                     STR_4:
   327  081E  3441               	retlw	65	;'A'
   328  081F  3463               	retlw	99	;'c'
   329  0820  3474               	retlw	116	;'t'
   330  0821  3475               	retlw	117	;'u'
   331  0822  3461               	retlw	97	;'a'
   332  0823  346C               	retlw	108	;'l'
   333  0824  343A               	retlw	58	;':'
   334  0825  3420               	retlw	32	;' '
   335  0826  3425               	retlw	37	;'%'
   336  0827  3464               	retlw	100	;'d'
   337  0828  3400               	retlw	0
   338                           
   339                           	psect	stringtext4
   340  0829                     __pstringtext4:
   341  0829                     STR_1:
   342  0829  3464               	retlw	100	;'d'
   343  082A  3465               	retlw	101	;'e'
   344  082B  3466               	retlw	102	;'f'
   345  082C  3469               	retlw	105	;'i'
   346  082D  346E               	retlw	110	;'n'
   347  082E  3461               	retlw	97	;'a'
   348  082F  3420               	retlw	32	;' '
   349  0830  346C               	retlw	108	;'l'
   350  0831  3461               	retlw	97	;'a'
   351  0832  3400               	retlw	0
   352                           
   353                           	psect	stringtext5
   354  0000                     __pstringtext5:
   355                           
   356                           	psect	cinit
   357  07F2                     start_initialization:	
   358                           ; #config settings
   359                           
   360  07F2                     __initialization:
   361                           
   362                           ; Clear objects allocated to BANK0
   363  07F2  0140               	movlb	0	; select bank0
   364  07F3  01ED               	clrf	__pbssBANK0& (0+127)
   365  07F4  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   366                           
   367                           ; Clear objects allocated to BANK1
   368  07F5  30A0               	movlw	low __pbssBANK1
   369  07F6  0084               	movwf	4
   370  07F7  3000               	movlw	high __pbssBANK1
   371  07F8  0085               	movwf	5
   372  07F9  3040               	movlw	64
   373  07FA  318B  233E  3187   	fcall	clear_ram0
   374  07FD                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  07FD                     __end_of__initialization:
   378  07FD  0140               	movlb	0
   379  07FE  3182  2A3F         	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	bssBANK0
   382  006D                     __pbssBANK0:
   383  006D                     _per_max:
   384  006D                     	ds	2
   385                           
   386                           	psect	bssBANK1
   387  00A0                     __pbssBANK1:
   388  00A0                     _nout:
   389  00A0                     	ds	2
   390  00A2                     _width:
   391  00A2                     	ds	2
   392  00A4                     _prec:
   393  00A4                     	ds	2
   394  00A6                     _flags:
   395  00A6                     	ds	2
   396  00A8                     _mitad:
   397  00A8                     	ds	2
   398  00AA                     _cantidad:
   399  00AA                     	ds	2
   400  00AC                     _dbuf:
   401  00AC                     	ds	32
   402  00CC                     _tex:
   403  00CC                     	ds	20
   404                           
   405                           	psect	clrtext
   406  0B3E                     clear_ram0:	
   407                           ;	Called with FSR0 containing the base address, and
   408                           ;	WREG with the size to clear
   409                           
   410  0B3E  0064               	clrwdt	;clear the watchdog before getting into this loop
   411  0B3F                     clrloop0:
   412  0B3F  0180               	clrf	0	;clear RAM location pointed to by FSR
   413  0B40  3101               	addfsr 0,1
   414  0B41  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   415  0B42  2B3F               	goto	clrloop0	;have we reached the end yet?
   416  0B43  3400               	retlw	0	;all done for this memory range, return
   417                           
   418                           	psect	cstackBANK1
   419  00E0                     __pcstackBANK1:
   420  00E0                     	ds	2
   421  00E2                     sprintf@ap:
   422                           
   423                           ; 1 bytes @ 0x2
   424  00E2                     	ds	1
   425  00E3                     sprintf@s:
   426                           
   427                           ; 1 bytes @ 0x3
   428  00E3                     	ds	1
   429  00E4                     sprintf@f:
   430                           
   431                           ; 5 bytes @ 0x4
   432  00E4                     	ds	5
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:
   436  0070                     ?_Lcd_Cmd:
   437  0070                     ??_Lcd_Cmd:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_Lcd_Chr_CP:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_Lcd_Chr_CP:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_putch:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_putch:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_Lcd_Init:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_PIN_MANAGER_Initialize:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ??_PIN_MANAGER_Initialize:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_OSCILLATOR_Initialize:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_OSCILLATOR_Initialize:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_ValorDeGenMax:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_mostrargenmax:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_mostrarcantidad:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_apagarsalidas:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??_apagarsalidas:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_main:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??___aodiv:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ??___aomod:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?__Umul8_16:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_fputc:	
   495                           ; 2 bytes @ 0x0
   496                           
   497  0070                     ?_strlen:	
   498                           ; 2 bytes @ 0x0
   499                           
   500  0070                     ?___xxtofl:	
   501                           ; 2 bytes @ 0x0
   502                           
   503  0070                     __Umul8_16@multiplicand:	
   504                           ; 4 bytes @ 0x0
   505                           
   506  0070                     putch@c:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     fputc@c:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ___xxtofl@val:	
   513                           ; 2 bytes @ 0x0
   514                           
   515                           
   516                           ; 4 bytes @ 0x0
   517  0070                     	ds	1
   518  0071                     ___aodiv@counter:
   519  0071                     ___aomod@counter:	
   520                           ; 1 bytes @ 0x1
   521                           
   522                           
   523                           ; 1 bytes @ 0x1
   524  0071                     	ds	1
   525  0072                     ??__Umul8_16:
   526  0072                     ??_strlen:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0072                     Lcd_Chr_CP@data:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     Lcd_Cmd@data:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0072                     ___aodiv@sign:	
   536                           ; 1 bytes @ 0x2
   537                           
   538  0072                     ___aomod@sign:	
   539                           ; 1 bytes @ 0x2
   540                           
   541  0072                     fputc@fp:	
   542                           ; 1 bytes @ 0x2
   543                           
   544                           
   545                           ; 1 bytes @ 0x2
   546  0072                     	ds	1
   547  0073                     ??_fputc:
   548  0073                     ??_Lcd_Init:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     ?_Lcd_Out2:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0073                     ?_abs:	
   555                           ; 1 bytes @ 0x3
   556                           
   557  0073                     Lcd_Out2@x:	
   558                           ; 2 bytes @ 0x3
   559                           
   560  0073                     strlen@a:	
   561                           ; 1 bytes @ 0x3
   562                           
   563  0073                     abs@a:	
   564                           ; 1 bytes @ 0x3
   565                           
   566  0073                     ___aodiv@quotient:	
   567                           ; 2 bytes @ 0x3
   568                           
   569                           
   570                           ; 8 bytes @ 0x3
   571  0073                     	ds	1
   572  0074                     ??___xxtofl:
   573  0074                     Lcd_Init@data:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0074                     Lcd_Out2@buffer:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0074                     strlen@s:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0074                     __Umul8_16@product:	
   583                           ; 1 bytes @ 0x4
   584                           
   585                           
   586                           ; 2 bytes @ 0x4
   587  0074                     	ds	1
   588  0075                     ??_abs:
   589  0075                     ??_Lcd_Out2:	
   590                           ; 1 bytes @ 0x5
   591                           
   592                           
   593                           ; 1 bytes @ 0x5
   594  0075                     	ds	1
   595  0076                     __Umul8_16@word_mpld:
   596                           
   597                           ; 2 bytes @ 0x6
   598  0076                     	ds	1
   599  0077                     Lcd_Out2@y:
   600                           
   601                           ; 1 bytes @ 0x7
   602  0077                     	ds	1
   603  0078                     ?_fputs:
   604  0078                     Lcd_Out2@data:	
   605                           ; 2 bytes @ 0x8
   606                           
   607  0078                     __Umul8_16@multiplier:	
   608                           ; 1 bytes @ 0x8
   609                           
   610  0078                     ___xxtofl@sign:	
   611                           ; 1 bytes @ 0x8
   612                           
   613  0078                     fputs@fp:	
   614                           ; 1 bytes @ 0x8
   615                           
   616                           
   617                           ; 1 bytes @ 0x8
   618  0078                     	ds	1
   619  0079                     ??_fputs:
   620  0079                     ___xxtofl@exp:	
   621                           ; 1 bytes @ 0x9
   622                           
   623                           
   624                           ; 1 bytes @ 0x9
   625  0079                     	ds	1
   626  007A                     ___xxtofl@arg:
   627                           
   628                           ; 4 bytes @ 0xA
   629  007A                     	ds	2
   630  007C                     ??_pad:
   631                           
   632                           ; 1 bytes @ 0xC
   633  007C                     	ds	1
   634  007D                     ??_sprintf:
   635                           
   636                           ; 1 bytes @ 0xD
   637  007D                     	ds	1
   638                           
   639                           	psect	cstackBANK0
   640  0020                     __pcstackBANK0:
   641  0020                     ?___flmul:
   642  0020                     ?___aodiv:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0020                     ?___aomod:	
   646                           ; 8 bytes @ 0x0
   647                           
   648  0020                     fputs@c:	
   649                           ; 8 bytes @ 0x0
   650                           
   651  0020                     ___flmul@b:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0020                     ___aodiv@divisor:	
   655                           ; 4 bytes @ 0x0
   656                           
   657  0020                     ___aomod@divisor:	
   658                           ; 8 bytes @ 0x0
   659                           
   660                           
   661                           ; 8 bytes @ 0x0
   662  0020                     	ds	1
   663  0021                     fputs@i:
   664                           
   665                           ; 2 bytes @ 0x1
   666  0021                     	ds	2
   667  0023                     fputs@s:
   668                           
   669                           ; 1 bytes @ 0x3
   670  0023                     	ds	1
   671  0024                     ?_pad:
   672  0024                     pad@buf:	
   673                           ; 2 bytes @ 0x4
   674                           
   675  0024                     ___flmul@a:	
   676                           ; 1 bytes @ 0x4
   677                           
   678                           
   679                           ; 4 bytes @ 0x4
   680  0024                     	ds	1
   681  0025                     pad@p:
   682                           
   683                           ; 2 bytes @ 0x5
   684  0025                     	ds	2
   685  0027                     pad@i:
   686                           
   687                           ; 2 bytes @ 0x7
   688  0027                     	ds	1
   689  0028                     ??___flmul:
   690  0028                     ___aodiv@dividend:	
   691                           ; 1 bytes @ 0x8
   692                           
   693  0028                     ___aomod@dividend:	
   694                           ; 8 bytes @ 0x8
   695                           
   696                           
   697                           ; 8 bytes @ 0x8
   698  0028                     	ds	1
   699  0029                     pad@w:
   700                           
   701                           ; 2 bytes @ 0x9
   702  0029                     	ds	2
   703  002B                     pad@fp:
   704                           
   705                           ; 1 bytes @ 0xB
   706  002B                     	ds	2
   707  002D                     ___flmul@sign:
   708                           
   709                           ; 1 bytes @ 0xD
   710  002D                     	ds	1
   711  002E                     ___flmul@grs:
   712                           
   713                           ; 4 bytes @ 0xE
   714  002E                     	ds	2
   715  0030                     ?_dtoa:
   716  0030                     dtoa@d:	
   717                           ; 2 bytes @ 0x10
   718                           
   719                           
   720                           ; 8 bytes @ 0x10
   721  0030                     	ds	2
   722  0032                     ___flmul@aexp:
   723                           
   724                           ; 1 bytes @ 0x12
   725  0032                     	ds	1
   726  0033                     ___flmul@bexp:
   727                           
   728                           ; 1 bytes @ 0x13
   729  0033                     	ds	1
   730  0034                     ___flmul@prod:
   731                           
   732                           ; 4 bytes @ 0x14
   733  0034                     	ds	4
   734  0038                     ??_dtoa:
   735  0038                     ___flmul@temp:	
   736                           ; 1 bytes @ 0x18
   737                           
   738                           
   739                           ; 2 bytes @ 0x18
   740  0038                     	ds	2
   741  003A                     ?___fltol:
   742  003A                     ___fltol@f1:	
   743                           ; 4 bytes @ 0x1A
   744                           
   745                           
   746                           ; 4 bytes @ 0x1A
   747  003A                     	ds	1
   748  003B                     _dtoa$630:
   749                           
   750                           ; 2 bytes @ 0x1B
   751  003B                     	ds	2
   752  003D                     dtoa@fp:
   753                           
   754                           ; 1 bytes @ 0x1D
   755  003D                     	ds	1
   756  003E                     ??___fltol:
   757  003E                     dtoa@p:	
   758                           ; 1 bytes @ 0x1E
   759                           
   760                           
   761                           ; 2 bytes @ 0x1E
   762  003E                     	ds	2
   763  0040                     dtoa@w:
   764                           
   765                           ; 2 bytes @ 0x20
   766  0040                     	ds	2
   767  0042                     dtoa@s:
   768                           
   769                           ; 2 bytes @ 0x22
   770  0042                     	ds	1
   771  0043                     ___fltol@sign1:
   772                           
   773                           ; 1 bytes @ 0x23
   774  0043                     	ds	1
   775  0044                     ___fltol@exp1:
   776  0044                     dtoa@n:	
   777                           ; 1 bytes @ 0x24
   778                           
   779                           
   780                           ; 8 bytes @ 0x24
   781  0044                     	ds	8
   782  004C                     dtoa@i:
   783                           
   784                           ; 2 bytes @ 0x2C
   785  004C                     	ds	2
   786  004E                     ?_vfpfcnvrt:
   787  004E                     vfpfcnvrt@fmt:	
   788                           ; 2 bytes @ 0x2E
   789                           
   790                           
   791                           ; 1 bytes @ 0x2E
   792  004E                     	ds	1
   793  004F                     vfpfcnvrt@ap:
   794                           
   795                           ; 1 bytes @ 0x2F
   796  004F                     	ds	1
   797  0050                     ??_vfpfcnvrt:
   798                           
   799                           ; 1 bytes @ 0x30
   800  0050                     	ds	5
   801  0055                     vfpfcnvrt@ll:
   802                           
   803                           ; 8 bytes @ 0x35
   804  0055                     	ds	8
   805  005D                     vfpfcnvrt@fp:
   806                           
   807                           ; 1 bytes @ 0x3D
   808  005D                     	ds	1
   809  005E                     ?_vfprintf:
   810  005E                     vfprintf@fmt:	
   811                           ; 2 bytes @ 0x3E
   812                           
   813                           
   814                           ; 2 bytes @ 0x3E
   815  005E                     	ds	2
   816  0060                     vfprintf@ap:
   817                           
   818                           ; 1 bytes @ 0x40
   819  0060                     	ds	1
   820  0061                     ??_vfprintf:
   821                           
   822                           ; 1 bytes @ 0x41
   823  0061                     	ds	2
   824  0063                     vfprintf@fp:
   825                           
   826                           ; 1 bytes @ 0x43
   827  0063                     	ds	1
   828  0064                     vfprintf@cfmt:
   829                           
   830                           ; 2 bytes @ 0x44
   831  0064                     	ds	2
   832  0066                     ?_sprintf:
   833  0066                     sprintf@fmt:	
   834                           ; 2 bytes @ 0x46
   835                           
   836                           
   837                           ; 2 bytes @ 0x46
   838  0066                     	ds	4
   839  006A                     ??_ValorDeGenMax:
   840  006A                     ??_mostrargenmax:	
   841                           ; 1 bytes @ 0x4A
   842                           
   843  006A                     ??_mostrarcantidad:	
   844                           ; 1 bytes @ 0x4A
   845                           
   846                           
   847                           ; 1 bytes @ 0x4A
   848  006A                     	ds	2
   849  006C                     ??_main:
   850                           
   851                           ; 1 bytes @ 0x4C
   852  006C                     	ds	1
   853                           
   854                           	psect	maintext
   855  023F                     __pmaintext:	
   856 ;;
   857 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   858 ;;
   859 ;; *************** function _main *****************
   860 ;; Defined at:
   861 ;;		line 141 in file "MAIN.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : B3F/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   875 ;;      Params:         0       0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0
   877 ;;      Temps:          0       1       0       0       0       0       0       0
   878 ;;      Totals:         0       1       0       0       0       0       0       0
   879 ;;Total ram usage:        1 bytes
   880 ;; Hardware stack levels required when called:    9
   881 ;; This function calls:
   882 ;;		_Lcd_Cmd
   883 ;;		_Lcd_Init
   884 ;;		_OSCILLATOR_Initialize
   885 ;;		_PIN_MANAGER_Initialize
   886 ;;		_ValorDeGenMax
   887 ;;		___flmul
   888 ;;		___fltol
   889 ;;		___xxtofl
   890 ;;		_apagarsalidas
   891 ;;		_mostrarcantidad
   892 ;;		_mostrargenmax
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _main
   900  023F                     _main:
   901  023F                     l2240:	
   902                           ;incstack = 0
   903                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   904                           
   905                           
   906                           ;MAIN.c: 142:     PIN_MANAGER_Initialize();
   907  023F  318B  2344  3182   	fcall	_PIN_MANAGER_Initialize
   908  0242                     l2242:
   909                           
   910                           ;MAIN.c: 143:     OSCILLATOR_Initialize();
   911  0242  318B  2333  3182   	fcall	_OSCILLATOR_Initialize
   912  0245                     l2244:
   913                           
   914                           ;MAIN.c: 144:     Lcd_Init();
   915  0245  318D  25A3  3182   	fcall	_Lcd_Init
   916  0248                     l2246:
   917                           
   918                           ;MAIN.c: 145:     Lcd_Cmd(1);
   919  0248  3001               	movlw	1
   920  0249  318E  262F  3182   	fcall	_Lcd_Cmd
   921  024C                     l2248:
   922                           
   923                           ;MAIN.c: 146:     Lcd_Cmd(12);
   924  024C  300C               	movlw	12
   925  024D  318E  262F  3182   	fcall	_Lcd_Cmd
   926                           
   927                           ;MAIN.c: 147:     apagarsalidas();
   928  0250  318B  2338  3182   	fcall	_apagarsalidas
   929  0253                     l2250:
   930                           
   931                           ;MAIN.c: 148:     ValorDeGenMax();
   932  0253  318C  247A  3182   	fcall	_ValorDeGenMax
   933  0256                     l2252:
   934                           
   935                           ;MAIN.c: 149:     Lcd_Cmd(1);
   936  0256  3001               	movlw	1
   937  0257  318E  262F  3182   	fcall	_Lcd_Cmd
   938  025A                     l2254:
   939                           
   940                           ;MAIN.c: 154:         if(PORTCbits.RC0 == 0){
   941  025A  0140               	movlb	0	; select bank0
   942  025B  180E               	btfsc	14,0	;volatile
   943  025C  2A5E               	goto	u2511
   944  025D  2A5F               	goto	u2510
   945  025E                     u2511:
   946  025E  2A74               	goto	l123
   947  025F                     u2510:
   948  025F                     l2256:
   949                           
   950                           ;MAIN.c: 155:            per_max=per_max+2;
   951  025F  086D               	movf	_per_max,w
   952  0260  3E02               	addlw	2
   953  0261  00ED               	movwf	_per_max
   954  0262  3000               	movlw	0
   955  0263  3D6E               	addwfc	_per_max+1,w
   956  0264  00EE               	movwf	_per_max+1
   957  0265                     l2258:
   958                           
   959                           ;MAIN.c: 156:            _delay((unsigned long)((500)*(1000000/4000.0)));
   960  0265  30A3               	movlw	163
   961  0266  0140               	movlb	0	; select bank0
   962  0267  00EC               	movwf	??_main
   963  0268  3055               	movlw	85
   964  0269                     u2597:
   965  0269  0B89               	decfsz	9,f
   966  026A  2A69               	goto	u2597
   967  026B  0BEC               	decfsz	??_main,f
   968  026C  2A69               	goto	u2597
   969  026D                     l2260:
   970                           
   971                           ;MAIN.c: 157:            mostrargenmax();
   972  026D  318B  23D5  3182   	fcall	_mostrargenmax
   973  0270                     l2262:
   974                           
   975                           ;MAIN.c: 158:              apagarsalidas();
   976  0270  318B  2338  3182   	fcall	_apagarsalidas
   977                           
   978                           ;MAIN.c: 160:         }
   979  0273  2AA2               	goto	l2288
   980  0274                     l123:	
   981                           ;MAIN.c: 161:         else if(PORTCbits.RC1 == 0){
   982                           
   983  0274  188E               	btfsc	14,1	;volatile
   984  0275  2A77               	goto	u2521
   985  0276  2A78               	goto	u2520
   986  0277                     u2521:
   987  0277  2A7F               	goto	l125
   988  0278                     u2520:
   989  0278                     l2264:
   990                           
   991                           ;MAIN.c: 162:             per_max=per_max-2;
   992  0278  086D               	movf	_per_max,w
   993  0279  3EFE               	addlw	254
   994  027A  00ED               	movwf	_per_max
   995  027B  30FF               	movlw	255
   996  027C  3D6E               	addwfc	_per_max+1,w
   997  027D  00EE               	movwf	_per_max+1
   998  027E  2A65               	goto	l2258
   999  027F                     l125:	
  1000                           ;MAIN.c: 168:         else if(PORTCbits.RC3 == 0){
  1001                           
  1002  027F  198E               	btfsc	14,3	;volatile
  1003  0280  2A82               	goto	u2531
  1004  0281  2A83               	goto	u2530
  1005  0282                     u2531:
  1006  0282  2A96               	goto	l127
  1007  0283                     u2530:
  1008  0283                     l2272:
  1009                           
  1010                           ;MAIN.c: 169:            cantidad=cantidad+1;
  1011  0283  0141               	movlb	1	; select bank1
  1012  0284  082A               	movf	_cantidad^(0+128),w
  1013  0285  3E01               	addlw	1
  1014  0286  00AA               	movwf	_cantidad^(0+128)
  1015  0287  3000               	movlw	0
  1016  0288  3D2B               	addwfc	(_cantidad+1)^(0+128),w
  1017  0289  00AB               	movwf	(_cantidad+1)^(0+128)
  1018  028A                     l2274:
  1019                           
  1020                           ;MAIN.c: 170:            _delay((unsigned long)((500)*(1000000/4000.0)));
  1021  028A  30A3               	movlw	163
  1022  028B  0140               	movlb	0	; select bank0
  1023  028C  00EC               	movwf	??_main
  1024  028D  3055               	movlw	85
  1025  028E                     u2607:
  1026  028E  0B89               	decfsz	9,f
  1027  028F  2A8E               	goto	u2607
  1028  0290  0BEC               	decfsz	??_main,f
  1029  0291  2A8E               	goto	u2607
  1030  0292                     l2276:
  1031                           
  1032                           ;MAIN.c: 171:            mostrarcantidad();
  1033  0292  318C  2421  3182   	fcall	_mostrarcantidad
  1034  0295  2A70               	goto	l2262
  1035  0296                     l127:	
  1036                           ;MAIN.c: 174:         else if(PORTCbits.RC2 == 0){
  1037                           
  1038  0296  190E               	btfsc	14,2	;volatile
  1039  0297  2A99               	goto	u2541
  1040  0298  2A9A               	goto	u2540
  1041  0299                     u2541:
  1042  0299  2AA2               	goto	l126
  1043  029A                     u2540:
  1044  029A                     l2280:
  1045                           
  1046                           ;MAIN.c: 175:             cantidad=cantidad-1;
  1047  029A  0141               	movlb	1	; select bank1
  1048  029B  082A               	movf	_cantidad^(0+128),w
  1049  029C  3EFF               	addlw	255
  1050  029D  00AA               	movwf	_cantidad^(0+128)
  1051  029E  30FF               	movlw	255
  1052  029F  3D2B               	addwfc	(_cantidad+1)^(0+128),w
  1053  02A0  00AB               	movwf	(_cantidad+1)^(0+128)
  1054  02A1  2A8A               	goto	l2274
  1055  02A2                     l126:
  1056  02A2                     l2288:
  1057                           
  1058                           ;MAIN.c: 180:         mitad=0.5*per_max;
  1059  02A2  0140               	movlb	0	; select bank0
  1060  02A3  086D               	movf	_per_max,w
  1061  02A4  00F0               	movwf	___xxtofl@val
  1062  02A5  086E               	movf	_per_max+1,w
  1063  02A6  00F1               	movwf	___xxtofl@val+1
  1064  02A7  01F2               	clrf	___xxtofl@val+2
  1065  02A8  01F3               	clrf	___xxtofl@val+3
  1066  02A9  3000               	movlw	0
  1067  02AA  318F  2754  3182   	fcall	___xxtofl
  1068  02AD  0873               	movf	?___xxtofl+3,w
  1069  02AE  0140               	movlb	0	; select bank0
  1070  02AF  00A7               	movwf	___flmul@a+3
  1071  02B0  0872               	movf	?___xxtofl+2,w
  1072  02B1  00A6               	movwf	___flmul@a+2
  1073  02B2  0871               	movf	?___xxtofl+1,w
  1074  02B3  00A5               	movwf	___flmul@a+1
  1075  02B4  0870               	movf	?___xxtofl,w
  1076  02B5  00A4               	movwf	___flmul@a
  1077  02B6  303F               	movlw	63
  1078  02B7  00A3               	movwf	___flmul@b+3
  1079  02B8  3000               	movlw	0
  1080  02B9  00A2               	movwf	___flmul@b+2
  1081  02BA  3000               	movlw	0
  1082  02BB  00A1               	movwf	___flmul@b+1
  1083  02BC  3000               	movlw	0
  1084  02BD  00A0               	movwf	___flmul@b
  1085  02BE  3185  259B  3182   	fcall	___flmul
  1086  02C1  0140               	movlb	0	; select bank0
  1087  02C2  0823               	movf	?___flmul+3,w
  1088  02C3  00BD               	movwf	___fltol@f1+3
  1089  02C4  0822               	movf	?___flmul+2,w
  1090  02C5  00BC               	movwf	___fltol@f1+2
  1091  02C6  0821               	movf	?___flmul+1,w
  1092  02C7  00BB               	movwf	___fltol@f1+1
  1093  02C8  0820               	movf	?___flmul,w
  1094  02C9  00BA               	movwf	___fltol@f1
  1095  02CA  3180  2005  3182   	fcall	___fltol
  1096  02CD  0140               	movlb	0	; select bank0
  1097  02CE  083B               	movf	?___fltol+1,w
  1098  02CF  0141               	movlb	1	; select bank1
  1099  02D0  00A9               	movwf	(_mitad+1)^(0+128)
  1100  02D1  0140               	movlb	0	; select bank0
  1101  02D2  083A               	movf	?___fltol,w
  1102  02D3  0141               	movlb	1	; select bank1
  1103  02D4  00A8               	movwf	_mitad^(0+128)
  1104  02D5                     l2290:
  1105                           
  1106                           ;MAIN.c: 181:         if(cantidad < mitad){
  1107  02D5  0829               	movf	(_mitad+1)^(0+128),w
  1108  02D6  022B               	subwf	(_cantidad+1)^(0+128),w
  1109  02D7  1D03               	skipz
  1110  02D8  2ADB               	goto	u2555
  1111  02D9  0828               	movf	_mitad^(0+128),w
  1112  02DA  022A               	subwf	_cantidad^(0+128),w
  1113  02DB                     u2555:
  1114  02DB  1803               	skipnc
  1115  02DC  2ADE               	goto	u2551
  1116  02DD  2ADF               	goto	u2550
  1117  02DE                     u2551:
  1118  02DE  2AED               	goto	l2298
  1119  02DF                     u2550:
  1120  02DF                     l2292:
  1121                           
  1122                           ;MAIN.c: 182:             apagarsalidas();
  1123  02DF  318B  2338  3182   	fcall	_apagarsalidas
  1124  02E2                     l2294:
  1125                           
  1126                           ;MAIN.c: 183:             LATBbits.LATB5 =1;;
  1127  02E2  0140               	movlb	0	; select bank0
  1128  02E3  1699               	bsf	25,5	;volatile
  1129  02E4                     l2296:
  1130                           
  1131                           ;MAIN.c: 184:            _delay((unsigned long)((500)*(1000000/4000.0)));
  1132  02E4  30A3               	movlw	163
  1133  02E5  0140               	movlb	0	; select bank0
  1134  02E6  00EC               	movwf	??_main
  1135  02E7  3055               	movlw	85
  1136  02E8                     u2617:
  1137  02E8  0B89               	decfsz	9,f
  1138  02E9  2AE8               	goto	u2617
  1139  02EA  0BEC               	decfsz	??_main,f
  1140  02EB  2AE8               	goto	u2617
  1141                           
  1142                           ;MAIN.c: 186:         }
  1143  02EC  2A5A               	goto	l2254
  1144  02ED                     l2298:
  1145  02ED  0140               	movlb	0	; select bank0
  1146  02EE  086E               	movf	_per_max+1,w
  1147  02EF  0141               	movlb	1	; select bank1
  1148  02F0  022B               	subwf	(_cantidad+1)^(0+128),w
  1149  02F1  1D03               	skipz
  1150  02F2  2AF7               	goto	u2565
  1151  02F3  0140               	movlb	0	; select bank0
  1152  02F4  086D               	movf	_per_max,w
  1153  02F5  0141               	movlb	1	; select bank1
  1154  02F6  022A               	subwf	_cantidad^(0+128),w
  1155  02F7                     u2565:
  1156  02F7  1803               	skipnc
  1157  02F8  2AFA               	goto	u2561
  1158  02F9  2AFB               	goto	u2560
  1159  02FA                     u2561:
  1160  02FA  2B01               	goto	l2306
  1161  02FB                     u2560:
  1162  02FB                     l2300:
  1163                           
  1164                           ;MAIN.c: 188:             apagarsalidas();
  1165  02FB  318B  2338  3182   	fcall	_apagarsalidas
  1166  02FE                     l2302:
  1167                           
  1168                           ;MAIN.c: 189:             LATAbits.LATA2=1;;
  1169  02FE  0140               	movlb	0	; select bank0
  1170  02FF  1518               	bsf	24,2	;volatile
  1171  0300  2AE4               	goto	l2296
  1172  0301                     l2306:
  1173  0301  082B               	movf	(_cantidad+1)^(0+128),w
  1174  0302  0140               	movlb	0	; select bank0
  1175  0303  026E               	subwf	_per_max+1,w
  1176  0304  1D03               	skipz
  1177  0305  2B0A               	goto	u2575
  1178  0306  0141               	movlb	1	; select bank1
  1179  0307  082A               	movf	_cantidad^(0+128),w
  1180  0308  0140               	movlb	0	; select bank0
  1181  0309  026D               	subwf	_per_max,w
  1182  030A                     u2575:
  1183  030A  1803               	skipnc
  1184  030B  2B0D               	goto	u2571
  1185  030C  2B0E               	goto	u2570
  1186  030D                     u2571:
  1187  030D  2B15               	goto	l2316
  1188  030E                     u2570:
  1189  030E                     l2308:
  1190                           
  1191                           ;MAIN.c: 194:         {;MAIN.c: 195:               apagarsalidas();
  1192  030E  318B  2338  3182   	fcall	_apagarsalidas
  1193  0311                     l2310:
  1194                           
  1195                           ;MAIN.c: 196:             LATAbits.LATA1=1;;
  1196  0311  0140               	movlb	0	; select bank0
  1197  0312  1498               	bsf	24,1	;volatile
  1198  0313                     l2312:
  1199                           
  1200                           ;MAIN.c: 197:             LATBbits.LATB7=1;;
  1201  0313  1799               	bsf	25,7	;volatile
  1202  0314  2AE4               	goto	l2296
  1203  0315                     l2316:
  1204  0315  0141               	movlb	1	; select bank1
  1205  0316  082B               	movf	(_cantidad+1)^(0+128),w
  1206  0317  0140               	movlb	0	; select bank0
  1207  0318  066E               	xorwf	_per_max+1,w
  1208  0319  1D03               	skipz
  1209  031A  2B1F               	goto	u2585
  1210  031B  0141               	movlb	1	; select bank1
  1211  031C  082A               	movf	_cantidad^(0+128),w
  1212  031D  0140               	movlb	0	; select bank0
  1213  031E  066D               	xorwf	_per_max,w
  1214  031F                     u2585:
  1215  031F  1D03               	skipz
  1216  0320  2B22               	goto	u2581
  1217  0321  2B23               	goto	u2580
  1218  0322                     u2581:
  1219  0322  2B29               	goto	l131
  1220  0323                     u2580:
  1221  0323                     l2318:
  1222                           
  1223                           ;MAIN.c: 202:         {;MAIN.c: 203:               apagarsalidas();
  1224  0323  318B  2338  3182   	fcall	_apagarsalidas
  1225  0326                     l2320:
  1226                           
  1227                           ;MAIN.c: 204:             LATAbits.LATA1=1;;
  1228  0326  0140               	movlb	0	; select bank0
  1229  0327  1498               	bsf	24,1	;volatile
  1230  0328  2AE4               	goto	l2296
  1231  0329                     l131:
  1232  0329  2A5A               	goto	l2254
  1233  032A  3180  2802         	ljmp	start
  1234  032C                     __end_of_main:
  1235                           
  1236                           	psect	text1
  1237  0BD5                     __ptext1:	
  1238 ;; *************** function _mostrargenmax *****************
  1239 ;; Defined at:
  1240 ;;		line 120 in file "MAIN.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1254 ;;      Params:         0       0       0       0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0
  1256 ;;      Temps:          0       1       0       0       0       0       0       0
  1257 ;;      Totals:         0       1       0       0       0       0       0       0
  1258 ;;Total ram usage:        1 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    8
  1261 ;; This function calls:
  1262 ;;		_Lcd_Cmd
  1263 ;;		_Lcd_Out2
  1264 ;;		_sprintf
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _mostrargenmax
  1272  0BD5                     _mostrargenmax:
  1273  0BD5                     l1976:	
  1274                           ;incstack = 0
  1275                           ; Regs used in _mostrargenmax: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1276                           
  1277                           
  1278                           ;MAIN.c: 121:     Lcd_Cmd(1);
  1279  0BD5  3001               	movlw	1
  1280  0BD6  318E  262F  318B   	fcall	_Lcd_Cmd
  1281  0BD9                     l1978:
  1282                           
  1283                           ;MAIN.c: 122:     sprintf(tex,"capacidad: %d",per_max);
  1284  0BD9  3010               	movlw	low (STR_3| (0+32768))
  1285  0BDA  0140               	movlb	0	; select bank0
  1286  0BDB  00E6               	movwf	sprintf@fmt
  1287  0BDC  3088               	movlw	high (STR_3| (0+32768))
  1288  0BDD  00E7               	movwf	sprintf@fmt+1
  1289  0BDE  086E               	movf	_per_max+1,w
  1290  0BDF  00E9               	movwf	?_sprintf+3
  1291  0BE0  086D               	movf	_per_max,w
  1292  0BE1  00E8               	movwf	?_sprintf+2
  1293  0BE2  30CC               	movlw	(low (_tex| 0))& (0+255)
  1294  0BE3  318B  23B1  318B   	fcall	_sprintf
  1295  0BE6                     l1980:
  1296                           
  1297                           ;MAIN.c: 123:     Lcd_Out2(2,0,tex);
  1298  0BE6  01F3               	clrf	Lcd_Out2@x
  1299  0BE7  30CC               	movlw	(low (_tex| 0))& (0+255)
  1300  0BE8  0140               	movlb	0	; select bank0
  1301  0BE9  00EA               	movwf	??_mostrargenmax
  1302  0BEA  086A               	movf	??_mostrargenmax,w
  1303  0BEB  00F4               	movwf	Lcd_Out2@buffer
  1304  0BEC  3002               	movlw	2
  1305  0BED  318C  24B2  318B   	fcall	_Lcd_Out2
  1306  0BF0                     l1982:
  1307                           
  1308                           ;MAIN.c: 124:     _delay((unsigned long)((500)*(1000000/4000.0)));
  1309  0BF0  30A3               	movlw	163
  1310  0BF1  0140               	movlb	0	; select bank0
  1311  0BF2  00EA               	movwf	??_mostrargenmax
  1312  0BF3  3055               	movlw	85
  1313  0BF4                     u2627:
  1314  0BF4  0B89               	decfsz	9,f
  1315  0BF5  2BF4               	goto	u2627
  1316  0BF6  0BEA               	decfsz	??_mostrargenmax,f
  1317  0BF7  2BF4               	goto	u2627
  1318  0BF8                     l111:
  1319  0BF8  0008               	return
  1320  0BF9                     __end_of_mostrargenmax:
  1321                           
  1322                           	psect	text2
  1323  0C21                     __ptext2:	
  1324 ;; *************** function _mostrarcantidad *****************
  1325 ;; Defined at:
  1326 ;;		line 126 in file "MAIN.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1340 ;;      Params:         0       0       0       0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0
  1342 ;;      Temps:          0       1       0       0       0       0       0       0
  1343 ;;      Totals:         0       1       0       0       0       0       0       0
  1344 ;;Total ram usage:        1 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    8
  1347 ;; This function calls:
  1348 ;;		_Lcd_Cmd
  1349 ;;		_Lcd_Out2
  1350 ;;		_sprintf
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _mostrarcantidad
  1358  0C21                     _mostrarcantidad:
  1359  0C21                     l1984:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _mostrarcantidad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1362                           
  1363                           
  1364                           ;MAIN.c: 127:     Lcd_Cmd(1);
  1365  0C21  3001               	movlw	1
  1366  0C22  318E  262F  318C   	fcall	_Lcd_Cmd
  1367  0C25                     l1986:
  1368                           
  1369                           ;MAIN.c: 128:     sprintf(tex,"Actual: %d",cantidad);
  1370  0C25  301E               	movlw	low (STR_4| (0+32768))
  1371  0C26  0140               	movlb	0	; select bank0
  1372  0C27  00E6               	movwf	sprintf@fmt
  1373  0C28  3088               	movlw	high (STR_4| (0+32768))
  1374  0C29  00E7               	movwf	sprintf@fmt+1
  1375  0C2A  0141               	movlb	1	; select bank1
  1376  0C2B  082B               	movf	(_cantidad+1)^(0+128),w
  1377  0C2C  0140               	movlb	0	; select bank0
  1378  0C2D  00E9               	movwf	?_sprintf+3
  1379  0C2E  0141               	movlb	1	; select bank1
  1380  0C2F  082A               	movf	_cantidad^(0+128),w
  1381  0C30  0140               	movlb	0	; select bank0
  1382  0C31  00E8               	movwf	?_sprintf+2
  1383  0C32  30CC               	movlw	(low (_tex| 0))& (0+255)
  1384  0C33  318B  23B1  318C   	fcall	_sprintf
  1385  0C36                     l1988:
  1386                           
  1387                           ;MAIN.c: 129:     Lcd_Out2(1,0,tex);
  1388  0C36  01F3               	clrf	Lcd_Out2@x
  1389  0C37  30CC               	movlw	(low (_tex| 0))& (0+255)
  1390  0C38  0140               	movlb	0	; select bank0
  1391  0C39  00EA               	movwf	??_mostrarcantidad
  1392  0C3A  086A               	movf	??_mostrarcantidad,w
  1393  0C3B  00F4               	movwf	Lcd_Out2@buffer
  1394  0C3C  3001               	movlw	1
  1395  0C3D  318C  24B2  318C   	fcall	_Lcd_Out2
  1396  0C40                     l1990:
  1397                           
  1398                           ;MAIN.c: 130:     _delay((unsigned long)((500)*(1000000/4000.0)));
  1399  0C40  30A3               	movlw	163
  1400  0C41  0140               	movlb	0	; select bank0
  1401  0C42  00EA               	movwf	??_mostrarcantidad
  1402  0C43  3055               	movlw	85
  1403  0C44                     u2637:
  1404  0C44  0B89               	decfsz	9,f
  1405  0C45  2C44               	goto	u2637
  1406  0C46  0BEA               	decfsz	??_mostrarcantidad,f
  1407  0C47  2C44               	goto	u2637
  1408  0C48                     l114:
  1409  0C48  0008               	return
  1410  0C49                     __end_of_mostrarcantidad:
  1411                           
  1412                           	psect	text3
  1413  0B38                     __ptext3:	
  1414 ;; *************** function _apagarsalidas *****************
  1415 ;; Defined at:
  1416 ;;		line 134 in file "MAIN.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		None
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1430 ;;      Params:         0       0       0       0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _apagarsalidas
  1445  0B38                     _apagarsalidas:
  1446  0B38                     l1992:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _apagarsalidas: []
  1449                           
  1450                           
  1451                           ;MAIN.c: 135:     LATBbits.LATB5 =0;;
  1452  0B38  0140               	movlb	0	; select bank0
  1453  0B39  1299               	bcf	25,5	;volatile
  1454                           
  1455                           ;MAIN.c: 136:     LATAbits.LATA2=0;;
  1456  0B3A  1118               	bcf	24,2	;volatile
  1457                           
  1458                           ;MAIN.c: 137:     LATAbits.LATA1=0;;
  1459  0B3B  1098               	bcf	24,1	;volatile
  1460                           
  1461                           ;MAIN.c: 138:     LATBbits.LATB7=0;;
  1462  0B3C  1399               	bcf	25,7	;volatile
  1463  0B3D                     l117:
  1464  0B3D  0008               	return
  1465  0B3E                     __end_of_apagarsalidas:
  1466                           
  1467                           	psect	text4
  1468  0F54                     __ptext4:	
  1469 ;; *************** function ___xxtofl *****************
  1470 ;; Defined at:
  1471 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  sign            1    wreg     unsigned char 
  1474 ;;  val             4    0[COMMON] long 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  sign            1    8[COMMON] unsigned char 
  1477 ;;  arg             4   10[COMMON] unsigned long 
  1478 ;;  exp             1    9[COMMON] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  4    0[COMMON] unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1488 ;;      Params:         4       0       0       0       0       0       0       0
  1489 ;;      Locals:         6       0       0       0       0       0       0       0
  1490 ;;      Temps:          4       0       0       0       0       0       0       0
  1491 ;;      Totals:        14       0       0       0       0       0       0       0
  1492 ;;Total ram usage:       14 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function ___xxtofl
  1503  0F54                     ___xxtofl:
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1507                           ;___xxtofl@sign stored from wreg
  1508  0F54  00F8               	movwf	___xxtofl@sign
  1509  0F55                     l2170:
  1510  0F55  0878               	movf	___xxtofl@sign,w
  1511  0F56  1903               	btfsc	3,2
  1512  0F57  2F59               	goto	u2361
  1513  0F58  2F5A               	goto	u2360
  1514  0F59                     u2361:
  1515  0F59  2F6E               	goto	l2176
  1516  0F5A                     u2360:
  1517  0F5A                     l2172:
  1518  0F5A  1FF3               	btfss	___xxtofl@val+3,7
  1519  0F5B  2F5D               	goto	u2371
  1520  0F5C  2F5E               	goto	u2370
  1521  0F5D                     u2371:
  1522  0F5D  2F6E               	goto	l2176
  1523  0F5E                     u2370:
  1524  0F5E                     l2174:
  1525  0F5E  0970               	comf	___xxtofl@val,w
  1526  0F5F  00FA               	movwf	___xxtofl@arg
  1527  0F60  0971               	comf	___xxtofl@val+1,w
  1528  0F61  00FB               	movwf	___xxtofl@arg+1
  1529  0F62  0972               	comf	___xxtofl@val+2,w
  1530  0F63  00FC               	movwf	___xxtofl@arg+2
  1531  0F64  0973               	comf	___xxtofl@val+3,w
  1532  0F65  00FD               	movwf	___xxtofl@arg+3
  1533  0F66  0AFA               	incf	___xxtofl@arg,f
  1534  0F67  1903               	skipnz
  1535  0F68  0AFB               	incf	___xxtofl@arg+1,f
  1536  0F69  1903               	skipnz
  1537  0F6A  0AFC               	incf	___xxtofl@arg+2,f
  1538  0F6B  1903               	skipnz
  1539  0F6C  0AFD               	incf	___xxtofl@arg+3,f
  1540  0F6D  2F76               	goto	l648
  1541  0F6E                     l2176:
  1542  0F6E  0873               	movf	___xxtofl@val+3,w
  1543  0F6F  00FD               	movwf	___xxtofl@arg+3
  1544  0F70  0872               	movf	___xxtofl@val+2,w
  1545  0F71  00FC               	movwf	___xxtofl@arg+2
  1546  0F72  0871               	movf	___xxtofl@val+1,w
  1547  0F73  00FB               	movwf	___xxtofl@arg+1
  1548  0F74  0870               	movf	___xxtofl@val,w
  1549  0F75  00FA               	movwf	___xxtofl@arg
  1550  0F76                     l648:
  1551  0F76  0873               	movf	___xxtofl@val+3,w
  1552  0F77  0472               	iorwf	___xxtofl@val+2,w
  1553  0F78  0471               	iorwf	___xxtofl@val+1,w
  1554  0F79  0470               	iorwf	___xxtofl@val,w
  1555  0F7A  1D03               	skipz
  1556  0F7B  2F7D               	goto	u2381
  1557  0F7C  2F7E               	goto	u2380
  1558  0F7D                     u2381:
  1559  0F7D  2F87               	goto	l2182
  1560  0F7E                     u2380:
  1561  0F7E                     l2178:
  1562  0F7E  3000               	movlw	0
  1563  0F7F  00F3               	movwf	?___xxtofl+3
  1564  0F80  3000               	movlw	0
  1565  0F81  00F2               	movwf	?___xxtofl+2
  1566  0F82  3000               	movlw	0
  1567  0F83  00F1               	movwf	?___xxtofl+1
  1568  0F84  3000               	movlw	0
  1569  0F85  00F0               	movwf	?___xxtofl
  1570  0F86  2FFF               	goto	l650
  1571  0F87                     l2182:
  1572  0F87  3096               	movlw	150
  1573  0F88  00F4               	movwf	??___xxtofl
  1574  0F89  0874               	movf	??___xxtofl,w
  1575  0F8A  00F9               	movwf	___xxtofl@exp
  1576  0F8B  2F97               	goto	l2186
  1577  0F8C                     l2184:
  1578  0F8C  3001               	movlw	1
  1579  0F8D  00F4               	movwf	??___xxtofl
  1580  0F8E  0874               	movf	??___xxtofl,w
  1581  0F8F  07F9               	addwf	___xxtofl@exp,f
  1582  0F90  3001               	movlw	1
  1583  0F91                     u2395:
  1584  0F91  36FD               	lsrf	___xxtofl@arg+3,f
  1585  0F92  0CFC               	rrf	___xxtofl@arg+2,f
  1586  0F93  0CFB               	rrf	___xxtofl@arg+1,f
  1587  0F94  0CFA               	rrf	___xxtofl@arg,f
  1588  0F95  0B89               	decfsz	9,f
  1589  0F96  2F91               	goto	u2395
  1590  0F97                     l2186:
  1591  0F97  30FE               	movlw	254
  1592  0F98  057D               	andwf	___xxtofl@arg+3,w
  1593  0F99  1D03               	btfss	3,2
  1594  0F9A  2F9C               	goto	u2401
  1595  0F9B  2F9D               	goto	u2400
  1596  0F9C                     u2401:
  1597  0F9C  2F8C               	goto	l2184
  1598  0F9D                     u2400:
  1599  0F9D  2FB1               	goto	l654
  1600  0F9E                     l2188:
  1601  0F9E  3001               	movlw	1
  1602  0F9F  00F4               	movwf	??___xxtofl
  1603  0FA0  0874               	movf	??___xxtofl,w
  1604  0FA1  07F9               	addwf	___xxtofl@exp,f
  1605  0FA2                     l2190:
  1606  0FA2  3001               	movlw	1
  1607  0FA3  07FA               	addwf	___xxtofl@arg,f
  1608  0FA4  3000               	movlw	0
  1609  0FA5  3DFB               	addwfc	___xxtofl@arg+1,f
  1610  0FA6  3000               	movlw	0
  1611  0FA7  3DFC               	addwfc	___xxtofl@arg+2,f
  1612  0FA8  3000               	movlw	0
  1613  0FA9  3DFD               	addwfc	___xxtofl@arg+3,f
  1614  0FAA                     l2192:
  1615  0FAA  3001               	movlw	1
  1616  0FAB                     u2415:
  1617  0FAB  36FD               	lsrf	___xxtofl@arg+3,f
  1618  0FAC  0CFC               	rrf	___xxtofl@arg+2,f
  1619  0FAD  0CFB               	rrf	___xxtofl@arg+1,f
  1620  0FAE  0CFA               	rrf	___xxtofl@arg,f
  1621  0FAF  0B89               	decfsz	9,f
  1622  0FB0  2FAB               	goto	u2415
  1623  0FB1                     l654:
  1624  0FB1  30FF               	movlw	255
  1625  0FB2  057D               	andwf	___xxtofl@arg+3,w
  1626  0FB3  1D03               	btfss	3,2
  1627  0FB4  2FB6               	goto	u2421
  1628  0FB5  2FB7               	goto	u2420
  1629  0FB6                     u2421:
  1630  0FB6  2F9E               	goto	l2188
  1631  0FB7                     u2420:
  1632  0FB7  2FC1               	goto	l2196
  1633  0FB8                     l2194:
  1634  0FB8  3001               	movlw	1
  1635  0FB9  02F9               	subwf	___xxtofl@exp,f
  1636  0FBA  3001               	movlw	1
  1637  0FBB                     u2435:
  1638  0FBB  35FA               	lslf	___xxtofl@arg,f
  1639  0FBC  0DFB               	rlf	___xxtofl@arg+1,f
  1640  0FBD  0DFC               	rlf	___xxtofl@arg+2,f
  1641  0FBE  0DFD               	rlf	___xxtofl@arg+3,f
  1642  0FBF  0B89               	decfsz	9,f
  1643  0FC0  2FBB               	goto	u2435
  1644  0FC1                     l2196:
  1645  0FC1  1BFC               	btfsc	___xxtofl@arg+2,7
  1646  0FC2  2FC4               	goto	u2441
  1647  0FC3  2FC5               	goto	u2440
  1648  0FC4                     u2441:
  1649  0FC4  2FCB               	goto	l661
  1650  0FC5                     u2440:
  1651  0FC5                     l2198:
  1652  0FC5  3002               	movlw	2
  1653  0FC6  0279               	subwf	___xxtofl@exp,w
  1654  0FC7  1803               	skipnc
  1655  0FC8  2FCA               	goto	u2451
  1656  0FC9  2FCB               	goto	u2450
  1657  0FCA                     u2451:
  1658  0FCA  2FB8               	goto	l2194
  1659  0FCB                     u2450:
  1660  0FCB                     l661:
  1661  0FCB  1879               	btfsc	___xxtofl@exp,0
  1662  0FCC  2FCE               	goto	u2461
  1663  0FCD  2FCF               	goto	u2460
  1664  0FCE                     u2461:
  1665  0FCE  2FD7               	goto	l662
  1666  0FCF                     u2460:
  1667  0FCF                     l2200:
  1668  0FCF  30FF               	movlw	255
  1669  0FD0  05FA               	andwf	___xxtofl@arg,f
  1670  0FD1  30FF               	movlw	255
  1671  0FD2  05FB               	andwf	___xxtofl@arg+1,f
  1672  0FD3  307F               	movlw	127
  1673  0FD4  05FC               	andwf	___xxtofl@arg+2,f
  1674  0FD5  30FF               	movlw	255
  1675  0FD6  05FD               	andwf	___xxtofl@arg+3,f
  1676  0FD7                     l662:
  1677  0FD7  1003               	clrc
  1678  0FD8  0CF9               	rrf	___xxtofl@exp,f
  1679  0FD9                     l2202:
  1680  0FD9  0879               	movf	___xxtofl@exp,w
  1681  0FDA  00F4               	movwf	??___xxtofl
  1682  0FDB  01F5               	clrf	??___xxtofl+1
  1683  0FDC  01F6               	clrf	??___xxtofl+2
  1684  0FDD  01F7               	clrf	??___xxtofl+3
  1685  0FDE  3018               	movlw	24
  1686  0FDF                     u2475:
  1687  0FDF  35F4               	lslf	??___xxtofl,f
  1688  0FE0  0DF5               	rlf	??___xxtofl+1,f
  1689  0FE1  0DF6               	rlf	??___xxtofl+2,f
  1690  0FE2  0DF7               	rlf	??___xxtofl+3,f
  1691  0FE3                     u2470:
  1692  0FE3  0B89               	decfsz	9,f
  1693  0FE4  2FDF               	goto	u2475
  1694  0FE5  0874               	movf	??___xxtofl,w
  1695  0FE6  04FA               	iorwf	___xxtofl@arg,f
  1696  0FE7  0875               	movf	??___xxtofl+1,w
  1697  0FE8  04FB               	iorwf	___xxtofl@arg+1,f
  1698  0FE9  0876               	movf	??___xxtofl+2,w
  1699  0FEA  04FC               	iorwf	___xxtofl@arg+2,f
  1700  0FEB  0877               	movf	??___xxtofl+3,w
  1701  0FEC  04FD               	iorwf	___xxtofl@arg+3,f
  1702  0FED                     l2204:
  1703  0FED  0878               	movf	___xxtofl@sign,w
  1704  0FEE  1903               	btfsc	3,2
  1705  0FEF  2FF1               	goto	u2481
  1706  0FF0  2FF2               	goto	u2480
  1707  0FF1                     u2481:
  1708  0FF1  2FF7               	goto	l2210
  1709  0FF2                     u2480:
  1710  0FF2                     l2206:
  1711  0FF2  1FF3               	btfss	___xxtofl@val+3,7
  1712  0FF3  2FF5               	goto	u2491
  1713  0FF4  2FF6               	goto	u2490
  1714  0FF5                     u2491:
  1715  0FF5  2FF7               	goto	l2210
  1716  0FF6                     u2490:
  1717  0FF6                     l2208:
  1718  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  1719  0FF7                     l2210:
  1720  0FF7  087D               	movf	___xxtofl@arg+3,w
  1721  0FF8  00F3               	movwf	?___xxtofl+3
  1722  0FF9  087C               	movf	___xxtofl@arg+2,w
  1723  0FFA  00F2               	movwf	?___xxtofl+2
  1724  0FFB  087B               	movf	___xxtofl@arg+1,w
  1725  0FFC  00F1               	movwf	?___xxtofl+1
  1726  0FFD  087A               	movf	___xxtofl@arg,w
  1727  0FFE  00F0               	movwf	?___xxtofl
  1728  0FFF                     l650:
  1729  0FFF  0008               	return
  1730  1000                     __end_of___xxtofl:
  1731                           
  1732                           	psect	text5
  1733  0005                     __ptext5:	
  1734 ;; *************** function ___fltol *****************
  1735 ;; Defined at:
  1736 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  f1              4   26[BANK0 ] unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  exp1            1   36[BANK0 ] unsigned char 
  1741 ;;  sign1           1   35[BANK0 ] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  4   26[BANK0 ] long 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1751 ;;      Params:         0       4       0       0       0       0       0       0
  1752 ;;      Locals:         0       2       0       0       0       0       0       0
  1753 ;;      Temps:          0       5       0       0       0       0       0       0
  1754 ;;      Totals:         0      11       0       0       0       0       0       0
  1755 ;;Total ram usage:       11 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function ___fltol
  1766  0005                     ___fltol:
  1767  0005                     l1994:	
  1768                           ;incstack = 0
  1769                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1770                           
  1771  0005  1003               	clrc
  1772  0006  0140               	movlb	0	; select bank0
  1773  0007  0D3C               	rlf	___fltol@f1+2,w
  1774  0008  0D3D               	rlf	___fltol@f1+3,w
  1775  0009  00BE               	movwf	??___fltol
  1776  000A  083E               	movf	??___fltol,w
  1777  000B  00C4               	movwf	___fltol@exp1
  1778  000C  0844               	movf	___fltol@exp1,w
  1779  000D  1D03               	btfss	3,2
  1780  000E  2810               	goto	u2001
  1781  000F  2811               	goto	u2000
  1782  0010                     u2001:
  1783  0010  281A               	goto	l2000
  1784  0011                     u2000:
  1785  0011                     l1996:
  1786  0011  3000               	movlw	0
  1787  0012  00BD               	movwf	?___fltol+3
  1788  0013  3000               	movlw	0
  1789  0014  00BC               	movwf	?___fltol+2
  1790  0015  3000               	movlw	0
  1791  0016  00BB               	movwf	?___fltol+1
  1792  0017  3000               	movlw	0
  1793  0018  00BA               	movwf	?___fltol
  1794  0019  2879               	goto	l401
  1795  001A                     l2000:
  1796  001A  083A               	movf	___fltol@f1,w
  1797  001B  00BE               	movwf	??___fltol
  1798  001C  083B               	movf	___fltol@f1+1,w
  1799  001D  00BF               	movwf	??___fltol+1
  1800  001E  083C               	movf	___fltol@f1+2,w
  1801  001F  00C0               	movwf	??___fltol+2
  1802  0020  083D               	movf	___fltol@f1+3,w
  1803  0021  00C1               	movwf	??___fltol+3
  1804  0022  301F               	movlw	31
  1805  0023                     u2015:
  1806  0023  36C1               	lsrf	??___fltol+3,f
  1807  0024  0CC0               	rrf	??___fltol+2,f
  1808  0025  0CBF               	rrf	??___fltol+1,f
  1809  0026  0CBE               	rrf	??___fltol,f
  1810  0027                     u2010:
  1811  0027  0B89               	decfsz	9,f
  1812  0028  2823               	goto	u2015
  1813  0029  083E               	movf	??___fltol,w
  1814  002A  00C2               	movwf	??___fltol+4
  1815  002B  0842               	movf	??___fltol+4,w
  1816  002C  00C3               	movwf	___fltol@sign1
  1817  002D                     l2002:
  1818  002D  17BC               	bsf	___fltol@f1+2,7
  1819  002E                     l2004:
  1820  002E  30FF               	movlw	255
  1821  002F  05BA               	andwf	___fltol@f1,f
  1822  0030  30FF               	movlw	255
  1823  0031  05BB               	andwf	___fltol@f1+1,f
  1824  0032  30FF               	movlw	255
  1825  0033  05BC               	andwf	___fltol@f1+2,f
  1826  0034  3000               	movlw	0
  1827  0035  05BD               	andwf	___fltol@f1+3,f
  1828  0036                     l2006:
  1829  0036  3096               	movlw	150
  1830  0037  02C4               	subwf	___fltol@exp1,f
  1831  0038                     l2008:
  1832  0038  1FC4               	btfss	___fltol@exp1,7
  1833  0039  283B               	goto	u2021
  1834  003A  283C               	goto	u2020
  1835  003B                     u2021:
  1836  003B  2854               	goto	l2018
  1837  003C                     u2020:
  1838  003C                     l2010:
  1839  003C  0844               	movf	___fltol@exp1,w
  1840  003D  3A80               	xorlw	128
  1841  003E  3E97               	addlw	151
  1842  003F  1803               	skipnc
  1843  0040  2842               	goto	u2031
  1844  0041  2843               	goto	u2030
  1845  0042                     u2031:
  1846  0042  2844               	goto	l2016
  1847  0043                     u2030:
  1848  0043  2811               	goto	l1996
  1849  0044                     l2016:
  1850  0044  3001               	movlw	1
  1851  0045                     u2045:
  1852  0045  36BD               	lsrf	___fltol@f1+3,f
  1853  0046  0CBC               	rrf	___fltol@f1+2,f
  1854  0047  0CBB               	rrf	___fltol@f1+1,f
  1855  0048  0CBA               	rrf	___fltol@f1,f
  1856  0049  0B89               	decfsz	9,f
  1857  004A  2845               	goto	u2045
  1858  004B  3001               	movlw	1
  1859  004C  00BE               	movwf	??___fltol
  1860  004D  083E               	movf	??___fltol,w
  1861  004E  07C4               	addwf	___fltol@exp1,f
  1862  004F  1D03               	btfss	3,2
  1863  0050  2852               	goto	u2051
  1864  0051  2853               	goto	u2050
  1865  0052                     u2051:
  1866  0052  2844               	goto	l2016
  1867  0053                     u2050:
  1868  0053  2869               	goto	l2026
  1869  0054                     l2018:
  1870  0054  3020               	movlw	32
  1871  0055  0244               	subwf	___fltol@exp1,w
  1872  0056  1C03               	skipc
  1873  0057  2859               	goto	u2061
  1874  0058  285A               	goto	u2060
  1875  0059                     u2061:
  1876  0059  2864               	goto	l408
  1877  005A                     u2060:
  1878  005A  2811               	goto	l1996
  1879  005B                     l2024:
  1880  005B  3001               	movlw	1
  1881  005C                     u2075:
  1882  005C  35BA               	lslf	___fltol@f1,f
  1883  005D  0DBB               	rlf	___fltol@f1+1,f
  1884  005E  0DBC               	rlf	___fltol@f1+2,f
  1885  005F  0DBD               	rlf	___fltol@f1+3,f
  1886  0060  0B89               	decfsz	9,f
  1887  0061  285C               	goto	u2075
  1888  0062  3001               	movlw	1
  1889  0063  02C4               	subwf	___fltol@exp1,f
  1890  0064                     l408:
  1891  0064  0844               	movf	___fltol@exp1,w
  1892  0065  1D03               	btfss	3,2
  1893  0066  2868               	goto	u2081
  1894  0067  2869               	goto	u2080
  1895  0068                     u2081:
  1896  0068  285B               	goto	l2024
  1897  0069                     u2080:
  1898  0069                     l2026:
  1899  0069  0843               	movf	___fltol@sign1,w
  1900  006A  1903               	btfsc	3,2
  1901  006B  286D               	goto	u2091
  1902  006C  286E               	goto	u2090
  1903  006D                     u2091:
  1904  006D  2879               	goto	l411
  1905  006E                     u2090:
  1906  006E                     l2028:
  1907  006E  09BA               	comf	___fltol@f1,f
  1908  006F  09BB               	comf	___fltol@f1+1,f
  1909  0070  09BC               	comf	___fltol@f1+2,f
  1910  0071  09BD               	comf	___fltol@f1+3,f
  1911  0072  0ABA               	incf	___fltol@f1,f
  1912  0073  1903               	skipnz
  1913  0074  0ABB               	incf	___fltol@f1+1,f
  1914  0075  1903               	skipnz
  1915  0076  0ABC               	incf	___fltol@f1+2,f
  1916  0077  1903               	skipnz
  1917  0078  0ABD               	incf	___fltol@f1+3,f
  1918  0079                     l411:
  1919  0079                     l401:
  1920  0079  0008               	return
  1921  007A                     __end_of___fltol:
  1922                           
  1923                           	psect	text6
  1924  059B                     __ptext6:	
  1925 ;; *************** function ___flmul *****************
  1926 ;; Defined at:
  1927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  b               4    0[BANK0 ] long 
  1930 ;;  a               4    4[BANK0 ] long 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  prod            4   20[BANK0 ] struct .
  1933 ;;  grs             4   14[BANK0 ] unsigned long 
  1934 ;;  temp            2   24[BANK0 ] struct .
  1935 ;;  bexp            1   19[BANK0 ] unsigned char 
  1936 ;;  aexp            1   18[BANK0 ] unsigned char 
  1937 ;;  sign            1   13[BANK0 ] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  4    0[BANK0 ] unsigned char 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1947 ;;      Params:         0       8       0       0       0       0       0       0
  1948 ;;      Locals:         0      13       0       0       0       0       0       0
  1949 ;;      Temps:          0       5       0       0       0       0       0       0
  1950 ;;      Totals:         0      26       0       0       0       0       0       0
  1951 ;;Total ram usage:       26 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    1
  1954 ;; This function calls:
  1955 ;;		__Umul8_16
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function ___flmul
  1963  059B                     ___flmul:
  1964  059B                     l2030:	
  1965                           ;incstack = 0
  1966                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  1967                           
  1968  059B  0140               	movlb	0	; select bank0
  1969  059C  0823               	movf	___flmul@b+3,w
  1970  059D  3980               	andlw	128
  1971  059E  00A8               	movwf	??___flmul
  1972  059F  0828               	movf	??___flmul,w
  1973  05A0  00AD               	movwf	___flmul@sign
  1974  05A1                     l2032:
  1975  05A1  3523               	lslf	___flmul@b+3,w
  1976  05A2  00A8               	movwf	??___flmul
  1977  05A3  0828               	movf	??___flmul,w
  1978  05A4  00B3               	movwf	___flmul@bexp
  1979  05A5                     l2034:
  1980  05A5  1FA2               	btfss	___flmul@b+2,7
  1981  05A6  2DA8               	goto	u2101
  1982  05A7  2DA9               	goto	u2100
  1983  05A8                     u2101:
  1984  05A8  2DAA               	goto	l2038
  1985  05A9                     u2100:
  1986  05A9                     l2036:
  1987  05A9  1433               	bsf	___flmul@bexp,0
  1988  05AA                     l2038:
  1989  05AA  0833               	movf	___flmul@bexp,w
  1990  05AB  1903               	btfsc	3,2
  1991  05AC  2DAE               	goto	u2111
  1992  05AD  2DAF               	goto	u2110
  1993  05AE                     u2111:
  1994  05AE  2DBE               	goto	l2046
  1995  05AF                     u2110:
  1996  05AF                     l2040:
  1997  05AF  0A33               	incf	___flmul@bexp,w
  1998  05B0  1D03               	btfss	3,2
  1999  05B1  2DB3               	goto	u2121
  2000  05B2  2DB4               	goto	u2120
  2001  05B3                     u2121:
  2002  05B3  2DBC               	goto	l2044
  2003  05B4                     u2120:
  2004  05B4                     l2042:
  2005  05B4  3000               	movlw	0
  2006  05B5  00A3               	movwf	___flmul@b+3
  2007  05B6  3000               	movlw	0
  2008  05B7  00A2               	movwf	___flmul@b+2
  2009  05B8  3000               	movlw	0
  2010  05B9  00A1               	movwf	___flmul@b+1
  2011  05BA  3000               	movlw	0
  2012  05BB  00A0               	movwf	___flmul@b
  2013  05BC                     l2044:
  2014  05BC  17A2               	bsf	___flmul@b+2,7
  2015  05BD  2DC6               	goto	l2048
  2016  05BE                     l2046:
  2017  05BE  3000               	movlw	0
  2018  05BF  00A3               	movwf	___flmul@b+3
  2019  05C0  3000               	movlw	0
  2020  05C1  00A2               	movwf	___flmul@b+2
  2021  05C2  3000               	movlw	0
  2022  05C3  00A1               	movwf	___flmul@b+1
  2023  05C4  3000               	movlw	0
  2024  05C5  00A0               	movwf	___flmul@b
  2025  05C6                     l2048:
  2026  05C6  0827               	movf	___flmul@a+3,w
  2027  05C7  3980               	andlw	128
  2028  05C8  00A8               	movwf	??___flmul
  2029  05C9  0828               	movf	??___flmul,w
  2030  05CA  06AD               	xorwf	___flmul@sign,f
  2031  05CB                     l2050:
  2032  05CB  3527               	lslf	___flmul@a+3,w
  2033  05CC  00A8               	movwf	??___flmul
  2034  05CD  0828               	movf	??___flmul,w
  2035  05CE  00B2               	movwf	___flmul@aexp
  2036  05CF                     l2052:
  2037  05CF  1FA6               	btfss	___flmul@a+2,7
  2038  05D0  2DD2               	goto	u2131
  2039  05D1  2DD3               	goto	u2130
  2040  05D2                     u2131:
  2041  05D2  2DD4               	goto	l2056
  2042  05D3                     u2130:
  2043  05D3                     l2054:
  2044  05D3  1432               	bsf	___flmul@aexp,0
  2045  05D4                     l2056:
  2046  05D4  0832               	movf	___flmul@aexp,w
  2047  05D5  1903               	btfsc	3,2
  2048  05D6  2DD8               	goto	u2141
  2049  05D7  2DD9               	goto	u2140
  2050  05D8                     u2141:
  2051  05D8  2DE8               	goto	l2064
  2052  05D9                     u2140:
  2053  05D9                     l2058:
  2054  05D9  0A32               	incf	___flmul@aexp,w
  2055  05DA  1D03               	btfss	3,2
  2056  05DB  2DDD               	goto	u2151
  2057  05DC  2DDE               	goto	u2150
  2058  05DD                     u2151:
  2059  05DD  2DE6               	goto	l2062
  2060  05DE                     u2150:
  2061  05DE                     l2060:
  2062  05DE  3000               	movlw	0
  2063  05DF  00A7               	movwf	___flmul@a+3
  2064  05E0  3000               	movlw	0
  2065  05E1  00A6               	movwf	___flmul@a+2
  2066  05E2  3000               	movlw	0
  2067  05E3  00A5               	movwf	___flmul@a+1
  2068  05E4  3000               	movlw	0
  2069  05E5  00A4               	movwf	___flmul@a
  2070  05E6                     l2062:
  2071  05E6  17A6               	bsf	___flmul@a+2,7
  2072  05E7  2DF0               	goto	l2066
  2073  05E8                     l2064:
  2074  05E8  3000               	movlw	0
  2075  05E9  00A7               	movwf	___flmul@a+3
  2076  05EA  3000               	movlw	0
  2077  05EB  00A6               	movwf	___flmul@a+2
  2078  05EC  3000               	movlw	0
  2079  05ED  00A5               	movwf	___flmul@a+1
  2080  05EE  3000               	movlw	0
  2081  05EF  00A4               	movwf	___flmul@a
  2082  05F0                     l2066:
  2083  05F0  0832               	movf	___flmul@aexp,w
  2084  05F1  1903               	btfsc	3,2
  2085  05F2  2DF4               	goto	u2161
  2086  05F3  2DF5               	goto	u2160
  2087  05F4                     u2161:
  2088  05F4  2DFA               	goto	l2070
  2089  05F5                     u2160:
  2090  05F5                     l2068:
  2091  05F5  0833               	movf	___flmul@bexp,w
  2092  05F6  1D03               	btfss	3,2
  2093  05F7  2DF9               	goto	u2171
  2094  05F8  2DFA               	goto	u2170
  2095  05F9                     u2171:
  2096  05F9  2E03               	goto	l2074
  2097  05FA                     u2170:
  2098  05FA                     l2070:
  2099  05FA  3000               	movlw	0
  2100  05FB  00A3               	movwf	?___flmul+3
  2101  05FC  3000               	movlw	0
  2102  05FD  00A2               	movwf	?___flmul+2
  2103  05FE  3000               	movlw	0
  2104  05FF  00A1               	movwf	?___flmul+1
  2105  0600  3000               	movlw	0
  2106  0601  00A0               	movwf	?___flmul
  2107  0602  2FF1               	goto	l604
  2108  0603                     l2074:
  2109  0603  0820               	movf	___flmul@b,w
  2110  0604  00A8               	movwf	??___flmul
  2111  0605  0828               	movf	??___flmul,w
  2112  0606  00F0               	movwf	__Umul8_16@multiplicand
  2113  0607  0826               	movf	___flmul@a+2,w
  2114  0608  318B  238E  3185   	fcall	__Umul8_16
  2115  060B  0871               	movf	?__Umul8_16+1,w
  2116  060C  0140               	movlb	0	; select bank0
  2117  060D  00B9               	movwf	___flmul@temp+1
  2118  060E  0870               	movf	?__Umul8_16,w
  2119  060F  00B8               	movwf	___flmul@temp
  2120  0610                     l2076:
  2121  0610  0838               	movf	___flmul@temp,w
  2122  0611  00A8               	movwf	??___flmul
  2123  0612  01A9               	clrf	??___flmul+1
  2124  0613  01AA               	clrf	??___flmul+2
  2125  0614  01AB               	clrf	??___flmul+3
  2126  0615  082B               	movf	??___flmul+3,w
  2127  0616  00B1               	movwf	___flmul@grs+3
  2128  0617  082A               	movf	??___flmul+2,w
  2129  0618  00B0               	movwf	___flmul@grs+2
  2130  0619  0829               	movf	??___flmul+1,w
  2131  061A  00AF               	movwf	___flmul@grs+1
  2132  061B  0828               	movf	??___flmul,w
  2133  061C  00AE               	movwf	___flmul@grs
  2134  061D                     l2078:
  2135  061D  0839               	movf	___flmul@temp+1,w
  2136  061E  00A8               	movwf	??___flmul
  2137  061F  01A9               	clrf	??___flmul+1
  2138  0620  01AA               	clrf	??___flmul+2
  2139  0621  01AB               	clrf	??___flmul+3
  2140  0622  082B               	movf	??___flmul+3,w
  2141  0623  00B7               	movwf	___flmul@prod+3
  2142  0624  082A               	movf	??___flmul+2,w
  2143  0625  00B6               	movwf	___flmul@prod+2
  2144  0626  0829               	movf	??___flmul+1,w
  2145  0627  00B5               	movwf	___flmul@prod+1
  2146  0628  0828               	movf	??___flmul,w
  2147  0629  00B4               	movwf	___flmul@prod
  2148  062A  0821               	movf	___flmul@b+1,w
  2149  062B  00A8               	movwf	??___flmul
  2150  062C  0828               	movf	??___flmul,w
  2151  062D  00F0               	movwf	__Umul8_16@multiplicand
  2152  062E  0825               	movf	___flmul@a+1,w
  2153  062F  318B  238E  3185   	fcall	__Umul8_16
  2154  0632  0871               	movf	?__Umul8_16+1,w
  2155  0633  0140               	movlb	0	; select bank0
  2156  0634  00B9               	movwf	___flmul@temp+1
  2157  0635  0870               	movf	?__Umul8_16,w
  2158  0636  00B8               	movwf	___flmul@temp
  2159  0637                     l2080:
  2160  0637  0838               	movf	___flmul@temp,w
  2161  0638  00A8               	movwf	??___flmul
  2162  0639  01A9               	clrf	??___flmul+1
  2163  063A  01AA               	clrf	??___flmul+2
  2164  063B  01AB               	clrf	??___flmul+3
  2165  063C  0828               	movf	??___flmul,w
  2166  063D  07AE               	addwf	___flmul@grs,f
  2167  063E  0829               	movf	??___flmul+1,w
  2168  063F  3DAF               	addwfc	___flmul@grs+1,f
  2169  0640  082A               	movf	??___flmul+2,w
  2170  0641  3DB0               	addwfc	___flmul@grs+2,f
  2171  0642  082B               	movf	??___flmul+3,w
  2172  0643  3DB1               	addwfc	___flmul@grs+3,f
  2173  0644                     l2082:
  2174  0644  0839               	movf	___flmul@temp+1,w
  2175  0645  00A8               	movwf	??___flmul
  2176  0646  01A9               	clrf	??___flmul+1
  2177  0647  01AA               	clrf	??___flmul+2
  2178  0648  01AB               	clrf	??___flmul+3
  2179  0649  0828               	movf	??___flmul,w
  2180  064A  07B4               	addwf	___flmul@prod,f
  2181  064B  0829               	movf	??___flmul+1,w
  2182  064C  3DB5               	addwfc	___flmul@prod+1,f
  2183  064D  082A               	movf	??___flmul+2,w
  2184  064E  3DB6               	addwfc	___flmul@prod+2,f
  2185  064F  082B               	movf	??___flmul+3,w
  2186  0650  3DB7               	addwfc	___flmul@prod+3,f
  2187  0651  0822               	movf	___flmul@b+2,w
  2188  0652  00A8               	movwf	??___flmul
  2189  0653  0828               	movf	??___flmul,w
  2190  0654  00F0               	movwf	__Umul8_16@multiplicand
  2191  0655  0824               	movf	___flmul@a,w
  2192  0656  318B  238E  3185   	fcall	__Umul8_16
  2193  0659  0871               	movf	?__Umul8_16+1,w
  2194  065A  0140               	movlb	0	; select bank0
  2195  065B  00B9               	movwf	___flmul@temp+1
  2196  065C  0870               	movf	?__Umul8_16,w
  2197  065D  00B8               	movwf	___flmul@temp
  2198  065E                     l2084:
  2199  065E  0838               	movf	___flmul@temp,w
  2200  065F  00A8               	movwf	??___flmul
  2201  0660  01A9               	clrf	??___flmul+1
  2202  0661  01AA               	clrf	??___flmul+2
  2203  0662  01AB               	clrf	??___flmul+3
  2204  0663  0828               	movf	??___flmul,w
  2205  0664  07AE               	addwf	___flmul@grs,f
  2206  0665  0829               	movf	??___flmul+1,w
  2207  0666  3DAF               	addwfc	___flmul@grs+1,f
  2208  0667  082A               	movf	??___flmul+2,w
  2209  0668  3DB0               	addwfc	___flmul@grs+2,f
  2210  0669  082B               	movf	??___flmul+3,w
  2211  066A  3DB1               	addwfc	___flmul@grs+3,f
  2212  066B                     l2086:
  2213  066B  0839               	movf	___flmul@temp+1,w
  2214  066C  00A8               	movwf	??___flmul
  2215  066D  01A9               	clrf	??___flmul+1
  2216  066E  01AA               	clrf	??___flmul+2
  2217  066F  01AB               	clrf	??___flmul+3
  2218  0670  0828               	movf	??___flmul,w
  2219  0671  07B4               	addwf	___flmul@prod,f
  2220  0672  0829               	movf	??___flmul+1,w
  2221  0673  3DB5               	addwfc	___flmul@prod+1,f
  2222  0674  082A               	movf	??___flmul+2,w
  2223  0675  3DB6               	addwfc	___flmul@prod+2,f
  2224  0676  082B               	movf	??___flmul+3,w
  2225  0677  3DB7               	addwfc	___flmul@prod+3,f
  2226  0678                     l2088:
  2227  0678  3008               	movlw	8
  2228  0679                     u2185:
  2229  0679  35AE               	lslf	___flmul@grs,f
  2230  067A  0DAF               	rlf	___flmul@grs+1,f
  2231  067B  0DB0               	rlf	___flmul@grs+2,f
  2232  067C  0DB1               	rlf	___flmul@grs+3,f
  2233  067D  0B89               	decfsz	9,f
  2234  067E  2E79               	goto	u2185
  2235  067F                     l2090:
  2236  067F  0821               	movf	___flmul@b+1,w
  2237  0680  00A8               	movwf	??___flmul
  2238  0681  0828               	movf	??___flmul,w
  2239  0682  00F0               	movwf	__Umul8_16@multiplicand
  2240  0683  0824               	movf	___flmul@a,w
  2241  0684  318B  238E  3185   	fcall	__Umul8_16
  2242  0687  0871               	movf	?__Umul8_16+1,w
  2243  0688  0140               	movlb	0	; select bank0
  2244  0689  00B9               	movwf	___flmul@temp+1
  2245  068A  0870               	movf	?__Umul8_16,w
  2246  068B  00B8               	movwf	___flmul@temp
  2247  068C                     l2092:
  2248  068C  0838               	movf	___flmul@temp,w
  2249  068D  07AE               	addwf	___flmul@grs,f
  2250  068E  0839               	movf	___flmul@temp+1,w
  2251  068F  3DAF               	addwfc	___flmul@grs+1,f
  2252  0690  3000               	movlw	0
  2253  0691  3DB0               	addwfc	___flmul@grs+2,f
  2254  0692  3DB1               	addwfc	___flmul@grs+3,f
  2255  0693                     l2094:
  2256  0693  0820               	movf	___flmul@b,w
  2257  0694  00A8               	movwf	??___flmul
  2258  0695  0828               	movf	??___flmul,w
  2259  0696  00F0               	movwf	__Umul8_16@multiplicand
  2260  0697  0825               	movf	___flmul@a+1,w
  2261  0698  318B  238E  3185   	fcall	__Umul8_16
  2262  069B  0871               	movf	?__Umul8_16+1,w
  2263  069C  0140               	movlb	0	; select bank0
  2264  069D  00B9               	movwf	___flmul@temp+1
  2265  069E  0870               	movf	?__Umul8_16,w
  2266  069F  00B8               	movwf	___flmul@temp
  2267  06A0                     l2096:
  2268  06A0  0838               	movf	___flmul@temp,w
  2269  06A1  07AE               	addwf	___flmul@grs,f
  2270  06A2  0839               	movf	___flmul@temp+1,w
  2271  06A3  3DAF               	addwfc	___flmul@grs+1,f
  2272  06A4  3000               	movlw	0
  2273  06A5  3DB0               	addwfc	___flmul@grs+2,f
  2274  06A6  3DB1               	addwfc	___flmul@grs+3,f
  2275  06A7                     l2098:
  2276  06A7  3008               	movlw	8
  2277  06A8                     u2195:
  2278  06A8  35AE               	lslf	___flmul@grs,f
  2279  06A9  0DAF               	rlf	___flmul@grs+1,f
  2280  06AA  0DB0               	rlf	___flmul@grs+2,f
  2281  06AB  0DB1               	rlf	___flmul@grs+3,f
  2282  06AC  0B89               	decfsz	9,f
  2283  06AD  2EA8               	goto	u2195
  2284  06AE  0820               	movf	___flmul@b,w
  2285  06AF  00A8               	movwf	??___flmul
  2286  06B0  0828               	movf	??___flmul,w
  2287  06B1  00F0               	movwf	__Umul8_16@multiplicand
  2288  06B2  0824               	movf	___flmul@a,w
  2289  06B3  318B  238E  3185   	fcall	__Umul8_16
  2290  06B6  0871               	movf	?__Umul8_16+1,w
  2291  06B7  0140               	movlb	0	; select bank0
  2292  06B8  00B9               	movwf	___flmul@temp+1
  2293  06B9  0870               	movf	?__Umul8_16,w
  2294  06BA  00B8               	movwf	___flmul@temp
  2295  06BB                     l2100:
  2296  06BB  0838               	movf	___flmul@temp,w
  2297  06BC  07AE               	addwf	___flmul@grs,f
  2298  06BD  0839               	movf	___flmul@temp+1,w
  2299  06BE  3DAF               	addwfc	___flmul@grs+1,f
  2300  06BF  3000               	movlw	0
  2301  06C0  3DB0               	addwfc	___flmul@grs+2,f
  2302  06C1  3DB1               	addwfc	___flmul@grs+3,f
  2303  06C2                     l2102:
  2304  06C2  0821               	movf	___flmul@b+1,w
  2305  06C3  00A8               	movwf	??___flmul
  2306  06C4  0828               	movf	??___flmul,w
  2307  06C5  00F0               	movwf	__Umul8_16@multiplicand
  2308  06C6  0826               	movf	___flmul@a+2,w
  2309  06C7  318B  238E  3185   	fcall	__Umul8_16
  2310  06CA  0871               	movf	?__Umul8_16+1,w
  2311  06CB  0140               	movlb	0	; select bank0
  2312  06CC  00B9               	movwf	___flmul@temp+1
  2313  06CD  0870               	movf	?__Umul8_16,w
  2314  06CE  00B8               	movwf	___flmul@temp
  2315  06CF  0838               	movf	___flmul@temp,w
  2316  06D0  07B4               	addwf	___flmul@prod,f
  2317  06D1  0839               	movf	___flmul@temp+1,w
  2318  06D2  3DB5               	addwfc	___flmul@prod+1,f
  2319  06D3  3000               	movlw	0
  2320  06D4  3DB6               	addwfc	___flmul@prod+2,f
  2321  06D5  3DB7               	addwfc	___flmul@prod+3,f
  2322  06D6                     l2104:
  2323  06D6  0822               	movf	___flmul@b+2,w
  2324  06D7  00A8               	movwf	??___flmul
  2325  06D8  0828               	movf	??___flmul,w
  2326  06D9  00F0               	movwf	__Umul8_16@multiplicand
  2327  06DA  0825               	movf	___flmul@a+1,w
  2328  06DB  318B  238E  3185   	fcall	__Umul8_16
  2329  06DE  0871               	movf	?__Umul8_16+1,w
  2330  06DF  0140               	movlb	0	; select bank0
  2331  06E0  00B9               	movwf	___flmul@temp+1
  2332  06E1  0870               	movf	?__Umul8_16,w
  2333  06E2  00B8               	movwf	___flmul@temp
  2334  06E3                     l2106:
  2335  06E3  0838               	movf	___flmul@temp,w
  2336  06E4  07B4               	addwf	___flmul@prod,f
  2337  06E5  0839               	movf	___flmul@temp+1,w
  2338  06E6  3DB5               	addwfc	___flmul@prod+1,f
  2339  06E7  3000               	movlw	0
  2340  06E8  3DB6               	addwfc	___flmul@prod+2,f
  2341  06E9  3DB7               	addwfc	___flmul@prod+3,f
  2342  06EA  0822               	movf	___flmul@b+2,w
  2343  06EB  00A8               	movwf	??___flmul
  2344  06EC  0828               	movf	??___flmul,w
  2345  06ED  00F0               	movwf	__Umul8_16@multiplicand
  2346  06EE  0826               	movf	___flmul@a+2,w
  2347  06EF  318B  238E  3185   	fcall	__Umul8_16
  2348  06F2  0871               	movf	?__Umul8_16+1,w
  2349  06F3  0140               	movlb	0	; select bank0
  2350  06F4  00B9               	movwf	___flmul@temp+1
  2351  06F5  0870               	movf	?__Umul8_16,w
  2352  06F6  00B8               	movwf	___flmul@temp
  2353  06F7                     l2108:
  2354  06F7  0838               	movf	___flmul@temp,w
  2355  06F8  00A8               	movwf	??___flmul
  2356  06F9  0839               	movf	___flmul@temp+1,w
  2357  06FA  00A9               	movwf	??___flmul+1
  2358  06FB  01AA               	clrf	??___flmul+2
  2359  06FC  01AB               	clrf	??___flmul+3
  2360  06FD  3008               	movlw	8
  2361  06FE                     u2205:
  2362  06FE  35A8               	lslf	??___flmul,f
  2363  06FF  0DA9               	rlf	??___flmul+1,f
  2364  0700  0DAA               	rlf	??___flmul+2,f
  2365  0701  0DAB               	rlf	??___flmul+3,f
  2366  0702                     u2200:
  2367  0702  0B89               	decfsz	9,f
  2368  0703  2EFE               	goto	u2205
  2369  0704  0828               	movf	??___flmul,w
  2370  0705  07B4               	addwf	___flmul@prod,f
  2371  0706  0829               	movf	??___flmul+1,w
  2372  0707  3DB5               	addwfc	___flmul@prod+1,f
  2373  0708  082A               	movf	??___flmul+2,w
  2374  0709  3DB6               	addwfc	___flmul@prod+2,f
  2375  070A  082B               	movf	??___flmul+3,w
  2376  070B  3DB7               	addwfc	___flmul@prod+3,f
  2377  070C                     l2110:
  2378  070C  082E               	movf	___flmul@grs,w
  2379  070D  00A8               	movwf	??___flmul
  2380  070E  082F               	movf	___flmul@grs+1,w
  2381  070F  00A9               	movwf	??___flmul+1
  2382  0710  0830               	movf	___flmul@grs+2,w
  2383  0711  00AA               	movwf	??___flmul+2
  2384  0712  0831               	movf	___flmul@grs+3,w
  2385  0713  00AB               	movwf	??___flmul+3
  2386  0714  3018               	movlw	24
  2387  0715                     u2215:
  2388  0715  36AB               	lsrf	??___flmul+3,f
  2389  0716  0CAA               	rrf	??___flmul+2,f
  2390  0717  0CA9               	rrf	??___flmul+1,f
  2391  0718  0CA8               	rrf	??___flmul,f
  2392  0719                     u2210:
  2393  0719  0B89               	decfsz	9,f
  2394  071A  2F15               	goto	u2215
  2395  071B  0828               	movf	??___flmul,w
  2396  071C  07B4               	addwf	___flmul@prod,f
  2397  071D  0829               	movf	??___flmul+1,w
  2398  071E  3DB5               	addwfc	___flmul@prod+1,f
  2399  071F  082A               	movf	??___flmul+2,w
  2400  0720  3DB6               	addwfc	___flmul@prod+2,f
  2401  0721  082B               	movf	??___flmul+3,w
  2402  0722  3DB7               	addwfc	___flmul@prod+3,f
  2403  0723                     l2112:
  2404  0723  3008               	movlw	8
  2405  0724                     u2225:
  2406  0724  35AE               	lslf	___flmul@grs,f
  2407  0725  0DAF               	rlf	___flmul@grs+1,f
  2408  0726  0DB0               	rlf	___flmul@grs+2,f
  2409  0727  0DB1               	rlf	___flmul@grs+3,f
  2410  0728  0B89               	decfsz	9,f
  2411  0729  2F24               	goto	u2225
  2412  072A                     l2114:
  2413  072A  0833               	movf	___flmul@bexp,w
  2414  072B  0732               	addwf	___flmul@aexp,w
  2415  072C  00A8               	movwf	??___flmul
  2416  072D  01A9               	clrf	??___flmul+1
  2417  072E  0DA9               	rlf	??___flmul+1,f
  2418  072F  0828               	movf	??___flmul,w
  2419  0730  3E82               	addlw	130
  2420  0731  00B8               	movwf	___flmul@temp
  2421  0732  30FF               	movlw	255
  2422  0733  3D29               	addwfc	??___flmul+1,w
  2423  0734  00B9               	movwf	___flmul@temp+1
  2424  0735  2F4D               	goto	l2126
  2425  0736                     l2116:
  2426  0736  3001               	movlw	1
  2427  0737                     u2235:
  2428  0737  35B4               	lslf	___flmul@prod,f
  2429  0738  0DB5               	rlf	___flmul@prod+1,f
  2430  0739  0DB6               	rlf	___flmul@prod+2,f
  2431  073A  0DB7               	rlf	___flmul@prod+3,f
  2432  073B  0B89               	decfsz	9,f
  2433  073C  2F37               	goto	u2235
  2434  073D                     l2118:
  2435  073D  1FB1               	btfss	___flmul@grs+3,7
  2436  073E  2F40               	goto	u2241
  2437  073F  2F41               	goto	u2240
  2438  0740                     u2241:
  2439  0740  2F42               	goto	l2122
  2440  0741                     u2240:
  2441  0741                     l2120:
  2442  0741  1434               	bsf	___flmul@prod,0
  2443  0742                     l2122:
  2444  0742  3001               	movlw	1
  2445  0743                     u2255:
  2446  0743  35AE               	lslf	___flmul@grs,f
  2447  0744  0DAF               	rlf	___flmul@grs+1,f
  2448  0745  0DB0               	rlf	___flmul@grs+2,f
  2449  0746  0DB1               	rlf	___flmul@grs+3,f
  2450  0747  0B89               	decfsz	9,f
  2451  0748  2F43               	goto	u2255
  2452  0749                     l2124:
  2453  0749  30FF               	movlw	255
  2454  074A  07B8               	addwf	___flmul@temp,f
  2455  074B  30FF               	movlw	255
  2456  074C  3DB9               	addwfc	___flmul@temp+1,f
  2457  074D                     l2126:
  2458  074D  1FB6               	btfss	___flmul@prod+2,7
  2459  074E  2F50               	goto	u2261
  2460  074F  2F51               	goto	u2260
  2461  0750                     u2261:
  2462  0750  2F36               	goto	l2116
  2463  0751                     u2260:
  2464  0751                     l2128:
  2465  0751  01B2               	clrf	___flmul@aexp
  2466  0752                     l2130:
  2467  0752  1FB1               	btfss	___flmul@grs+3,7
  2468  0753  2F55               	goto	u2271
  2469  0754  2F56               	goto	u2270
  2470  0755                     u2271:
  2471  0755  2F72               	goto	l2138
  2472  0756                     u2270:
  2473  0756                     l2132:
  2474  0756  30FF               	movlw	255
  2475  0757  052E               	andwf	___flmul@grs,w
  2476  0758  00A8               	movwf	??___flmul
  2477  0759  30FF               	movlw	255
  2478  075A  052F               	andwf	___flmul@grs+1,w
  2479  075B  00A9               	movwf	??___flmul+1
  2480  075C  30FF               	movlw	255
  2481  075D  0530               	andwf	___flmul@grs+2,w
  2482  075E  00AA               	movwf	??___flmul+2
  2483  075F  307F               	movlw	127
  2484  0760  0531               	andwf	___flmul@grs+3,w
  2485  0761  00AB               	movwf	??___flmul+3
  2486  0762  082B               	movf	??___flmul+3,w
  2487  0763  042A               	iorwf	??___flmul+2,w
  2488  0764  0429               	iorwf	??___flmul+1,w
  2489  0765  0428               	iorwf	??___flmul,w
  2490  0766  1903               	skipnz
  2491  0767  2F69               	goto	u2281
  2492  0768  2F6A               	goto	u2280
  2493  0769                     u2281:
  2494  0769  2F6D               	goto	l610
  2495  076A                     u2280:
  2496  076A                     l2134:
  2497  076A  01B2               	clrf	___flmul@aexp
  2498  076B  0AB2               	incf	___flmul@aexp,f
  2499  076C  2F72               	goto	l2138
  2500  076D                     l610:
  2501  076D  1C34               	btfss	___flmul@prod,0
  2502  076E  2F70               	goto	u2291
  2503  076F  2F71               	goto	u2290
  2504  0770                     u2291:
  2505  0770  2F72               	goto	l2138
  2506  0771                     u2290:
  2507  0771  2F6A               	goto	l2134
  2508  0772                     l2138:
  2509  0772  0832               	movf	___flmul@aexp,w
  2510  0773  1903               	btfsc	3,2
  2511  0774  2F76               	goto	u2301
  2512  0775  2F77               	goto	u2300
  2513  0776                     u2301:
  2514  0776  2F9F               	goto	l2148
  2515  0777                     u2300:
  2516  0777                     l2140:
  2517  0777  3001               	movlw	1
  2518  0778  07B4               	addwf	___flmul@prod,f
  2519  0779  3000               	movlw	0
  2520  077A  3DB5               	addwfc	___flmul@prod+1,f
  2521  077B  3000               	movlw	0
  2522  077C  3DB6               	addwfc	___flmul@prod+2,f
  2523  077D  3000               	movlw	0
  2524  077E  3DB7               	addwfc	___flmul@prod+3,f
  2525  077F                     l2142:
  2526  077F  1C37               	btfss	___flmul@prod+3,0
  2527  0780  2F82               	goto	u2311
  2528  0781  2F83               	goto	u2310
  2529  0782                     u2311:
  2530  0782  2F9F               	goto	l2148
  2531  0783                     u2310:
  2532  0783                     l2144:
  2533  0783  0834               	movf	___flmul@prod,w
  2534  0784  00A8               	movwf	??___flmul
  2535  0785  0835               	movf	___flmul@prod+1,w
  2536  0786  00A9               	movwf	??___flmul+1
  2537  0787  0836               	movf	___flmul@prod+2,w
  2538  0788  00AA               	movwf	??___flmul+2
  2539  0789  0837               	movf	___flmul@prod+3,w
  2540  078A  00AB               	movwf	??___flmul+3
  2541  078B  3001               	movlw	1
  2542  078C  00AC               	movwf	??___flmul+4
  2543  078D                     u2325:
  2544  078D  37AB               	asrf	??___flmul+3,f
  2545  078E  0CAA               	rrf	??___flmul+2,f
  2546  078F  0CA9               	rrf	??___flmul+1,f
  2547  0790  0CA8               	rrf	??___flmul,f
  2548  0791                     u2320:
  2549  0791  0BAC               	decfsz	??___flmul+4,f
  2550  0792  2F8D               	goto	u2325
  2551  0793  082B               	movf	??___flmul+3,w
  2552  0794  00B7               	movwf	___flmul@prod+3
  2553  0795  082A               	movf	??___flmul+2,w
  2554  0796  00B6               	movwf	___flmul@prod+2
  2555  0797  0829               	movf	??___flmul+1,w
  2556  0798  00B5               	movwf	___flmul@prod+1
  2557  0799  0828               	movf	??___flmul,w
  2558  079A  00B4               	movwf	___flmul@prod
  2559  079B                     l2146:
  2560  079B  3001               	movlw	1
  2561  079C  07B8               	addwf	___flmul@temp,f
  2562  079D  3000               	movlw	0
  2563  079E  3DB9               	addwfc	___flmul@temp+1,f
  2564  079F                     l2148:
  2565  079F  0839               	movf	___flmul@temp+1,w
  2566  07A0  3A80               	xorlw	128
  2567  07A1  00A8               	movwf	??___flmul
  2568  07A2  3080               	movlw	128
  2569  07A3  0228               	subwf	??___flmul,w
  2570  07A4  1D03               	skipz
  2571  07A5  2FA8               	goto	u2335
  2572  07A6  30FF               	movlw	255
  2573  07A7  0238               	subwf	___flmul@temp,w
  2574  07A8                     u2335:
  2575  07A8  1C03               	skipc
  2576  07A9  2FAB               	goto	u2331
  2577  07AA  2FAC               	goto	u2330
  2578  07AB                     u2331:
  2579  07AB  2FB6               	goto	l2152
  2580  07AC                     u2330:
  2581  07AC                     l2150:
  2582  07AC  307F               	movlw	127
  2583  07AD  0140               	movlb	0	; select bank0
  2584  07AE  00B7               	movwf	___flmul@prod+3
  2585  07AF  3080               	movlw	128
  2586  07B0  00B6               	movwf	___flmul@prod+2
  2587  07B1  3000               	movlw	0
  2588  07B2  00B5               	movwf	___flmul@prod+1
  2589  07B3  3000               	movlw	0
  2590  07B4  00B4               	movwf	___flmul@prod
  2591  07B5  2FE5               	goto	l616
  2592  07B6                     l2152:
  2593  07B6  0140               	movlb	0	; select bank0
  2594  07B7  0839               	movf	___flmul@temp+1,w
  2595  07B8  3A80               	xorlw	128
  2596  07B9  00A8               	movwf	??___flmul
  2597  07BA  3080               	movlw	128
  2598  07BB  0228               	subwf	??___flmul,w
  2599  07BC  1D03               	skipz
  2600  07BD  2FC0               	goto	u2345
  2601  07BE  3001               	movlw	1
  2602  07BF  0238               	subwf	___flmul@temp,w
  2603  07C0                     u2345:
  2604  07C0  1803               	skipnc
  2605  07C1  2FC3               	goto	u2341
  2606  07C2  2FC4               	goto	u2340
  2607  07C3                     u2341:
  2608  07C3  2FCF               	goto	l2158
  2609  07C4                     u2340:
  2610  07C4                     l2154:
  2611  07C4  3000               	movlw	0
  2612  07C5  0140               	movlb	0	; select bank0
  2613  07C6  00B7               	movwf	___flmul@prod+3
  2614  07C7  3000               	movlw	0
  2615  07C8  00B6               	movwf	___flmul@prod+2
  2616  07C9  3000               	movlw	0
  2617  07CA  00B5               	movwf	___flmul@prod+1
  2618  07CB  3000               	movlw	0
  2619  07CC  00B4               	movwf	___flmul@prod
  2620  07CD                     l2156:
  2621  07CD  01AD               	clrf	___flmul@sign
  2622  07CE  2FE5               	goto	l616
  2623  07CF                     l2158:
  2624  07CF  0140               	movlb	0	; select bank0
  2625  07D0  0838               	movf	___flmul@temp,w
  2626  07D1  00A8               	movwf	??___flmul
  2627  07D2  0828               	movf	??___flmul,w
  2628  07D3  00B3               	movwf	___flmul@bexp
  2629  07D4  30FF               	movlw	255
  2630  07D5  05B4               	andwf	___flmul@prod,f
  2631  07D6  30FF               	movlw	255
  2632  07D7  05B5               	andwf	___flmul@prod+1,f
  2633  07D8  307F               	movlw	127
  2634  07D9  05B6               	andwf	___flmul@prod+2,f
  2635  07DA  3000               	movlw	0
  2636  07DB  05B7               	andwf	___flmul@prod+3,f
  2637  07DC                     l2160:
  2638  07DC  1C33               	btfss	___flmul@bexp,0
  2639  07DD  2FDF               	goto	u2351
  2640  07DE  2FE0               	goto	u2350
  2641  07DF                     u2351:
  2642  07DF  2FE1               	goto	l2164
  2643  07E0                     u2350:
  2644  07E0                     l2162:
  2645  07E0  17B6               	bsf	___flmul@prod+2,7
  2646  07E1                     l2164:
  2647  07E1  3633               	lsrf	___flmul@bexp,w
  2648  07E2  00A8               	movwf	??___flmul
  2649  07E3  0828               	movf	??___flmul,w
  2650  07E4  00B7               	movwf	___flmul@prod+3
  2651  07E5                     l616:
  2652  07E5  082D               	movf	___flmul@sign,w
  2653  07E6  00A8               	movwf	??___flmul
  2654  07E7  0828               	movf	??___flmul,w
  2655  07E8  04B7               	iorwf	___flmul@prod+3,f
  2656  07E9                     l2166:
  2657  07E9  0837               	movf	___flmul@prod+3,w
  2658  07EA  00A3               	movwf	?___flmul+3
  2659  07EB  0836               	movf	___flmul@prod+2,w
  2660  07EC  00A2               	movwf	?___flmul+2
  2661  07ED  0835               	movf	___flmul@prod+1,w
  2662  07EE  00A1               	movwf	?___flmul+1
  2663  07EF  0834               	movf	___flmul@prod,w
  2664  07F0  00A0               	movwf	?___flmul
  2665  07F1                     l604:
  2666  07F1  0008               	return
  2667  07F2                     __end_of___flmul:
  2668                           
  2669                           	psect	text7
  2670  0B8E                     __ptext7:	
  2671 ;; *************** function __Umul8_16 *****************
  2672 ;; Defined at:
  2673 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8_16.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  multiplier      1    wreg     unsigned char 
  2676 ;;  multiplicand    1    0[COMMON] unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  multiplier      1    8[COMMON] unsigned char 
  2679 ;;  word_mpld       2    6[COMMON] unsigned int 
  2680 ;;  product         2    4[COMMON] unsigned int 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    0[COMMON] unsigned int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2690 ;;      Params:         2       0       0       0       0       0       0       0
  2691 ;;      Locals:         5       0       0       0       0       0       0       0
  2692 ;;      Temps:          2       0       0       0       0       0       0       0
  2693 ;;      Totals:         9       0       0       0       0       0       0       0
  2694 ;;Total ram usage:        9 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		___flmul
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function __Umul8_16
  2705  0B8E                     __Umul8_16:
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2709                           ;__Umul8_16@multiplier stored from wreg
  2710  0B8E  00F8               	movwf	__Umul8_16@multiplier
  2711  0B8F                     l1904:
  2712  0B8F  01F4               	clrf	__Umul8_16@product
  2713  0B90  01F5               	clrf	__Umul8_16@product+1
  2714  0B91                     l1906:
  2715  0B91  0870               	movf	__Umul8_16@multiplicand,w
  2716  0B92  00F2               	movwf	??__Umul8_16
  2717  0B93  01F3               	clrf	??__Umul8_16+1
  2718  0B94  0872               	movf	??__Umul8_16,w
  2719  0B95  00F6               	movwf	__Umul8_16@word_mpld
  2720  0B96  0873               	movf	??__Umul8_16+1,w
  2721  0B97  00F7               	movwf	__Umul8_16@word_mpld+1
  2722  0B98                     l1908:
  2723  0B98  1C78               	btfss	__Umul8_16@multiplier,0
  2724  0B99  2B9B               	goto	u1961
  2725  0B9A  2B9C               	goto	u1960
  2726  0B9B                     u1961:
  2727  0B9B  2BA0               	goto	l623
  2728  0B9C                     u1960:
  2729  0B9C                     l1910:
  2730  0B9C  0876               	movf	__Umul8_16@word_mpld,w
  2731  0B9D  07F4               	addwf	__Umul8_16@product,f
  2732  0B9E  0877               	movf	__Umul8_16@word_mpld+1,w
  2733  0B9F  3DF5               	addwfc	__Umul8_16@product+1,f
  2734  0BA0                     l623:
  2735  0BA0  3001               	movlw	1
  2736  0BA1                     u1975:
  2737  0BA1  35F6               	lslf	__Umul8_16@word_mpld,f
  2738  0BA2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  2739  0BA3  0B89               	decfsz	9,f
  2740  0BA4  2BA1               	goto	u1975
  2741  0BA5  1003               	clrc
  2742  0BA6  0CF8               	rrf	__Umul8_16@multiplier,f
  2743  0BA7                     l1912:
  2744  0BA7  0878               	movf	__Umul8_16@multiplier,w
  2745  0BA8  1D03               	btfss	3,2
  2746  0BA9  2BAB               	goto	u1981
  2747  0BAA  2BAC               	goto	u1980
  2748  0BAB                     u1981:
  2749  0BAB  2B98               	goto	l1908
  2750  0BAC                     u1980:
  2751  0BAC                     l1914:
  2752  0BAC  0875               	movf	__Umul8_16@product+1,w
  2753  0BAD  00F1               	movwf	?__Umul8_16+1
  2754  0BAE  0874               	movf	__Umul8_16@product,w
  2755  0BAF  00F0               	movwf	?__Umul8_16
  2756  0BB0                     l625:
  2757  0BB0  0008               	return
  2758  0BB1                     __end_of__Umul8_16:
  2759                           
  2760                           	psect	text8
  2761  0C7A                     __ptext8:	
  2762 ;; *************** function _ValorDeGenMax *****************
  2763 ;; Defined at:
  2764 ;;		line 112 in file "MAIN.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2778 ;;      Params:         0       0       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0
  2780 ;;      Temps:          0       2       0       0       0       0       0       0
  2781 ;;      Totals:         0       2       0       0       0       0       0       0
  2782 ;;Total ram usage:        2 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    8
  2785 ;; This function calls:
  2786 ;;		_Lcd_Cmd
  2787 ;;		_Lcd_Out2
  2788 ;;		_sprintf
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _ValorDeGenMax
  2796  0C7A                     _ValorDeGenMax:
  2797  0C7A                     l1964:	
  2798                           ;incstack = 0
  2799                           ; Regs used in _ValorDeGenMax: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2800                           
  2801                           
  2802                           ;MAIN.c: 113:     Lcd_Cmd(1);
  2803  0C7A  3001               	movlw	1
  2804  0C7B  318E  262F  318C   	fcall	_Lcd_Cmd
  2805  0C7E                     l1966:
  2806                           
  2807                           ;MAIN.c: 114:     sprintf(tex,"defina la");
  2808  0C7E  3029               	movlw	low (STR_1| (0+32768))
  2809  0C7F  0140               	movlb	0	; select bank0
  2810  0C80  00E6               	movwf	sprintf@fmt
  2811  0C81  3088               	movlw	high (STR_1| (0+32768))
  2812  0C82  00E7               	movwf	sprintf@fmt+1
  2813  0C83  30CC               	movlw	(low (_tex| 0))& (0+255)
  2814  0C84  318B  23B1  318C   	fcall	_sprintf
  2815  0C87                     l1968:
  2816                           
  2817                           ;MAIN.c: 115:     Lcd_Out2(1,0,tex);
  2818  0C87  01F3               	clrf	Lcd_Out2@x
  2819  0C88  30CC               	movlw	(low (_tex| 0))& (0+255)
  2820  0C89  0140               	movlb	0	; select bank0
  2821  0C8A  00EA               	movwf	??_ValorDeGenMax
  2822  0C8B  086A               	movf	??_ValorDeGenMax,w
  2823  0C8C  00F4               	movwf	Lcd_Out2@buffer
  2824  0C8D  3001               	movlw	1
  2825  0C8E  318C  24B2  318C   	fcall	_Lcd_Out2
  2826  0C91                     l1970:
  2827                           
  2828                           ;MAIN.c: 116:     sprintf(tex,"cantidad maxima");
  2829  0C91  3000               	movlw	low (STR_2| (0+32768))
  2830  0C92  0140               	movlb	0	; select bank0
  2831  0C93  00E6               	movwf	sprintf@fmt
  2832  0C94  3088               	movlw	high (STR_2| (0+32768))
  2833  0C95  00E7               	movwf	sprintf@fmt+1
  2834  0C96  30CC               	movlw	(low (_tex| 0))& (0+255)
  2835  0C97  318B  23B1  318C   	fcall	_sprintf
  2836  0C9A                     l1972:
  2837                           
  2838                           ;MAIN.c: 117:     Lcd_Out2(2,0,tex);
  2839  0C9A  01F3               	clrf	Lcd_Out2@x
  2840  0C9B  30CC               	movlw	(low (_tex| 0))& (0+255)
  2841  0C9C  0140               	movlb	0	; select bank0
  2842  0C9D  00EA               	movwf	??_ValorDeGenMax
  2843  0C9E  086A               	movf	??_ValorDeGenMax,w
  2844  0C9F  00F4               	movwf	Lcd_Out2@buffer
  2845  0CA0  3002               	movlw	2
  2846  0CA1  318C  24B2  318C   	fcall	_Lcd_Out2
  2847  0CA4                     l1974:
  2848                           
  2849                           ;MAIN.c: 118:     _delay((unsigned long)((5000)*(1000000/4000.0)));
  2850  0CA4  3007               	movlw	7
  2851  0CA5  0140               	movlb	0	; select bank0
  2852  0CA6  00EB               	movwf	??_ValorDeGenMax+1
  2853  0CA7  3058               	movlw	88
  2854  0CA8  00EA               	movwf	??_ValorDeGenMax
  2855  0CA9  3059               	movlw	89
  2856  0CAA                     u2647:
  2857  0CAA  0B89               	decfsz	9,f
  2858  0CAB  2CAA               	goto	u2647
  2859  0CAC  0BEA               	decfsz	??_ValorDeGenMax,f
  2860  0CAD  2CAA               	goto	u2647
  2861  0CAE  0BEB               	decfsz	??_ValorDeGenMax+1,f
  2862  0CAF  2CAA               	goto	u2647
  2863  0CB0  3200               	nop2
  2864  0CB1                     l108:
  2865  0CB1  0008               	return
  2866  0CB2                     __end_of_ValorDeGenMax:
  2867                           
  2868                           	psect	text9
  2869  0BB1                     __ptext9:	
  2870 ;; *************** function _sprintf *****************
  2871 ;; Defined at:
  2872 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  s               1    wreg     PTR unsigned char 
  2875 ;;		 -> tex(20), 
  2876 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  2877 ;;		 -> STR_4(11), STR_3(14), STR_2(16), STR_1(10), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  s               1    3[BANK1 ] PTR unsigned char 
  2880 ;;		 -> tex(20), 
  2881 ;;  f               5    4[BANK1 ] struct _IO_FILE
  2882 ;;  ret             2    0        int 
  2883 ;;  ap              1    2[BANK1 ] PTR void [1]
  2884 ;;		 -> ?_sprintf(2), 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2   70[BANK0 ] int 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2894 ;;      Params:         0       4       0       0       0       0       0       0
  2895 ;;      Locals:         0       0       9       0       0       0       0       0
  2896 ;;      Temps:          1       0       0       0       0       0       0       0
  2897 ;;      Totals:         1       4       9       0       0       0       0       0
  2898 ;;Total ram usage:       14 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    7
  2901 ;; This function calls:
  2902 ;;		_vfprintf
  2903 ;; This function is called by:
  2904 ;;		_ValorDeGenMax
  2905 ;;		_mostrargenmax
  2906 ;;		_mostrarcantidad
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _sprintf
  2912  0BB1                     _sprintf:
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2916                           ;sprintf@s stored from wreg
  2917  0BB1  0141               	movlb	1	; select bank1
  2918  0BB2  00E3               	movwf	sprintf@s^(0+128)
  2919  0BB3                     l1892:
  2920  0BB3  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2921  0BB4  00FD               	movwf	??_sprintf
  2922  0BB5  087D               	movf	??_sprintf,w
  2923  0BB6  00E2               	movwf	sprintf@ap^(0+128)
  2924  0BB7  0863               	movf	sprintf@s^(0+128),w
  2925  0BB8  00FD               	movwf	??_sprintf
  2926  0BB9  087D               	movf	??_sprintf,w
  2927  0BBA  00E4               	movwf	sprintf@f^(0+128)
  2928  0BBB                     l1894:
  2929  0BBB  01E5               	clrf	(sprintf@f^(0+128)+1)
  2930  0BBC  01E6               	clrf	((sprintf@f+1)^(0+128)+1)
  2931  0BBD                     l1896:
  2932  0BBD  01E7               	clrf	(sprintf@f^(0+128)+3)
  2933  0BBE  01E8               	clrf	((sprintf@f+1)^(0+128)+3)
  2934  0BBF                     l1898:
  2935  0BBF  0140               	movlb	0	; select bank0
  2936  0BC0  0867               	movf	sprintf@fmt+1,w
  2937  0BC1  00DF               	movwf	vfprintf@fmt+1
  2938  0BC2  0866               	movf	sprintf@fmt,w
  2939  0BC3  00DE               	movwf	vfprintf@fmt
  2940  0BC4  30E2               	movlw	(low (sprintf@ap| 0))& (0+255)
  2941  0BC5  00FD               	movwf	??_sprintf
  2942  0BC6  087D               	movf	??_sprintf,w
  2943  0BC7  00E0               	movwf	vfprintf@ap
  2944  0BC8  30E4               	movlw	(low (sprintf@f| 0))& (0+255)
  2945  0BC9  318C  2449  318B   	fcall	_vfprintf
  2946  0BCC                     l1900:
  2947  0BCC  0141               	movlb	1	; select bank1
  2948  0BCD  0865               	movf	(sprintf@f^(0+128)+1),w
  2949  0BCE  0763               	addwf	sprintf@s^(0+128),w
  2950  0BCF  00FD               	movwf	??_sprintf
  2951  0BD0  087D               	movf	??_sprintf,w
  2952  0BD1  0086               	movwf	6
  2953  0BD2  0187               	clrf	7
  2954  0BD3  0181               	clrf	1
  2955  0BD4                     l670:
  2956  0BD4  0008               	return
  2957  0BD5                     __end_of_sprintf:
  2958                           
  2959                           	psect	text10
  2960  0C49                     __ptext10:	
  2961 ;; *************** function _vfprintf *****************
  2962 ;; Defined at:
  2963 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  fp              1    wreg     PTR struct _IO_FILE
  2966 ;;		 -> sprintf@f(5), 
  2967 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2968 ;;		 -> STR_4(11), STR_3(14), STR_2(16), STR_1(10), 
  2969 ;;  ap              1   64[BANK0 ] PTR PTR void 
  2970 ;;		 -> sprintf@ap(1), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  2973 ;;		 -> sprintf@f(5), 
  2974 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  2975 ;;		 -> STR_4(11), STR_3(14), STR_2(16), STR_1(10), 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2   62[BANK0 ] int 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2985 ;;      Params:         0       3       0       0       0       0       0       0
  2986 ;;      Locals:         0       3       0       0       0       0       0       0
  2987 ;;      Temps:          0       2       0       0       0       0       0       0
  2988 ;;      Totals:         0       8       0       0       0       0       0       0
  2989 ;;Total ram usage:        8 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    6
  2992 ;; This function calls:
  2993 ;;		_vfpfcnvrt
  2994 ;; This function is called by:
  2995 ;;		_sprintf
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _vfprintf
  3001  0C49                     _vfprintf:
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3005                           ;vfprintf@fp stored from wreg
  3006  0C49  0140               	movlb	0	; select bank0
  3007  0C4A  00E3               	movwf	vfprintf@fp
  3008  0C4B                     l1854:
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3011  0C4B  085F               	movf	vfprintf@fmt+1,w
  3012  0C4C  00E5               	movwf	vfprintf@cfmt+1
  3013  0C4D  085E               	movf	vfprintf@fmt,w
  3014  0C4E  00E4               	movwf	vfprintf@cfmt
  3015  0C4F                     l1856:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3018  0C4F  0141               	movlb	1	; select bank1
  3019  0C50  01A0               	clrf	_nout^(0+128)
  3020  0C51  01A1               	clrf	(_nout+1)^(0+128)
  3021                           
  3022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3023  0C52  2C67               	goto	l1860
  3024  0C53                     l1858:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3027  0C53  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3028  0C54  00E1               	movwf	??_vfprintf
  3029  0C55  0861               	movf	??_vfprintf,w
  3030  0C56  00CE               	movwf	vfpfcnvrt@fmt
  3031  0C57  0860               	movf	vfprintf@ap,w
  3032  0C58  00E2               	movwf	??_vfprintf+1
  3033  0C59  0862               	movf	??_vfprintf+1,w
  3034  0C5A  00CF               	movwf	vfpfcnvrt@ap
  3035  0C5B  0863               	movf	vfprintf@fp,w
  3036  0C5C  3180  207A  318C   	fcall	_vfpfcnvrt
  3037  0C5F  0140               	movlb	0	; select bank0
  3038  0C60  084E               	movf	?_vfpfcnvrt,w
  3039  0C61  0141               	movlb	1	; select bank1
  3040  0C62  07A0               	addwf	_nout^(0+128),f
  3041  0C63  0140               	movlb	0	; select bank0
  3042  0C64  084F               	movf	?_vfpfcnvrt+1,w
  3043  0C65  0141               	movlb	1	; select bank1
  3044  0C66  3DA1               	addwfc	(_nout+1)^(0+128),f
  3045  0C67                     l1860:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3048  0C67  0140               	movlb	0	; select bank0
  3049  0C68  0864               	movf	vfprintf@cfmt,w
  3050  0C69  0084               	movwf	4
  3051  0C6A  0865               	movf	vfprintf@cfmt+1,w
  3052  0C6B  0085               	movwf	5
  3053  0C6C  0012               	moviw fsr0++
  3054  0C6D  1D03               	btfss	3,2
  3055  0C6E  2C70               	goto	u1941
  3056  0C6F  2C71               	goto	u1940
  3057  0C70                     u1941:
  3058  0C70  2C53               	goto	l1858
  3059  0C71                     u1940:
  3060  0C71                     l1862:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3063  0C71  0141               	movlb	1	; select bank1
  3064  0C72  0821               	movf	(_nout+1)^(0+128),w
  3065  0C73  0140               	movlb	0	; select bank0
  3066  0C74  00DF               	movwf	?_vfprintf+1
  3067  0C75  0141               	movlb	1	; select bank1
  3068  0C76  0820               	movf	_nout^(0+128),w
  3069  0C77  0140               	movlb	0	; select bank0
  3070  0C78  00DE               	movwf	?_vfprintf
  3071  0C79                     l742:
  3072  0C79  0008               	return
  3073  0C7A                     __end_of_vfprintf:
  3074                           
  3075                           	psect	text11
  3076  007A                     __ptext11:	
  3077 ;; *************** function _vfpfcnvrt *****************
  3078 ;; Defined at:
  3079 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  fp              1    wreg     PTR struct _IO_FILE
  3082 ;;		 -> sprintf@f(5), 
  3083 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3084 ;;		 -> vfprintf@cfmt(2), 
  3085 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3086 ;;		 -> sprintf@ap(1), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3089 ;;		 -> sprintf@f(5), 
  3090 ;;  ll              8   53[BANK0 ] long long 
  3091 ;;  llu             8    0        unsigned long long 
  3092 ;;  f               4    0        unsigned long long 
  3093 ;;  ct              3    0        unsigned char [3]
  3094 ;;  vp              2    0        PTR void 
  3095 ;;  i               2    0        int 
  3096 ;;  done            2    0        int 
  3097 ;;  cp              2    0        PTR unsigned char 
  3098 ;;  c               1    0        unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  2   46[BANK0 ] int 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3108 ;;      Params:         0       2       0       0       0       0       0       0
  3109 ;;      Locals:         0       9       0       0       0       0       0       0
  3110 ;;      Temps:          0       5       0       0       0       0       0       0
  3111 ;;      Totals:         0      16       0       0       0       0       0       0
  3112 ;;Total ram usage:       16 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    5
  3115 ;; This function calls:
  3116 ;;		_dtoa
  3117 ;;		_fputc
  3118 ;; This function is called by:
  3119 ;;		_vfprintf
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _vfpfcnvrt
  3125  007A                     _vfpfcnvrt:
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3129                           ;vfpfcnvrt@fp stored from wreg
  3130  007A  0140               	movlb	0	; select bank0
  3131  007B  00DD               	movwf	vfpfcnvrt@fp
  3132  007C                     l1748:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3135  007C  084E               	movf	vfpfcnvrt@fmt,w
  3136  007D  0086               	movwf	6
  3137  007E  0187               	clrf	7
  3138  007F  3F40               	moviw [0]fsr1
  3139  0080  00D0               	movwf	??_vfpfcnvrt
  3140  0081  3F41               	moviw [1]fsr1
  3141  0082  00D1               	movwf	??_vfpfcnvrt+1
  3142  0083  0850               	movf	??_vfpfcnvrt,w
  3143  0084  0084               	movwf	4
  3144  0085  0851               	movf	??_vfpfcnvrt+1,w
  3145  0086  0085               	movwf	5
  3146  0087  0012               	moviw fsr0++
  3147  0088  3A25               	xorlw	37
  3148  0089  1D03               	btfss	3,2
  3149  008A  288C               	goto	u1781
  3150  008B  288D               	goto	u1780
  3151  008C                     u1781:
  3152  008C  2931               	goto	l1784
  3153  008D                     u1780:
  3154  008D                     l1750:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3157  008D  084E               	movf	vfpfcnvrt@fmt,w
  3158  008E  0086               	movwf	6
  3159  008F  0187               	clrf	7
  3160  0090  3001               	movlw	1
  3161  0091  0781               	addwf	1,f
  3162  0092  3141               	addfsr 1,1
  3163  0093  1803               	skipnc
  3164  0094  0A81               	incf	1,f
  3165  0095                     l1752:
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3168  0095  0141               	movlb	1	; select bank1
  3169  0096  01A2               	clrf	_width^(0+128)
  3170  0097  01A3               	clrf	(_width+1)^(0+128)
  3171  0098  01A6               	clrf	_flags^(0+128)
  3172  0099  01A7               	clrf	(_flags+1)^(0+128)
  3173  009A                     l1754:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3176  009A  30FF               	movlw	255
  3177  009B  00A4               	movwf	_prec^(0+128)
  3178  009C  30FF               	movlw	255
  3179  009D  00A5               	movwf	(_prec^(0+128)+1)
  3180  009E                     l1756:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3183  009E  0140               	movlb	0	; select bank0
  3184  009F  084E               	movf	vfpfcnvrt@fmt,w
  3185  00A0  0086               	movwf	6
  3186  00A1  0187               	clrf	7
  3187  00A2  3F40               	moviw [0]fsr1
  3188  00A3  00D0               	movwf	??_vfpfcnvrt
  3189  00A4  3F41               	moviw [1]fsr1
  3190  00A5  00D1               	movwf	??_vfpfcnvrt+1
  3191  00A6  0850               	movf	??_vfpfcnvrt,w
  3192  00A7  0084               	movwf	4
  3193  00A8  0851               	movf	??_vfpfcnvrt+1,w
  3194  00A9  0085               	movwf	5
  3195  00AA  0012               	moviw fsr0++
  3196  00AB  3A64               	xorlw	100
  3197  00AC  1903               	btfsc	3,2
  3198  00AD  28AF               	goto	u1791
  3199  00AE  28B0               	goto	u1790
  3200  00AF                     u1791:
  3201  00AF  28C1               	goto	l1760
  3202  00B0                     u1790:
  3203  00B0                     l1758:
  3204  00B0  084E               	movf	vfpfcnvrt@fmt,w
  3205  00B1  0086               	movwf	6
  3206  00B2  0187               	clrf	7
  3207  00B3  3F40               	moviw [0]fsr1
  3208  00B4  00D0               	movwf	??_vfpfcnvrt
  3209  00B5  3F41               	moviw [1]fsr1
  3210  00B6  00D1               	movwf	??_vfpfcnvrt+1
  3211  00B7  0850               	movf	??_vfpfcnvrt,w
  3212  00B8  0084               	movwf	4
  3213  00B9  0851               	movf	??_vfpfcnvrt+1,w
  3214  00BA  0085               	movwf	5
  3215  00BB  0012               	moviw fsr0++
  3216  00BC  3A69               	xorlw	105
  3217  00BD  1D03               	btfss	3,2
  3218  00BE  28C0               	goto	u1801
  3219  00BF  28C1               	goto	u1800
  3220  00C0                     u1801:
  3221  00C0  28FC               	goto	l1768
  3222  00C1                     u1800:
  3223  00C1                     l1760:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3226  00C1  084E               	movf	vfpfcnvrt@fmt,w
  3227  00C2  0086               	movwf	6
  3228  00C3  0187               	clrf	7
  3229  00C4  3001               	movlw	1
  3230  00C5  0781               	addwf	1,f
  3231  00C6  3141               	addfsr 1,1
  3232  00C7  1803               	skipnc
  3233  00C8  0A81               	incf	1,f
  3234  00C9                     l1762:
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3237  00C9  084F               	movf	vfpfcnvrt@ap,w
  3238  00CA  0086               	movwf	6
  3239  00CB  0187               	clrf	7
  3240  00CC  0801               	movf	1,w
  3241  00CD  0084               	movwf	4
  3242  00CE  0185               	clrf	5
  3243  00CF  3002               	movlw	2
  3244  00D0  0781               	addwf	1,f
  3245  00D1  3F00               	moviw [0]fsr0
  3246  00D2  00D0               	movwf	??_vfpfcnvrt
  3247  00D3  3F01               	moviw [1]fsr0
  3248  00D4  00D1               	movwf	??_vfpfcnvrt+1
  3249  00D5  0850               	movf	??_vfpfcnvrt,w
  3250  00D6  00D5               	movwf	vfpfcnvrt@ll
  3251  00D7  0851               	movf	??_vfpfcnvrt+1,w
  3252  00D8  00D6               	movwf	vfpfcnvrt@ll+1
  3253  00D9  0D89               	rlf	9,f
  3254  00DA  3B89               	subwfb	9,f
  3255  00DB  0989               	comf	9,f
  3256  00DC  00D7               	movwf	vfpfcnvrt@ll+2
  3257  00DD  00D8               	movwf	vfpfcnvrt@ll+3
  3258  00DE  00D9               	movwf	vfpfcnvrt@ll+4
  3259  00DF  00DA               	movwf	vfpfcnvrt@ll+5
  3260  00E0  00DB               	movwf	vfpfcnvrt@ll+6
  3261  00E1  00DC               	movwf	vfpfcnvrt@ll+7
  3262  00E2                     l1764:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3265  00E2  0855               	movf	vfpfcnvrt@ll,w
  3266  00E3  00B0               	movwf	dtoa@d
  3267  00E4  0856               	movf	vfpfcnvrt@ll+1,w
  3268  00E5  00B1               	movwf	dtoa@d+1
  3269  00E6  0857               	movf	vfpfcnvrt@ll+2,w
  3270  00E7  00B2               	movwf	dtoa@d+2
  3271  00E8  0858               	movf	vfpfcnvrt@ll+3,w
  3272  00E9  00B3               	movwf	dtoa@d+3
  3273  00EA  0859               	movf	vfpfcnvrt@ll+4,w
  3274  00EB  00B4               	movwf	dtoa@d+4
  3275  00EC  085A               	movf	vfpfcnvrt@ll+5,w
  3276  00ED  00B5               	movwf	dtoa@d+5
  3277  00EE  085B               	movf	vfpfcnvrt@ll+6,w
  3278  00EF  00B6               	movwf	dtoa@d+6
  3279  00F0  085C               	movf	vfpfcnvrt@ll+7,w
  3280  00F1  00B7               	movwf	dtoa@d+7
  3281  00F2  085D               	movf	vfpfcnvrt@fp,w
  3282  00F3  3184  242D  3180   	fcall	_dtoa
  3283  00F6  0140               	movlb	0	; select bank0
  3284  00F7  0831               	movf	?_dtoa+1,w
  3285  00F8  00CF               	movwf	?_vfpfcnvrt+1
  3286  00F9  0830               	movf	?_dtoa,w
  3287  00FA  00CE               	movwf	?_vfpfcnvrt
  3288  00FB  2954               	goto	l735
  3289  00FC                     l1768:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3292  00FC  084E               	movf	vfpfcnvrt@fmt,w
  3293  00FD  0086               	movwf	6
  3294  00FE  0187               	clrf	7
  3295  00FF  3F40               	moviw [0]fsr1
  3296  0100  00D0               	movwf	??_vfpfcnvrt
  3297  0101  3F41               	moviw [1]fsr1
  3298  0102  00D1               	movwf	??_vfpfcnvrt+1
  3299  0103  0850               	movf	??_vfpfcnvrt,w
  3300  0104  0084               	movwf	4
  3301  0105  0851               	movf	??_vfpfcnvrt+1,w
  3302  0106  0085               	movwf	5
  3303  0107  0012               	moviw fsr0++
  3304  0108  3A25               	xorlw	37
  3305  0109  1D03               	btfss	3,2
  3306  010A  290C               	goto	u1811
  3307  010B  290D               	goto	u1810
  3308  010C                     u1811:
  3309  010C  2926               	goto	l1778
  3310  010D                     u1810:
  3311  010D                     l1770:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3314  010D  084E               	movf	vfpfcnvrt@fmt,w
  3315  010E  0086               	movwf	6
  3316  010F  0187               	clrf	7
  3317  0110  3001               	movlw	1
  3318  0111  0781               	addwf	1,f
  3319  0112  3141               	addfsr 1,1
  3320  0113  1803               	skipnc
  3321  0114  0A81               	incf	1,f
  3322  0115                     l1772:
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3325  0115  3025               	movlw	37
  3326  0116  00F0               	movwf	fputc@c
  3327  0117  3000               	movlw	0
  3328  0118  00F1               	movwf	fputc@c+1
  3329  0119  085D               	movf	vfpfcnvrt@fp,w
  3330  011A  00D0               	movwf	??_vfpfcnvrt
  3331  011B  0850               	movf	??_vfpfcnvrt,w
  3332  011C  00F2               	movwf	fputc@fp
  3333  011D  318C  24FB  3180   	fcall	_fputc
  3334  0120                     l1774:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3337  0120  3001               	movlw	1
  3338  0121  0140               	movlb	0	; select bank0
  3339  0122  00CE               	movwf	?_vfpfcnvrt
  3340  0123  3000               	movlw	0
  3341  0124  00CF               	movwf	?_vfpfcnvrt+1
  3342  0125  2954               	goto	l735
  3343  0126                     l1778:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3346  0126  084E               	movf	vfpfcnvrt@fmt,w
  3347  0127  0086               	movwf	6
  3348  0128  0187               	clrf	7
  3349  0129  3001               	movlw	1
  3350  012A  0781               	addwf	1,f
  3351  012B  3141               	addfsr 1,1
  3352  012C  1803               	skipnc
  3353  012D  0A81               	incf	1,f
  3354  012E                     l1780:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3357  012E  01CE               	clrf	?_vfpfcnvrt
  3358  012F  01CF               	clrf	?_vfpfcnvrt+1
  3359  0130  2954               	goto	l735
  3360  0131                     l1784:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3363  0131  084E               	movf	vfpfcnvrt@fmt,w
  3364  0132  0086               	movwf	6
  3365  0133  0187               	clrf	7
  3366  0134  3F40               	moviw [0]fsr1
  3367  0135  00D0               	movwf	??_vfpfcnvrt
  3368  0136  3F41               	moviw [1]fsr1
  3369  0137  00D1               	movwf	??_vfpfcnvrt+1
  3370  0138  0850               	movf	??_vfpfcnvrt,w
  3371  0139  0084               	movwf	4
  3372  013A  0851               	movf	??_vfpfcnvrt+1,w
  3373  013B  0085               	movwf	5
  3374  013C  0800               	movf	0,w	;code access
  3375  013D  00D2               	movwf	??_vfpfcnvrt+2
  3376  013E  01D3               	clrf	??_vfpfcnvrt+3
  3377  013F  0852               	movf	??_vfpfcnvrt+2,w
  3378  0140  00F0               	movwf	fputc@c
  3379  0141  0853               	movf	??_vfpfcnvrt+3,w
  3380  0142  00F1               	movwf	fputc@c+1
  3381  0143  085D               	movf	vfpfcnvrt@fp,w
  3382  0144  00D4               	movwf	??_vfpfcnvrt+4
  3383  0145  0854               	movf	??_vfpfcnvrt+4,w
  3384  0146  00F2               	movwf	fputc@fp
  3385  0147  318C  24FB  3180   	fcall	_fputc
  3386  014A                     l1786:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3389  014A  0140               	movlb	0	; select bank0
  3390  014B  084E               	movf	vfpfcnvrt@fmt,w
  3391  014C  0086               	movwf	6
  3392  014D  0187               	clrf	7
  3393  014E  3001               	movlw	1
  3394  014F  0781               	addwf	1,f
  3395  0150  3141               	addfsr 1,1
  3396  0151  1803               	skipnc
  3397  0152  0A81               	incf	1,f
  3398  0153  2920               	goto	l1774
  3399  0154                     l735:
  3400  0154  0008               	return
  3401  0155                     __end_of_vfpfcnvrt:
  3402                           
  3403                           	psect	text12
  3404  042D                     __ptext12:	
  3405 ;; *************** function _dtoa *****************
  3406 ;; Defined at:
  3407 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  fp              1    wreg     PTR struct _IO_FILE
  3410 ;;		 -> sprintf@f(5), 
  3411 ;;  d               8   16[BANK0 ] long long 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3414 ;;		 -> sprintf@f(5), 
  3415 ;;  n               8   36[BANK0 ] long long 
  3416 ;;  i               2   44[BANK0 ] int 
  3417 ;;  s               2   34[BANK0 ] int 
  3418 ;;  w               2   32[BANK0 ] int 
  3419 ;;  p               2   30[BANK0 ] int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   16[BANK0 ] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3429 ;;      Params:         0       8       0       0       0       0       0       0
  3430 ;;      Locals:         0      19       0       0       0       0       0       0
  3431 ;;      Temps:          0       3       0       0       0       0       0       0
  3432 ;;      Totals:         0      30       0       0       0       0       0       0
  3433 ;;Total ram usage:       30 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    4
  3436 ;; This function calls:
  3437 ;;		___aodiv
  3438 ;;		___aomod
  3439 ;;		_abs
  3440 ;;		_pad
  3441 ;; This function is called by:
  3442 ;;		_vfpfcnvrt
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _dtoa
  3448  042D                     _dtoa:
  3449                           
  3450                           ;incstack = 0
  3451                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3452                           ;dtoa@fp stored from wreg
  3453  042D  0140               	movlb	0	; select bank0
  3454  042E  00BD               	movwf	dtoa@fp
  3455  042F                     l1690:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3458  042F  0830               	movf	dtoa@d,w
  3459  0430  00C4               	movwf	dtoa@n
  3460  0431  0831               	movf	dtoa@d+1,w
  3461  0432  00C5               	movwf	dtoa@n+1
  3462  0433  0832               	movf	dtoa@d+2,w
  3463  0434  00C6               	movwf	dtoa@n+2
  3464  0435  0833               	movf	dtoa@d+3,w
  3465  0436  00C7               	movwf	dtoa@n+3
  3466  0437  0834               	movf	dtoa@d+4,w
  3467  0438  00C8               	movwf	dtoa@n+4
  3468  0439  0835               	movf	dtoa@d+5,w
  3469  043A  00C9               	movwf	dtoa@n+5
  3470  043B  0836               	movf	dtoa@d+6,w
  3471  043C  00CA               	movwf	dtoa@n+6
  3472  043D  0837               	movf	dtoa@d+7,w
  3473  043E  00CB               	movwf	dtoa@n+7
  3474  043F                     l1692:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3477  043F  3044               	movlw	low dtoa@n
  3478  0440  0086               	movwf	6
  3479  0441  3000               	movlw	high dtoa@n
  3480  0442  0087               	movwf	7
  3481  0443  3F47               	moviw [7]fsr1
  3482  0444  00B8               	movwf	??_dtoa
  3483  0445  1BB8               	btfsc	??_dtoa,7
  3484  0446  2C48               	goto	u1621
  3485  0447  2C4A               	goto	u1620
  3486  0448                     u1621:
  3487  0448  3001               	movlw	1
  3488  0449  2C4B               	goto	u1630
  3489  044A                     u1620:
  3490  044A  3000               	movlw	0
  3491  044B                     u1630:
  3492  044B  0140               	movlb	0	; select bank0
  3493  044C  00B9               	movwf	??_dtoa+1
  3494  044D  01BA               	clrf	??_dtoa+2
  3495  044E  0839               	movf	??_dtoa+1,w
  3496  044F  00C2               	movwf	dtoa@s
  3497  0450  083A               	movf	??_dtoa+2,w
  3498  0451  00C3               	movwf	dtoa@s+1
  3499  0452                     l1694:
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3502  0452  0842               	movf	dtoa@s,w
  3503  0453  0443               	iorwf	dtoa@s+1,w
  3504  0454  1903               	btfsc	3,2
  3505  0455  2C57               	goto	u1641
  3506  0456  2C58               	goto	u1640
  3507  0457                     u1641:
  3508  0457  2C76               	goto	l705
  3509  0458                     u1640:
  3510  0458                     l1696:
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3513  0458  09C4               	comf	dtoa@n,f
  3514  0459  09C5               	comf	dtoa@n+1,f
  3515  045A  09C6               	comf	dtoa@n+2,f
  3516  045B  09C7               	comf	dtoa@n+3,f
  3517  045C  09C8               	comf	dtoa@n+4,f
  3518  045D  09C9               	comf	dtoa@n+5,f
  3519  045E  09CA               	comf	dtoa@n+6,f
  3520  045F  09CB               	comf	dtoa@n+7,f
  3521  0460  0AC4               	incf	dtoa@n,f
  3522  0461  1D03               	skipz
  3523  0462  2C76               	goto	u165lld
  3524  0463  0AC5               	incf	dtoa@n+1,f
  3525  0464  1D03               	skipz
  3526  0465  2C76               	goto	u165lld
  3527  0466  0AC6               	incf	dtoa@n+2,f
  3528  0467  1D03               	skipz
  3529  0468  2C76               	goto	u165lld
  3530  0469  0AC7               	incf	dtoa@n+3,f
  3531  046A  1D03               	skipz
  3532  046B  2C76               	goto	u165lld
  3533  046C  0AC8               	incf	dtoa@n+4,f
  3534  046D  1D03               	skipz
  3535  046E  2C76               	goto	u165lld
  3536  046F  0AC9               	incf	dtoa@n+5,f
  3537  0470  1D03               	skipz
  3538  0471  2C76               	goto	u165lld
  3539  0472  0ACA               	incf	dtoa@n+6,f
  3540  0473  1D03               	skipz
  3541  0474  2C76               	goto	u165lld
  3542  0475  0ACB               	incf	dtoa@n+7,f
  3543  0476                     u165lld:
  3544  0476                     l705:	
  3545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3546                           
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3549  0476  0141               	movlb	1	; select bank1
  3550  0477  1BA5               	btfsc	(_prec+1)^(0+128),7
  3551  0478  2C7A               	goto	u1661
  3552  0479  2C7B               	goto	u1660
  3553  047A                     u1661:
  3554  047A  2C7F               	goto	l706
  3555  047B                     u1660:
  3556  047B                     l1698:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3559  047B  30FD               	movlw	253
  3560  047C  05A6               	andwf	_flags^(0+128),f
  3561  047D  30FF               	movlw	255
  3562  047E  05A7               	andwf	(_flags+1)^(0+128),f
  3563  047F                     l706:	
  3564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3565                           
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3568  047F  0825               	movf	(_prec+1)^(0+128),w
  3569  0480  3A80               	xorlw	128
  3570  0481  0140               	movlb	0	; select bank0
  3571  0482  00B8               	movwf	??_dtoa
  3572  0483  3080               	movlw	128
  3573  0484  0238               	subwf	??_dtoa,w
  3574  0485  1D03               	skipz
  3575  0486  2C8A               	goto	u1675
  3576  0487  3001               	movlw	1
  3577  0488  0141               	movlb	1	; select bank1
  3578  0489  0224               	subwf	_prec^(0+128),w
  3579  048A                     u1675:
  3580  048A  1803               	skipnc
  3581  048B  2C8D               	goto	u1671
  3582  048C  2C8E               	goto	u1670
  3583  048D                     u1671:
  3584  048D  2C94               	goto	l1702
  3585  048E                     u1670:
  3586  048E                     l1700:
  3587  048E  3001               	movlw	1
  3588  048F  0140               	movlb	0	; select bank0
  3589  0490  00BE               	movwf	dtoa@p
  3590  0491  3000               	movlw	0
  3591  0492  00BF               	movwf	dtoa@p+1
  3592  0493  2C9C               	goto	l710
  3593  0494                     l1702:
  3594  0494  0141               	movlb	1	; select bank1
  3595  0495  0825               	movf	(_prec+1)^(0+128),w
  3596  0496  0140               	movlb	0	; select bank0
  3597  0497  00BF               	movwf	dtoa@p+1
  3598  0498  0141               	movlb	1	; select bank1
  3599  0499  0824               	movf	_prec^(0+128),w
  3600  049A  0140               	movlb	0	; select bank0
  3601  049B  00BE               	movwf	dtoa@p
  3602  049C                     l710:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3605  049C  0141               	movlb	1	; select bank1
  3606  049D  0823               	movf	(_width+1)^(0+128),w
  3607  049E  0140               	movlb	0	; select bank0
  3608  049F  00C1               	movwf	dtoa@w+1
  3609  04A0  0141               	movlb	1	; select bank1
  3610  04A1  0822               	movf	_width^(0+128),w
  3611  04A2  0140               	movlb	0	; select bank0
  3612  04A3  00C0               	movwf	dtoa@w
  3613  04A4                     l1704:
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3616  04A4  0842               	movf	dtoa@s,w
  3617  04A5  0443               	iorwf	dtoa@s+1,w
  3618  04A6  1D03               	btfss	3,2
  3619  04A7  2CA9               	goto	u1681
  3620  04A8  2CAA               	goto	u1680
  3621  04A9                     u1681:
  3622  04A9  2CAF               	goto	l1708
  3623  04AA                     u1680:
  3624  04AA                     l1706:
  3625  04AA  0141               	movlb	1	; select bank1
  3626  04AB  1D26               	btfss	_flags^(0+128),2
  3627  04AC  2CAE               	goto	u1691
  3628  04AD  2CAF               	goto	u1690
  3629  04AE                     u1691:
  3630  04AE  2CB4               	goto	l711
  3631  04AF                     u1690:
  3632  04AF                     l1708:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3635  04AF  30FF               	movlw	255
  3636  04B0  0140               	movlb	0	; select bank0
  3637  04B1  07C0               	addwf	dtoa@w,f
  3638  04B2  30FF               	movlw	255
  3639  04B3  3DC1               	addwfc	dtoa@w+1,f
  3640  04B4                     l711:	
  3641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3642                           
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3645  04B4  301F               	movlw	31
  3646  04B5  0140               	movlb	0	; select bank0
  3647  04B6  00CC               	movwf	dtoa@i
  3648  04B7  3000               	movlw	0
  3649  04B8  00CD               	movwf	dtoa@i+1
  3650  04B9                     l1710:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3653  04B9  0141               	movlb	1	; select bank1
  3654  04BA  01CB               	clrf	(_dbuf^(0+128)+31)
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3657  04BB  2D24               	goto	l714
  3658  04BC                     l1712:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3661  04BC  30FF               	movlw	255
  3662  04BD  0140               	movlb	0	; select bank0
  3663  04BE  07CC               	addwf	dtoa@i,f
  3664  04BF  30FF               	movlw	255
  3665  04C0  3DCD               	addwfc	dtoa@i+1,f
  3666  04C1                     l1714:
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3669  04C1  300A               	movlw	10
  3670  04C2  00A0               	movwf	___aomod@divisor
  3671  04C3  01A1               	clrf	___aomod@divisor+1
  3672  04C4  01A2               	clrf	___aomod@divisor+2
  3673  04C5  01A3               	clrf	___aomod@divisor+3
  3674  04C6  01A4               	clrf	___aomod@divisor+4
  3675  04C7  01A5               	clrf	___aomod@divisor+5
  3676  04C8  01A6               	clrf	___aomod@divisor+6
  3677  04C9  01A7               	clrf	___aomod@divisor+7
  3678  04CA  0844               	movf	dtoa@n,w
  3679  04CB  00A8               	movwf	___aomod@dividend
  3680  04CC  0845               	movf	dtoa@n+1,w
  3681  04CD  00A9               	movwf	___aomod@dividend+1
  3682  04CE  0846               	movf	dtoa@n+2,w
  3683  04CF  00AA               	movwf	___aomod@dividend+2
  3684  04D0  0847               	movf	dtoa@n+3,w
  3685  04D1  00AB               	movwf	___aomod@dividend+3
  3686  04D2  0848               	movf	dtoa@n+4,w
  3687  04D3  00AC               	movwf	___aomod@dividend+4
  3688  04D4  0849               	movf	dtoa@n+5,w
  3689  04D5  00AD               	movwf	___aomod@dividend+5
  3690  04D6  084A               	movf	dtoa@n+6,w
  3691  04D7  00AE               	movwf	___aomod@dividend+6
  3692  04D8  084B               	movf	dtoa@n+7,w
  3693  04D9  00AF               	movwf	___aomod@dividend+7
  3694  04DA  3181  2155  3184   	fcall	___aomod
  3695  04DD  0140               	movlb	0	; select bank0
  3696  04DE  0821               	movf	?___aomod+1,w
  3697  04DF  00F4               	movwf	abs@a+1
  3698  04E0  0820               	movf	?___aomod,w
  3699  04E1  00F3               	movwf	abs@a
  3700  04E2  318B  2374  3184   	fcall	_abs
  3701  04E5  0873               	movf	?_abs,w
  3702  04E6  3E30               	addlw	48
  3703  04E7  0140               	movlb	0	; select bank0
  3704  04E8  00B8               	movwf	??_dtoa
  3705  04E9  084C               	movf	dtoa@i,w
  3706  04EA  3EAC               	addlw	(low (_dbuf| 0))& (0+255)
  3707  04EB  0086               	movwf	6
  3708  04EC  0187               	clrf	7
  3709  04ED  0838               	movf	??_dtoa,w
  3710  04EE  0081               	movwf	1
  3711  04EF                     l1716:
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3714  04EF  30FF               	movlw	255
  3715  04F0  07BE               	addwf	dtoa@p,f
  3716  04F1  30FF               	movlw	255
  3717  04F2  3DBF               	addwfc	dtoa@p+1,f
  3718  04F3                     l1718:
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3721  04F3  30FF               	movlw	255
  3722  04F4  07C0               	addwf	dtoa@w,f
  3723  04F5  30FF               	movlw	255
  3724  04F6  3DC1               	addwfc	dtoa@w+1,f
  3725  04F7                     l1720:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3728  04F7  300A               	movlw	10
  3729  04F8  00A0               	movwf	___aodiv@divisor
  3730  04F9  01A1               	clrf	___aodiv@divisor+1
  3731  04FA  01A2               	clrf	___aodiv@divisor+2
  3732  04FB  01A3               	clrf	___aodiv@divisor+3
  3733  04FC  01A4               	clrf	___aodiv@divisor+4
  3734  04FD  01A5               	clrf	___aodiv@divisor+5
  3735  04FE  01A6               	clrf	___aodiv@divisor+6
  3736  04FF  01A7               	clrf	___aodiv@divisor+7
  3737  0500  0844               	movf	dtoa@n,w
  3738  0501  00A8               	movwf	___aodiv@dividend
  3739  0502  0845               	movf	dtoa@n+1,w
  3740  0503  00A9               	movwf	___aodiv@dividend+1
  3741  0504  0846               	movf	dtoa@n+2,w
  3742  0505  00AA               	movwf	___aodiv@dividend+2
  3743  0506  0847               	movf	dtoa@n+3,w
  3744  0507  00AB               	movwf	___aodiv@dividend+3
  3745  0508  0848               	movf	dtoa@n+4,w
  3746  0509  00AC               	movwf	___aodiv@dividend+4
  3747  050A  0849               	movf	dtoa@n+5,w
  3748  050B  00AD               	movwf	___aodiv@dividend+5
  3749  050C  084A               	movf	dtoa@n+6,w
  3750  050D  00AE               	movwf	___aodiv@dividend+6
  3751  050E  084B               	movf	dtoa@n+7,w
  3752  050F  00AF               	movwf	___aodiv@dividend+7
  3753  0510  3183  232C  3184   	fcall	___aodiv
  3754  0513  0140               	movlb	0	; select bank0
  3755  0514  0820               	movf	?___aodiv,w
  3756  0515  00C4               	movwf	dtoa@n
  3757  0516  0821               	movf	?___aodiv+1,w
  3758  0517  00C5               	movwf	dtoa@n+1
  3759  0518  0822               	movf	?___aodiv+2,w
  3760  0519  00C6               	movwf	dtoa@n+2
  3761  051A  0823               	movf	?___aodiv+3,w
  3762  051B  00C7               	movwf	dtoa@n+3
  3763  051C  0824               	movf	?___aodiv+4,w
  3764  051D  00C8               	movwf	dtoa@n+4
  3765  051E  0825               	movf	?___aodiv+5,w
  3766  051F  00C9               	movwf	dtoa@n+5
  3767  0520  0826               	movf	?___aodiv+6,w
  3768  0521  00CA               	movwf	dtoa@n+6
  3769  0522  0827               	movf	?___aodiv+7,w
  3770  0523  00CB               	movwf	dtoa@n+7
  3771  0524                     l714:	
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  3773                           
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3776  0524  0140               	movlb	0	; select bank0
  3777  0525  084D               	movf	dtoa@i+1,w
  3778  0526  3A80               	xorlw	128
  3779  0527  00B8               	movwf	??_dtoa
  3780  0528  3080               	movlw	128
  3781  0529  0238               	subwf	??_dtoa,w
  3782  052A  1D03               	skipz
  3783  052B  2D2E               	goto	u1705
  3784  052C  3001               	movlw	1
  3785  052D  024C               	subwf	dtoa@i,w
  3786  052E                     u1705:
  3787  052E  1C03               	skipc
  3788  052F  2D31               	goto	u1701
  3789  0530  2D32               	goto	u1700
  3790  0531                     u1701:
  3791  0531  2D5F               	goto	l1730
  3792  0532                     u1700:
  3793  0532                     l1722:
  3794  0532  0140               	movlb	0	; select bank0
  3795  0533  0844               	movf	dtoa@n,w
  3796  0534  0445               	iorwf	dtoa@n+1,w
  3797  0535  0446               	iorwf	dtoa@n+2,w
  3798  0536  0447               	iorwf	dtoa@n+3,w
  3799  0537  0448               	iorwf	dtoa@n+4,w
  3800  0538  0449               	iorwf	dtoa@n+5,w
  3801  0539  044A               	iorwf	dtoa@n+6,w
  3802  053A  044B               	iorwf	dtoa@n+7,w
  3803  053B  1D03               	skipz
  3804  053C  2D3E               	goto	u1711
  3805  053D  2D3F               	goto	u1710
  3806  053E                     u1711:
  3807  053E  2CBC               	goto	l1712
  3808  053F                     u1710:
  3809  053F                     l1724:
  3810  053F  083F               	movf	dtoa@p+1,w
  3811  0540  3A80               	xorlw	128
  3812  0541  00B8               	movwf	??_dtoa
  3813  0542  3080               	movlw	128
  3814  0543  0238               	subwf	??_dtoa,w
  3815  0544  1D03               	skipz
  3816  0545  2D48               	goto	u1725
  3817  0546  3001               	movlw	1
  3818  0547  023E               	subwf	dtoa@p,w
  3819  0548                     u1725:
  3820  0548  1803               	skipnc
  3821  0549  2D4B               	goto	u1721
  3822  054A  2D4C               	goto	u1720
  3823  054B                     u1721:
  3824  054B  2CBC               	goto	l1712
  3825  054C                     u1720:
  3826  054C                     l1726:
  3827  054C  0140               	movlb	0	; select bank0
  3828  054D  0841               	movf	dtoa@w+1,w
  3829  054E  3A80               	xorlw	128
  3830  054F  00B8               	movwf	??_dtoa
  3831  0550  3080               	movlw	128
  3832  0551  0238               	subwf	??_dtoa,w
  3833  0552  1D03               	skipz
  3834  0553  2D56               	goto	u1735
  3835  0554  3001               	movlw	1
  3836  0555  0240               	subwf	dtoa@w,w
  3837  0556                     u1735:
  3838  0556  1C03               	skipc
  3839  0557  2D59               	goto	u1731
  3840  0558  2D5A               	goto	u1730
  3841  0559                     u1731:
  3842  0559  2D5F               	goto	l1730
  3843  055A                     u1730:
  3844  055A                     l1728:
  3845  055A  0141               	movlb	1	; select bank1
  3846  055B  18A6               	btfsc	_flags^(0+128),1
  3847  055C  2D5E               	goto	u1741
  3848  055D  2D5F               	goto	u1740
  3849  055E                     u1741:
  3850  055E  2CBC               	goto	l1712
  3851  055F                     u1740:
  3852  055F                     l1730:
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3855  055F  0140               	movlb	0	; select bank0
  3856  0560  0842               	movf	dtoa@s,w
  3857  0561  0443               	iorwf	dtoa@s+1,w
  3858  0562  1D03               	btfss	3,2
  3859  0563  2D65               	goto	u1751
  3860  0564  2D66               	goto	u1750
  3861  0565                     u1751:
  3862  0565  2D6B               	goto	l1734
  3863  0566                     u1750:
  3864  0566                     l1732:
  3865  0566  0141               	movlb	1	; select bank1
  3866  0567  1D26               	btfss	_flags^(0+128),2
  3867  0568  2D6A               	goto	u1761
  3868  0569  2D6B               	goto	u1760
  3869  056A                     u1761:
  3870  056A  2D87               	goto	l1744
  3871  056B                     u1760:
  3872  056B                     l1734:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  3875  056B  30FF               	movlw	255
  3876  056C  0140               	movlb	0	; select bank0
  3877  056D  07CC               	addwf	dtoa@i,f
  3878  056E  30FF               	movlw	255
  3879  056F  3DCD               	addwfc	dtoa@i+1,f
  3880  0570                     l1736:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3883  0570  0842               	movf	dtoa@s,w
  3884  0571  0443               	iorwf	dtoa@s+1,w
  3885  0572  1D03               	btfss	3,2
  3886  0573  2D75               	goto	u1771
  3887  0574  2D76               	goto	u1770
  3888  0575                     u1771:
  3889  0575  2D7B               	goto	l1740
  3890  0576                     u1770:
  3891  0576                     l1738:
  3892  0576  302B               	movlw	43
  3893  0577  00BB               	movwf	_dtoa$630
  3894  0578  3000               	movlw	0
  3895  0579  00BC               	movwf	_dtoa$630+1
  3896  057A  2D7F               	goto	l1742
  3897  057B                     l1740:
  3898  057B  302D               	movlw	45
  3899  057C  00BB               	movwf	_dtoa$630
  3900  057D  3000               	movlw	0
  3901  057E  00BC               	movwf	_dtoa$630+1
  3902  057F                     l1742:
  3903  057F  083B               	movf	_dtoa$630,w
  3904  0580  00B8               	movwf	??_dtoa
  3905  0581  084C               	movf	dtoa@i,w
  3906  0582  3EAC               	addlw	(low (_dbuf| 0))& (0+255)
  3907  0583  0086               	movwf	6
  3908  0584  0187               	clrf	7
  3909  0585  0838               	movf	??_dtoa,w
  3910  0586  0081               	movwf	1
  3911  0587                     l1744:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3914  0587  0140               	movlb	0	; select bank0
  3915  0588  084C               	movf	dtoa@i,w
  3916  0589  3EAC               	addlw	(low (_dbuf| 0))& (0+255)
  3917  058A  00B8               	movwf	??_dtoa
  3918  058B  0838               	movf	??_dtoa,w
  3919  058C  00A4               	movwf	pad@buf
  3920  058D  0841               	movf	dtoa@w+1,w
  3921  058E  00A6               	movwf	pad@p+1
  3922  058F  0840               	movf	dtoa@w,w
  3923  0590  00A5               	movwf	pad@p
  3924  0591  083D               	movf	dtoa@fp,w
  3925  0592  318D  254A  3184   	fcall	_pad
  3926  0595  0140               	movlb	0	; select bank0
  3927  0596  0825               	movf	?_pad+1,w
  3928  0597  00B1               	movwf	?_dtoa+1
  3929  0598  0824               	movf	?_pad,w
  3930  0599  00B0               	movwf	?_dtoa
  3931  059A                     l728:
  3932  059A  0008               	return
  3933  059B                     __end_of_dtoa:
  3934                           
  3935                           	psect	text13
  3936  0D4A                     __ptext13:	
  3937 ;; *************** function _pad *****************
  3938 ;; Defined at:
  3939 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  fp              1    wreg     PTR struct _IO_FILE
  3942 ;;		 -> sprintf@f(5), 
  3943 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3944 ;;		 -> dbuf(32), 
  3945 ;;  p               2    5[BANK0 ] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  3948 ;;		 -> sprintf@f(5), 
  3949 ;;  w               2    9[BANK0 ] int 
  3950 ;;  i               2    7[BANK0 ] int 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2    4[BANK0 ] int 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3960 ;;      Params:         0       3       0       0       0       0       0       0
  3961 ;;      Locals:         0       5       0       0       0       0       0       0
  3962 ;;      Temps:          1       0       0       0       0       0       0       0
  3963 ;;      Totals:         1       8       0       0       0       0       0       0
  3964 ;;Total ram usage:        9 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    3
  3967 ;; This function calls:
  3968 ;;		_fputc
  3969 ;;		_fputs
  3970 ;;		_strlen
  3971 ;; This function is called by:
  3972 ;;		_dtoa
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           
  3977                           ;psect for function _pad
  3978  0D4A                     _pad:
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3982                           ;pad@fp stored from wreg
  3983  0D4A  0140               	movlb	0	; select bank0
  3984  0D4B  00AB               	movwf	pad@fp
  3985  0D4C                     l1664:
  3986                           
  3987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3988  0D4C  0141               	movlb	1	; select bank1
  3989  0D4D  1C26               	btfss	_flags^(0+128),0
  3990  0D4E  2D50               	goto	u1571
  3991  0D4F  2D51               	goto	u1570
  3992  0D50                     u1571:
  3993  0D50  2D5A               	goto	l1668
  3994  0D51                     u1570:
  3995  0D51                     l1666:
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3998  0D51  0140               	movlb	0	; select bank0
  3999  0D52  082B               	movf	pad@fp,w
  4000  0D53  00FC               	movwf	??_pad
  4001  0D54  087C               	movf	??_pad,w
  4002  0D55  00F8               	movwf	fputs@fp
  4003  0D56  0824               	movf	pad@buf,w
  4004  0D57  318B  23F9  318D   	fcall	_fputs
  4005  0D5A                     l1668:
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4008  0D5A  0140               	movlb	0	; select bank0
  4009  0D5B  1BA6               	btfsc	pad@p+1,7
  4010  0D5C  2D5E               	goto	u1581
  4011  0D5D  2D5F               	goto	u1580
  4012  0D5E                     u1581:
  4013  0D5E  2D64               	goto	l1672
  4014  0D5F                     u1580:
  4015  0D5F                     l1670:
  4016  0D5F  0826               	movf	pad@p+1,w
  4017  0D60  00AA               	movwf	pad@w+1
  4018  0D61  0825               	movf	pad@p,w
  4019  0D62  00A9               	movwf	pad@w
  4020  0D63  2D66               	goto	l697
  4021  0D64                     l1672:
  4022  0D64  01A9               	clrf	pad@w
  4023  0D65  01AA               	clrf	pad@w+1
  4024  0D66                     l697:
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4027  0D66  01A7               	clrf	pad@i
  4028  0D67  01A8               	clrf	pad@i+1
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4031  0D68  2D7A               	goto	l1678
  4032  0D69                     l1674:
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4035  0D69  3020               	movlw	32
  4036  0D6A  00F0               	movwf	fputc@c
  4037  0D6B  3000               	movlw	0
  4038  0D6C  00F1               	movwf	fputc@c+1
  4039  0D6D  0140               	movlb	0	; select bank0
  4040  0D6E  082B               	movf	pad@fp,w
  4041  0D6F  00FC               	movwf	??_pad
  4042  0D70  087C               	movf	??_pad,w
  4043  0D71  00F2               	movwf	fputc@fp
  4044  0D72  318C  24FB  318D   	fcall	_fputc
  4045  0D75                     l1676:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4048  0D75  3001               	movlw	1
  4049  0D76  0140               	movlb	0	; select bank0
  4050  0D77  07A7               	addwf	pad@i,f
  4051  0D78  3000               	movlw	0
  4052  0D79  3DA8               	addwfc	pad@i+1,f
  4053  0D7A                     l1678:
  4054                           
  4055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4056  0D7A  0828               	movf	pad@i+1,w
  4057  0D7B  3A80               	xorlw	128
  4058  0D7C  00FC               	movwf	??_pad
  4059  0D7D  082A               	movf	pad@w+1,w
  4060  0D7E  3A80               	xorlw	128
  4061  0D7F  027C               	subwf	??_pad,w
  4062  0D80  1D03               	skipz
  4063  0D81  2D84               	goto	u1595
  4064  0D82  0829               	movf	pad@w,w
  4065  0D83  0227               	subwf	pad@i,w
  4066  0D84                     u1595:
  4067  0D84  1C03               	skipc
  4068  0D85  2D87               	goto	u1591
  4069  0D86  2D88               	goto	u1590
  4070  0D87                     u1591:
  4071  0D87  2D69               	goto	l1674
  4072  0D88                     u1590:
  4073  0D88                     l700:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4076  0D88  0141               	movlb	1	; select bank1
  4077  0D89  1826               	btfsc	_flags^(0+128),0
  4078  0D8A  2D8C               	goto	u1601
  4079  0D8B  2D8D               	goto	u1600
  4080  0D8C                     u1601:
  4081  0D8C  2D96               	goto	l1682
  4082  0D8D                     u1600:
  4083  0D8D                     l1680:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4086  0D8D  0140               	movlb	0	; select bank0
  4087  0D8E  082B               	movf	pad@fp,w
  4088  0D8F  00FC               	movwf	??_pad
  4089  0D90  087C               	movf	??_pad,w
  4090  0D91  00F8               	movwf	fputs@fp
  4091  0D92  0824               	movf	pad@buf,w
  4092  0D93  318B  23F9  318D   	fcall	_fputs
  4093  0D96                     l1682:
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4096  0D96  0140               	movlb	0	; select bank0
  4097  0D97  0824               	movf	pad@buf,w
  4098  0D98  318B  235B  318D   	fcall	_strlen
  4099  0D9B  0140               	movlb	0	; select bank0
  4100  0D9C  0829               	movf	pad@w,w
  4101  0D9D  0770               	addwf	?_strlen,w
  4102  0D9E  00A4               	movwf	?_pad
  4103  0D9F  082A               	movf	pad@w+1,w
  4104  0DA0  3D71               	addwfc	?_strlen+1,w
  4105  0DA1  00A5               	movwf	?_pad+1
  4106  0DA2                     l702:
  4107  0DA2  0008               	return
  4108  0DA3                     __end_of_pad:
  4109                           
  4110                           	psect	text14
  4111  0B5B                     __ptext14:	
  4112 ;; *************** function _strlen *****************
  4113 ;; Defined at:
  4114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  s               1    wreg     PTR const unsigned char 
  4117 ;;		 -> dbuf(32), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  s               1    4[COMMON] PTR const unsigned char 
  4120 ;;		 -> dbuf(32), 
  4121 ;;  a               1    3[COMMON] PTR const unsigned char 
  4122 ;;		 -> dbuf(32), 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2    0[COMMON] unsigned int 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4132 ;;      Params:         2       0       0       0       0       0       0       0
  4133 ;;      Locals:         2       0       0       0       0       0       0       0
  4134 ;;      Temps:          1       0       0       0       0       0       0       0
  4135 ;;      Totals:         5       0       0       0       0       0       0       0
  4136 ;;Total ram usage:        5 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_pad
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function _strlen
  4147  0B5B                     _strlen:
  4148                           
  4149                           ;incstack = 0
  4150                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4151                           ;strlen@s stored from wreg
  4152  0B5B  00F4               	movwf	strlen@s
  4153  0B5C                     l1586:
  4154  0B5C  0874               	movf	strlen@s,w
  4155  0B5D  00F2               	movwf	??_strlen
  4156  0B5E  0872               	movf	??_strlen,w
  4157  0B5F  00F3               	movwf	strlen@a
  4158  0B60  2B65               	goto	l1590
  4159  0B61                     l1588:
  4160  0B61  3001               	movlw	1
  4161  0B62  00F2               	movwf	??_strlen
  4162  0B63  0872               	movf	??_strlen,w
  4163  0B64  07F4               	addwf	strlen@s,f
  4164  0B65                     l1590:
  4165  0B65  0874               	movf	strlen@s,w
  4166  0B66  0086               	movwf	6
  4167  0B67  0187               	clrf	7
  4168  0B68  0801               	movf	1,w
  4169  0B69  1D03               	btfss	3,2
  4170  0B6A  2B6C               	goto	u1351
  4171  0B6B  2B6D               	goto	u1350
  4172  0B6C                     u1351:
  4173  0B6C  2B61               	goto	l1588
  4174  0B6D                     u1350:
  4175  0B6D                     l1592:
  4176  0B6D  0873               	movf	strlen@a,w
  4177  0B6E  0274               	subwf	strlen@s,w
  4178  0B6F  00F0               	movwf	?_strlen
  4179  0B70  01F1               	clrf	?_strlen+1
  4180  0B71  1BF0               	btfsc	?_strlen,7
  4181  0B72  03F1               	decf	?_strlen+1,f
  4182  0B73                     l778:
  4183  0B73  0008               	return
  4184  0B74                     __end_of_strlen:
  4185                           
  4186                           	psect	text15
  4187  0BF9                     __ptext15:	
  4188 ;; *************** function _fputs *****************
  4189 ;; Defined at:
  4190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  s               1    wreg     PTR const unsigned char 
  4193 ;;		 -> dbuf(32), 
  4194 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4195 ;;		 -> sprintf@f(5), 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4198 ;;		 -> dbuf(32), 
  4199 ;;  i               2    1[BANK0 ] int 
  4200 ;;  c               1    0[BANK0 ] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2    8[COMMON] int 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4210 ;;      Params:         1       0       0       0       0       0       0       0
  4211 ;;      Locals:         0       4       0       0       0       0       0       0
  4212 ;;      Temps:          3       0       0       0       0       0       0       0
  4213 ;;      Totals:         4       4       0       0       0       0       0       0
  4214 ;;Total ram usage:        8 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    2
  4217 ;; This function calls:
  4218 ;;		_fputc
  4219 ;; This function is called by:
  4220 ;;		_pad
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           
  4225                           ;psect for function _fputs
  4226  0BF9                     _fputs:
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4230                           ;fputs@s stored from wreg
  4231  0BF9  0140               	movlb	0	; select bank0
  4232  0BFA  00A3               	movwf	fputs@s
  4233  0BFB                     l1578:
  4234  0BFB  01A1               	clrf	fputs@i
  4235  0BFC  01A2               	clrf	fputs@i+1
  4236  0BFD  2C11               	goto	l1584
  4237  0BFE                     l1580:
  4238  0BFE  0820               	movf	fputs@c,w
  4239  0BFF  00F9               	movwf	??_fputs
  4240  0C00  01FA               	clrf	??_fputs+1
  4241  0C01  0879               	movf	??_fputs,w
  4242  0C02  00F0               	movwf	fputc@c
  4243  0C03  087A               	movf	??_fputs+1,w
  4244  0C04  00F1               	movwf	fputc@c+1
  4245  0C05  0878               	movf	fputs@fp,w
  4246  0C06  00FB               	movwf	??_fputs+2
  4247  0C07  087B               	movf	??_fputs+2,w
  4248  0C08  00F2               	movwf	fputc@fp
  4249  0C09  318C  24FB  318B   	fcall	_fputc
  4250  0C0C                     l1582:
  4251  0C0C  3001               	movlw	1
  4252  0C0D  0140               	movlb	0	; select bank0
  4253  0C0E  07A1               	addwf	fputs@i,f
  4254  0C0F  3000               	movlw	0
  4255  0C10  3DA2               	addwfc	fputs@i+1,f
  4256  0C11                     l1584:
  4257  0C11  0821               	movf	fputs@i,w
  4258  0C12  0723               	addwf	fputs@s,w
  4259  0C13  00F9               	movwf	??_fputs
  4260  0C14  0879               	movf	??_fputs,w
  4261  0C15  0086               	movwf	6
  4262  0C16  0187               	clrf	7
  4263  0C17  0801               	movf	1,w
  4264  0C18  00FA               	movwf	??_fputs+1
  4265  0C19  087A               	movf	??_fputs+1,w
  4266  0C1A  00A0               	movwf	fputs@c
  4267  0C1B  0820               	movf	fputs@c,w
  4268  0C1C  1D03               	btfss	3,2
  4269  0C1D  2C1F               	goto	u1341
  4270  0C1E  2C20               	goto	u1340
  4271  0C1F                     u1341:
  4272  0C1F  2BFE               	goto	l1580
  4273  0C20                     u1340:
  4274  0C20                     l769:
  4275  0C20  0008               	return
  4276  0C21                     __end_of_fputs:
  4277                           
  4278                           	psect	text16
  4279  0CFB                     __ptext16:	
  4280 ;; *************** function _fputc *****************
  4281 ;; Defined at:
  4282 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  c               2    0[COMMON] int 
  4285 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4286 ;;		 -> sprintf@f(5), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2    0[COMMON] int 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4298 ;;      Params:         3       0       0       0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0
  4300 ;;      Temps:          5       0       0       0       0       0       0       0
  4301 ;;      Totals:         8       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        8 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    1
  4305 ;; This function calls:
  4306 ;;		_putch
  4307 ;; This function is called by:
  4308 ;;		_pad
  4309 ;;		_vfpfcnvrt
  4310 ;;		_fputs
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _fputc
  4316  0CFB                     _fputc:
  4317  0CFB                     l1562:	
  4318                           ;incstack = 0
  4319                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4320                           
  4321  0CFB  0872               	movf	fputc@fp,w
  4322  0CFC  1903               	btfsc	3,2
  4323  0CFD  2CFF               	goto	u1301
  4324  0CFE  2D00               	goto	u1300
  4325  0CFF                     u1301:
  4326  0CFF  2D05               	goto	l1566
  4327  0D00                     u1300:
  4328  0D00                     l1564:
  4329  0D00  0872               	movf	fputc@fp,w
  4330  0D01  1D03               	btfss	3,2
  4331  0D02  2D04               	goto	u1311
  4332  0D03  2D05               	goto	u1310
  4333  0D04                     u1311:
  4334  0D04  2D0A               	goto	l1568
  4335  0D05                     u1310:
  4336  0D05                     l1566:
  4337  0D05  0870               	movf	fputc@c,w
  4338  0D06  3180  2004  318C   	fcall	_putch
  4339  0D09  2D49               	goto	l761
  4340  0D0A                     l1568:
  4341  0D0A  0872               	movf	fputc@fp,w
  4342  0D0B  3E03               	addlw	3
  4343  0D0C  0086               	movwf	6
  4344  0D0D  0187               	clrf	7
  4345  0D0E  0016               	moviw fsr1++
  4346  0D0F  0401               	iorwf	1,w
  4347  0D10  1903               	btfsc	3,2
  4348  0D11  2D13               	goto	u1321
  4349  0D12  2D14               	goto	u1320
  4350  0D13                     u1321:
  4351  0D13  2D31               	goto	l1572
  4352  0D14                     u1320:
  4353  0D14                     l1570:
  4354  0D14  0872               	movf	fputc@fp,w
  4355  0D15  3E03               	addlw	3
  4356  0D16  0086               	movwf	6
  4357  0D17  0187               	clrf	7
  4358  0D18  3F40               	moviw [0]fsr1
  4359  0D19  00F3               	movwf	??_fputc
  4360  0D1A  3F41               	moviw [1]fsr1
  4361  0D1B  00F4               	movwf	??_fputc+1
  4362  0D1C  0A72               	incf	fputc@fp,w
  4363  0D1D  0086               	movwf	6
  4364  0D1E  0187               	clrf	7
  4365  0D1F  3F40               	moviw [0]fsr1
  4366  0D20  00F5               	movwf	??_fputc+2
  4367  0D21  3F41               	moviw [1]fsr1
  4368  0D22  00F6               	movwf	??_fputc+3
  4369  0D23  0876               	movf	??_fputc+3,w
  4370  0D24  3A80               	xorlw	128
  4371  0D25  00F7               	movwf	??_fputc+4
  4372  0D26  0874               	movf	??_fputc+1,w
  4373  0D27  3A80               	xorlw	128
  4374  0D28  0277               	subwf	??_fputc+4,w
  4375  0D29  1D03               	skipz
  4376  0D2A  2D2D               	goto	u1335
  4377  0D2B  0873               	movf	??_fputc,w
  4378  0D2C  0275               	subwf	??_fputc+2,w
  4379  0D2D                     u1335:
  4380  0D2D  1803               	skipnc
  4381  0D2E  2D30               	goto	u1331
  4382  0D2F  2D31               	goto	u1330
  4383  0D30                     u1331:
  4384  0D30  2D49               	goto	l761
  4385  0D31                     u1330:
  4386  0D31                     l1572:
  4387  0D31  0870               	movf	fputc@c,w
  4388  0D32  00F3               	movwf	??_fputc
  4389  0D33  0872               	movf	fputc@fp,w
  4390  0D34  0086               	movwf	6
  4391  0D35  0187               	clrf	7
  4392  0D36  0A72               	incf	fputc@fp,w
  4393  0D37  0084               	movwf	4
  4394  0D38  0185               	clrf	5
  4395  0D39  0800               	movf	0,w
  4396  0D3A  0701               	addwf	1,w
  4397  0D3B  00F4               	movwf	??_fputc+1
  4398  0D3C  0874               	movf	??_fputc+1,w
  4399  0D3D  0086               	movwf	6
  4400  0D3E  0187               	clrf	7
  4401  0D3F  0873               	movf	??_fputc,w
  4402  0D40  0081               	movwf	1
  4403  0D41                     l1574:
  4404  0D41  0A72               	incf	fputc@fp,w
  4405  0D42  0086               	movwf	6
  4406  0D43  0187               	clrf	7
  4407  0D44  3001               	movlw	1
  4408  0D45  0781               	addwf	1,f
  4409  0D46  3141               	addfsr 1,1
  4410  0D47  1803               	skipnc
  4411  0D48  0A81               	incf	1,f
  4412  0D49                     l761:
  4413  0D49  0008               	return
  4414  0D4A                     __end_of_fputc:
  4415                           
  4416                           	psect	text17
  4417  0004                     __ptext17:	
  4418 ;; *************** function _putch *****************
  4419 ;; Defined at:
  4420 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  c               1    wreg     unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  c               1    0[COMMON] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4434 ;;      Params:         0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_fputc
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _putch
  4449  0004                     _putch:
  4450  0004                     l772:	
  4451                           ;incstack = 0
  4452                           ; Regs used in _putch: [wreg]
  4453                           
  4454  0004  0008               	return
  4455  0005                     __end_of_putch:
  4456                           
  4457                           	psect	text18
  4458  0B74                     __ptext18:	
  4459 ;; *************** function _abs *****************
  4460 ;; Defined at:
  4461 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  a               2    3[COMMON] int 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    3[COMMON] int 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4475 ;;      Params:         2       0       0       0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0
  4477 ;;      Temps:          2       0       0       0       0       0       0       0
  4478 ;;      Totals:         4       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        4 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_dtoa
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function _abs
  4490  0B74                     _abs:
  4491  0B74                     l1686:	
  4492                           ;incstack = 0
  4493                           ; Regs used in _abs: [wreg+status,2+status,0]
  4494                           
  4495  0B74  0874               	movf	abs@a+1,w
  4496  0B75  3A80               	xorlw	128
  4497  0B76  00F5               	movwf	??_abs
  4498  0B77  3080               	movlw	128
  4499  0B78  0275               	subwf	??_abs,w
  4500  0B79  1D03               	skipz
  4501  0B7A  2B7D               	goto	u1615
  4502  0B7B  3001               	movlw	1
  4503  0B7C  0273               	subwf	abs@a,w
  4504  0B7D                     u1615:
  4505  0B7D  1803               	skipnc
  4506  0B7E  2B80               	goto	u1611
  4507  0B7F  2B81               	goto	u1610
  4508  0B80                     u1611:
  4509  0B80  2B8D               	goto	l746
  4510  0B81                     u1610:
  4511  0B81                     l1688:
  4512  0B81  0973               	comf	abs@a,w
  4513  0B82  00F5               	movwf	??_abs
  4514  0B83  0974               	comf	abs@a+1,w
  4515  0B84  00F6               	movwf	??_abs+1
  4516  0B85  0AF5               	incf	??_abs,f
  4517  0B86  1903               	skipnz
  4518  0B87  0AF6               	incf	??_abs+1,f
  4519  0B88  0875               	movf	??_abs,w
  4520  0B89  00F3               	movwf	?_abs
  4521  0B8A  0876               	movf	??_abs+1,w
  4522  0B8B  00F4               	movwf	?_abs+1
  4523  0B8C  2B8D               	goto	l749
  4524  0B8D                     l746:
  4525  0B8D                     l749:
  4526  0B8D  0008               	return
  4527  0B8E                     __end_of_abs:
  4528                           
  4529                           	psect	text19
  4530  0155                     __ptext19:	
  4531 ;; *************** function ___aomod *****************
  4532 ;; Defined at:
  4533 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  divisor         8    0[BANK0 ] long long 
  4536 ;;  dividend        8    8[BANK0 ] long long 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  sign            1    2[COMMON] unsigned char 
  4539 ;;  counter         1    1[COMMON] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  8    0[BANK0 ] long long 
  4542 ;; Registers used:
  4543 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4549 ;;      Params:         0      16       0       0       0       0       0       0
  4550 ;;      Locals:         2       0       0       0       0       0       0       0
  4551 ;;      Temps:          1       0       0       0       0       0       0       0
  4552 ;;      Totals:         3      16       0       0       0       0       0       0
  4553 ;;Total ram usage:       19 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_dtoa
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function ___aomod
  4564  0155                     ___aomod:
  4565  0155                     l1634:	
  4566                           ;incstack = 0
  4567                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4568                           
  4569  0155  01F2               	clrf	___aomod@sign
  4570  0156                     l1636:
  4571  0156  3028               	movlw	low ___aomod@dividend
  4572  0157  0086               	movwf	6
  4573  0158  3000               	movlw	high ___aomod@dividend
  4574  0159  0087               	movwf	7
  4575  015A  3F47               	moviw [7]fsr1
  4576  015B  00F0               	movwf	??___aomod
  4577  015C  1FF0               	btfss	??___aomod,7
  4578  015D  295F               	goto	u1471
  4579  015E  2960               	goto	u1470
  4580  015F                     u1471:
  4581  015F  2981               	goto	l1640
  4582  0160                     u1470:
  4583  0160                     l1638:
  4584  0160  0140               	movlb	0	; select bank0
  4585  0161  09A8               	comf	___aomod@dividend,f
  4586  0162  09A9               	comf	___aomod@dividend+1,f
  4587  0163  09AA               	comf	___aomod@dividend+2,f
  4588  0164  09AB               	comf	___aomod@dividend+3,f
  4589  0165  09AC               	comf	___aomod@dividend+4,f
  4590  0166  09AD               	comf	___aomod@dividend+5,f
  4591  0167  09AE               	comf	___aomod@dividend+6,f
  4592  0168  09AF               	comf	___aomod@dividend+7,f
  4593  0169  0AA8               	incf	___aomod@dividend,f
  4594  016A  1D03               	skipz
  4595  016B  297F               	goto	u148lld
  4596  016C  0AA9               	incf	___aomod@dividend+1,f
  4597  016D  1D03               	skipz
  4598  016E  297F               	goto	u148lld
  4599  016F  0AAA               	incf	___aomod@dividend+2,f
  4600  0170  1D03               	skipz
  4601  0171  297F               	goto	u148lld
  4602  0172  0AAB               	incf	___aomod@dividend+3,f
  4603  0173  1D03               	skipz
  4604  0174  297F               	goto	u148lld
  4605  0175  0AAC               	incf	___aomod@dividend+4,f
  4606  0176  1D03               	skipz
  4607  0177  297F               	goto	u148lld
  4608  0178  0AAD               	incf	___aomod@dividend+5,f
  4609  0179  1D03               	skipz
  4610  017A  297F               	goto	u148lld
  4611  017B  0AAE               	incf	___aomod@dividend+6,f
  4612  017C  1D03               	skipz
  4613  017D  297F               	goto	u148lld
  4614  017E  0AAF               	incf	___aomod@dividend+7,f
  4615  017F                     u148lld:
  4616  017F  01F2               	clrf	___aomod@sign
  4617  0180  0AF2               	incf	___aomod@sign,f
  4618  0181                     l1640:
  4619  0181  3020               	movlw	low ___aomod@divisor
  4620  0182  0086               	movwf	6
  4621  0183  3000               	movlw	high ___aomod@divisor
  4622  0184  0087               	movwf	7
  4623  0185  3F47               	moviw [7]fsr1
  4624  0186  00F0               	movwf	??___aomod
  4625  0187  1FF0               	btfss	??___aomod,7
  4626  0188  298A               	goto	u1491
  4627  0189  298B               	goto	u1490
  4628  018A                     u1491:
  4629  018A  29AA               	goto	l1644
  4630  018B                     u1490:
  4631  018B                     l1642:
  4632  018B  0140               	movlb	0	; select bank0
  4633  018C  09A0               	comf	___aomod@divisor,f
  4634  018D  09A1               	comf	___aomod@divisor+1,f
  4635  018E  09A2               	comf	___aomod@divisor+2,f
  4636  018F  09A3               	comf	___aomod@divisor+3,f
  4637  0190  09A4               	comf	___aomod@divisor+4,f
  4638  0191  09A5               	comf	___aomod@divisor+5,f
  4639  0192  09A6               	comf	___aomod@divisor+6,f
  4640  0193  09A7               	comf	___aomod@divisor+7,f
  4641  0194  0AA0               	incf	___aomod@divisor,f
  4642  0195  1D03               	skipz
  4643  0196  29AA               	goto	u150lld
  4644  0197  0AA1               	incf	___aomod@divisor+1,f
  4645  0198  1D03               	skipz
  4646  0199  29AA               	goto	u150lld
  4647  019A  0AA2               	incf	___aomod@divisor+2,f
  4648  019B  1D03               	skipz
  4649  019C  29AA               	goto	u150lld
  4650  019D  0AA3               	incf	___aomod@divisor+3,f
  4651  019E  1D03               	skipz
  4652  019F  29AA               	goto	u150lld
  4653  01A0  0AA4               	incf	___aomod@divisor+4,f
  4654  01A1  1D03               	skipz
  4655  01A2  29AA               	goto	u150lld
  4656  01A3  0AA5               	incf	___aomod@divisor+5,f
  4657  01A4  1D03               	skipz
  4658  01A5  29AA               	goto	u150lld
  4659  01A6  0AA6               	incf	___aomod@divisor+6,f
  4660  01A7  1D03               	skipz
  4661  01A8  29AA               	goto	u150lld
  4662  01A9  0AA7               	incf	___aomod@divisor+7,f
  4663  01AA                     u150lld:
  4664  01AA                     l1644:
  4665  01AA  0140               	movlb	0	; select bank0
  4666  01AB  0820               	movf	___aomod@divisor,w
  4667  01AC  0421               	iorwf	___aomod@divisor+1,w
  4668  01AD  0422               	iorwf	___aomod@divisor+2,w
  4669  01AE  0423               	iorwf	___aomod@divisor+3,w
  4670  01AF  0424               	iorwf	___aomod@divisor+4,w
  4671  01B0  0425               	iorwf	___aomod@divisor+5,w
  4672  01B1  0426               	iorwf	___aomod@divisor+6,w
  4673  01B2  0427               	iorwf	___aomod@divisor+7,w
  4674  01B3  1903               	skipnz
  4675  01B4  29B6               	goto	u1511
  4676  01B5  29B7               	goto	u1510
  4677  01B6                     u1511:
  4678  01B6  2A0A               	goto	l1660
  4679  01B7                     u1510:
  4680  01B7                     l1646:
  4681  01B7  01F1               	clrf	___aomod@counter
  4682  01B8  0AF1               	incf	___aomod@counter,f
  4683  01B9  29C6               	goto	l1652
  4684  01BA                     l1648:
  4685  01BA  35A0               	lslf	___aomod@divisor,f
  4686  01BB  0DA1               	rlf	___aomod@divisor+1,f
  4687  01BC  0DA2               	rlf	___aomod@divisor+2,f
  4688  01BD  0DA3               	rlf	___aomod@divisor+3,f
  4689  01BE  0DA4               	rlf	___aomod@divisor+4,f
  4690  01BF  0DA5               	rlf	___aomod@divisor+5,f
  4691  01C0  0DA6               	rlf	___aomod@divisor+6,f
  4692  01C1  0DA7               	rlf	___aomod@divisor+7,f
  4693  01C2                     l1650:
  4694  01C2  3001               	movlw	1
  4695  01C3  00F0               	movwf	??___aomod
  4696  01C4  0870               	movf	??___aomod,w
  4697  01C5  07F1               	addwf	___aomod@counter,f
  4698  01C6                     l1652:
  4699  01C6  1FA7               	btfss	___aomod@divisor+7,7
  4700  01C7  29C9               	goto	u1521
  4701  01C8  29CA               	goto	u1520
  4702  01C9                     u1521:
  4703  01C9  29BA               	goto	l1648
  4704  01CA                     u1520:
  4705  01CA                     l1654:
  4706  01CA  0827               	movf	___aomod@divisor+7,w
  4707  01CB  022F               	subwf	___aomod@dividend+7,w
  4708  01CC  1D03               	skipz
  4709  01CD  29E8               	goto	u1535
  4710  01CE  0826               	movf	___aomod@divisor+6,w
  4711  01CF  022E               	subwf	___aomod@dividend+6,w
  4712  01D0  1D03               	skipz
  4713  01D1  29E8               	goto	u1535
  4714  01D2  0825               	movf	___aomod@divisor+5,w
  4715  01D3  022D               	subwf	___aomod@dividend+5,w
  4716  01D4  1D03               	skipz
  4717  01D5  29E8               	goto	u1535
  4718  01D6  0824               	movf	___aomod@divisor+4,w
  4719  01D7  022C               	subwf	___aomod@dividend+4,w
  4720  01D8  1D03               	skipz
  4721  01D9  29E8               	goto	u1535
  4722  01DA  0823               	movf	___aomod@divisor+3,w
  4723  01DB  022B               	subwf	___aomod@dividend+3,w
  4724  01DC  1D03               	skipz
  4725  01DD  29E8               	goto	u1535
  4726  01DE  0822               	movf	___aomod@divisor+2,w
  4727  01DF  022A               	subwf	___aomod@dividend+2,w
  4728  01E0  1D03               	skipz
  4729  01E1  29E8               	goto	u1535
  4730  01E2  0821               	movf	___aomod@divisor+1,w
  4731  01E3  0229               	subwf	___aomod@dividend+1,w
  4732  01E4  1D03               	skipz
  4733  01E5  29E8               	goto	u1535
  4734  01E6  0820               	movf	___aomod@divisor,w
  4735  01E7  0228               	subwf	___aomod@dividend,w
  4736  01E8                     u1535:
  4737  01E8  1C03               	skipc
  4738  01E9  29EB               	goto	u1531
  4739  01EA  29EC               	goto	u1530
  4740  01EB                     u1531:
  4741  01EB  29FC               	goto	l1658
  4742  01EC                     u1530:
  4743  01EC                     l1656:
  4744  01EC  0820               	movf	___aomod@divisor,w
  4745  01ED  02A8               	subwf	___aomod@dividend,f
  4746  01EE  0821               	movf	___aomod@divisor+1,w
  4747  01EF  3BA9               	subwfb	___aomod@dividend+1,f
  4748  01F0  0822               	movf	___aomod@divisor+2,w
  4749  01F1  3BAA               	subwfb	___aomod@dividend+2,f
  4750  01F2  0823               	movf	___aomod@divisor+3,w
  4751  01F3  3BAB               	subwfb	___aomod@dividend+3,f
  4752  01F4  0824               	movf	___aomod@divisor+4,w
  4753  01F5  3BAC               	subwfb	___aomod@dividend+4,f
  4754  01F6  0825               	movf	___aomod@divisor+5,w
  4755  01F7  3BAD               	subwfb	___aomod@dividend+5,f
  4756  01F8  0826               	movf	___aomod@divisor+6,w
  4757  01F9  3BAE               	subwfb	___aomod@dividend+6,f
  4758  01FA  0827               	movf	___aomod@divisor+7,w
  4759  01FB  3BAF               	subwfb	___aomod@dividend+7,f
  4760  01FC                     l1658:
  4761  01FC  36A7               	lsrf	___aomod@divisor+7,f
  4762  01FD  0CA6               	rrf	___aomod@divisor+6,f
  4763  01FE  0CA5               	rrf	___aomod@divisor+5,f
  4764  01FF  0CA4               	rrf	___aomod@divisor+4,f
  4765  0200  0CA3               	rrf	___aomod@divisor+3,f
  4766  0201  0CA2               	rrf	___aomod@divisor+2,f
  4767  0202  0CA1               	rrf	___aomod@divisor+1,f
  4768  0203  0CA0               	rrf	___aomod@divisor,f
  4769  0204  3001               	movlw	1
  4770  0205  02F1               	subwf	___aomod@counter,f
  4771  0206  1D03               	btfss	3,2
  4772  0207  2A09               	goto	u1541
  4773  0208  2A0A               	goto	u1540
  4774  0209                     u1541:
  4775  0209  29CA               	goto	l1654
  4776  020A                     u1540:
  4777  020A                     l1660:
  4778  020A  0872               	movf	___aomod@sign,w
  4779  020B  1903               	btfsc	3,2
  4780  020C  2A0E               	goto	u1551
  4781  020D  2A0F               	goto	u1550
  4782  020E                     u1551:
  4783  020E  2A2D               	goto	l320
  4784  020F                     u1550:
  4785  020F                     l1662:
  4786  020F  09A8               	comf	___aomod@dividend,f
  4787  0210  09A9               	comf	___aomod@dividend+1,f
  4788  0211  09AA               	comf	___aomod@dividend+2,f
  4789  0212  09AB               	comf	___aomod@dividend+3,f
  4790  0213  09AC               	comf	___aomod@dividend+4,f
  4791  0214  09AD               	comf	___aomod@dividend+5,f
  4792  0215  09AE               	comf	___aomod@dividend+6,f
  4793  0216  09AF               	comf	___aomod@dividend+7,f
  4794  0217  0AA8               	incf	___aomod@dividend,f
  4795  0218  1D03               	skipz
  4796  0219  2A2D               	goto	u156lld
  4797  021A  0AA9               	incf	___aomod@dividend+1,f
  4798  021B  1D03               	skipz
  4799  021C  2A2D               	goto	u156lld
  4800  021D  0AAA               	incf	___aomod@dividend+2,f
  4801  021E  1D03               	skipz
  4802  021F  2A2D               	goto	u156lld
  4803  0220  0AAB               	incf	___aomod@dividend+3,f
  4804  0221  1D03               	skipz
  4805  0222  2A2D               	goto	u156lld
  4806  0223  0AAC               	incf	___aomod@dividend+4,f
  4807  0224  1D03               	skipz
  4808  0225  2A2D               	goto	u156lld
  4809  0226  0AAD               	incf	___aomod@dividend+5,f
  4810  0227  1D03               	skipz
  4811  0228  2A2D               	goto	u156lld
  4812  0229  0AAE               	incf	___aomod@dividend+6,f
  4813  022A  1D03               	skipz
  4814  022B  2A2D               	goto	u156lld
  4815  022C  0AAF               	incf	___aomod@dividend+7,f
  4816  022D                     u156lld:
  4817  022D                     l320:
  4818  022D  0140               	movlb	0	; select bank0
  4819  022E  0828               	movf	___aomod@dividend,w
  4820  022F  00A0               	movwf	?___aomod
  4821  0230  0829               	movf	___aomod@dividend+1,w
  4822  0231  00A1               	movwf	?___aomod+1
  4823  0232  082A               	movf	___aomod@dividend+2,w
  4824  0233  00A2               	movwf	?___aomod+2
  4825  0234  082B               	movf	___aomod@dividend+3,w
  4826  0235  00A3               	movwf	?___aomod+3
  4827  0236  082C               	movf	___aomod@dividend+4,w
  4828  0237  00A4               	movwf	?___aomod+4
  4829  0238  082D               	movf	___aomod@dividend+5,w
  4830  0239  00A5               	movwf	?___aomod+5
  4831  023A  082E               	movf	___aomod@dividend+6,w
  4832  023B  00A6               	movwf	?___aomod+6
  4833  023C  082F               	movf	___aomod@dividend+7,w
  4834  023D  00A7               	movwf	?___aomod+7
  4835  023E                     l321:
  4836  023E  0008               	return
  4837  023F                     __end_of___aomod:
  4838                           
  4839                           	psect	text20
  4840  032C                     __ptext20:	
  4841 ;; *************** function ___aodiv *****************
  4842 ;; Defined at:
  4843 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  divisor         8    0[BANK0 ] long long 
  4846 ;;  dividend        8    8[BANK0 ] long long 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  quotient        8    3[COMMON] long long 
  4849 ;;  sign            1    2[COMMON] unsigned char 
  4850 ;;  counter         1    1[COMMON] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  8    0[BANK0 ] long long 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4860 ;;      Params:         0      16       0       0       0       0       0       0
  4861 ;;      Locals:        10       0       0       0       0       0       0       0
  4862 ;;      Temps:          1       0       0       0       0       0       0       0
  4863 ;;      Totals:        11      16       0       0       0       0       0       0
  4864 ;;Total ram usage:       27 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_dtoa
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function ___aodiv
  4875  032C                     ___aodiv:
  4876  032C                     l1596:	
  4877                           ;incstack = 0
  4878                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4879                           
  4880  032C  01F2               	clrf	___aodiv@sign
  4881  032D                     l1598:
  4882  032D  3020               	movlw	low ___aodiv@divisor
  4883  032E  0086               	movwf	6
  4884  032F  3000               	movlw	high ___aodiv@divisor
  4885  0330  0087               	movwf	7
  4886  0331  3F47               	moviw [7]fsr1
  4887  0332  00F0               	movwf	??___aodiv
  4888  0333  1FF0               	btfss	??___aodiv,7
  4889  0334  2B36               	goto	u1361
  4890  0335  2B37               	goto	u1360
  4891  0336                     u1361:
  4892  0336  2B58               	goto	l1602
  4893  0337                     u1360:
  4894  0337                     l1600:
  4895  0337  0140               	movlb	0	; select bank0
  4896  0338  09A0               	comf	___aodiv@divisor,f
  4897  0339  09A1               	comf	___aodiv@divisor+1,f
  4898  033A  09A2               	comf	___aodiv@divisor+2,f
  4899  033B  09A3               	comf	___aodiv@divisor+3,f
  4900  033C  09A4               	comf	___aodiv@divisor+4,f
  4901  033D  09A5               	comf	___aodiv@divisor+5,f
  4902  033E  09A6               	comf	___aodiv@divisor+6,f
  4903  033F  09A7               	comf	___aodiv@divisor+7,f
  4904  0340  0AA0               	incf	___aodiv@divisor,f
  4905  0341  1D03               	skipz
  4906  0342  2B56               	goto	u137lld
  4907  0343  0AA1               	incf	___aodiv@divisor+1,f
  4908  0344  1D03               	skipz
  4909  0345  2B56               	goto	u137lld
  4910  0346  0AA2               	incf	___aodiv@divisor+2,f
  4911  0347  1D03               	skipz
  4912  0348  2B56               	goto	u137lld
  4913  0349  0AA3               	incf	___aodiv@divisor+3,f
  4914  034A  1D03               	skipz
  4915  034B  2B56               	goto	u137lld
  4916  034C  0AA4               	incf	___aodiv@divisor+4,f
  4917  034D  1D03               	skipz
  4918  034E  2B56               	goto	u137lld
  4919  034F  0AA5               	incf	___aodiv@divisor+5,f
  4920  0350  1D03               	skipz
  4921  0351  2B56               	goto	u137lld
  4922  0352  0AA6               	incf	___aodiv@divisor+6,f
  4923  0353  1D03               	skipz
  4924  0354  2B56               	goto	u137lld
  4925  0355  0AA7               	incf	___aodiv@divisor+7,f
  4926  0356                     u137lld:
  4927  0356  01F2               	clrf	___aodiv@sign
  4928  0357  0AF2               	incf	___aodiv@sign,f
  4929  0358                     l1602:
  4930  0358  3028               	movlw	low ___aodiv@dividend
  4931  0359  0086               	movwf	6
  4932  035A  3000               	movlw	high ___aodiv@dividend
  4933  035B  0087               	movwf	7
  4934  035C  3F47               	moviw [7]fsr1
  4935  035D  00F0               	movwf	??___aodiv
  4936  035E  1FF0               	btfss	??___aodiv,7
  4937  035F  2B61               	goto	u1381
  4938  0360  2B62               	goto	u1380
  4939  0361                     u1381:
  4940  0361  2B85               	goto	l1608
  4941  0362                     u1380:
  4942  0362                     l1604:
  4943  0362  0140               	movlb	0	; select bank0
  4944  0363  09A8               	comf	___aodiv@dividend,f
  4945  0364  09A9               	comf	___aodiv@dividend+1,f
  4946  0365  09AA               	comf	___aodiv@dividend+2,f
  4947  0366  09AB               	comf	___aodiv@dividend+3,f
  4948  0367  09AC               	comf	___aodiv@dividend+4,f
  4949  0368  09AD               	comf	___aodiv@dividend+5,f
  4950  0369  09AE               	comf	___aodiv@dividend+6,f
  4951  036A  09AF               	comf	___aodiv@dividend+7,f
  4952  036B  0AA8               	incf	___aodiv@dividend,f
  4953  036C  1D03               	skipz
  4954  036D  2B81               	goto	u139lld
  4955  036E  0AA9               	incf	___aodiv@dividend+1,f
  4956  036F  1D03               	skipz
  4957  0370  2B81               	goto	u139lld
  4958  0371  0AAA               	incf	___aodiv@dividend+2,f
  4959  0372  1D03               	skipz
  4960  0373  2B81               	goto	u139lld
  4961  0374  0AAB               	incf	___aodiv@dividend+3,f
  4962  0375  1D03               	skipz
  4963  0376  2B81               	goto	u139lld
  4964  0377  0AAC               	incf	___aodiv@dividend+4,f
  4965  0378  1D03               	skipz
  4966  0379  2B81               	goto	u139lld
  4967  037A  0AAD               	incf	___aodiv@dividend+5,f
  4968  037B  1D03               	skipz
  4969  037C  2B81               	goto	u139lld
  4970  037D  0AAE               	incf	___aodiv@dividend+6,f
  4971  037E  1D03               	skipz
  4972  037F  2B81               	goto	u139lld
  4973  0380  0AAF               	incf	___aodiv@dividend+7,f
  4974  0381                     u139lld:
  4975  0381                     l1606:
  4976  0381  3001               	movlw	1
  4977  0382  00F0               	movwf	??___aodiv
  4978  0383  0870               	movf	??___aodiv,w
  4979  0384  06F2               	xorwf	___aodiv@sign,f
  4980  0385                     l1608:
  4981  0385  3073               	movlw	low ___aodiv@quotient
  4982  0386  0086               	movwf	6
  4983  0387  3000               	movlw	high ___aodiv@quotient
  4984  0388  0087               	movwf	7
  4985  0389  3008               	movlw	8
  4986  038A  00F0               	movwf	??___aodiv
  4987  038B  3000               	movlw	0
  4988  038C                     u1400:
  4989  038C  001E               	movwi fsr1++
  4990  038D  0BF0               	decfsz	??___aodiv,f
  4991  038E  2B8C               	goto	u1400
  4992  038F                     l1610:
  4993  038F  0140               	movlb	0	; select bank0
  4994  0390  0820               	movf	___aodiv@divisor,w
  4995  0391  0421               	iorwf	___aodiv@divisor+1,w
  4996  0392  0422               	iorwf	___aodiv@divisor+2,w
  4997  0393  0423               	iorwf	___aodiv@divisor+3,w
  4998  0394  0424               	iorwf	___aodiv@divisor+4,w
  4999  0395  0425               	iorwf	___aodiv@divisor+5,w
  5000  0396  0426               	iorwf	___aodiv@divisor+6,w
  5001  0397  0427               	iorwf	___aodiv@divisor+7,w
  5002  0398  1903               	skipnz
  5003  0399  2B9B               	goto	u1411
  5004  039A  2B9C               	goto	u1410
  5005  039B                     u1411:
  5006  039B  2BF8               	goto	l1630
  5007  039C                     u1410:
  5008  039C                     l1612:
  5009  039C  01F1               	clrf	___aodiv@counter
  5010  039D  0AF1               	incf	___aodiv@counter,f
  5011  039E  2BAB               	goto	l1618
  5012  039F                     l1614:
  5013  039F  35A0               	lslf	___aodiv@divisor,f
  5014  03A0  0DA1               	rlf	___aodiv@divisor+1,f
  5015  03A1  0DA2               	rlf	___aodiv@divisor+2,f
  5016  03A2  0DA3               	rlf	___aodiv@divisor+3,f
  5017  03A3  0DA4               	rlf	___aodiv@divisor+4,f
  5018  03A4  0DA5               	rlf	___aodiv@divisor+5,f
  5019  03A5  0DA6               	rlf	___aodiv@divisor+6,f
  5020  03A6  0DA7               	rlf	___aodiv@divisor+7,f
  5021  03A7                     l1616:
  5022  03A7  3001               	movlw	1
  5023  03A8  00F0               	movwf	??___aodiv
  5024  03A9  0870               	movf	??___aodiv,w
  5025  03AA  07F1               	addwf	___aodiv@counter,f
  5026  03AB                     l1618:
  5027  03AB  1FA7               	btfss	___aodiv@divisor+7,7
  5028  03AC  2BAE               	goto	u1421
  5029  03AD  2BAF               	goto	u1420
  5030  03AE                     u1421:
  5031  03AE  2B9F               	goto	l1614
  5032  03AF                     u1420:
  5033  03AF                     l1620:
  5034  03AF  35F3               	lslf	___aodiv@quotient,f
  5035  03B0  0DF4               	rlf	___aodiv@quotient+1,f
  5036  03B1  0DF5               	rlf	___aodiv@quotient+2,f
  5037  03B2  0DF6               	rlf	___aodiv@quotient+3,f
  5038  03B3  0DF7               	rlf	___aodiv@quotient+4,f
  5039  03B4  0DF8               	rlf	___aodiv@quotient+5,f
  5040  03B5  0DF9               	rlf	___aodiv@quotient+6,f
  5041  03B6  0DFA               	rlf	___aodiv@quotient+7,f
  5042  03B7                     l1622:
  5043  03B7  0827               	movf	___aodiv@divisor+7,w
  5044  03B8  022F               	subwf	___aodiv@dividend+7,w
  5045  03B9  1D03               	skipz
  5046  03BA  2BD5               	goto	u1435
  5047  03BB  0826               	movf	___aodiv@divisor+6,w
  5048  03BC  022E               	subwf	___aodiv@dividend+6,w
  5049  03BD  1D03               	skipz
  5050  03BE  2BD5               	goto	u1435
  5051  03BF  0825               	movf	___aodiv@divisor+5,w
  5052  03C0  022D               	subwf	___aodiv@dividend+5,w
  5053  03C1  1D03               	skipz
  5054  03C2  2BD5               	goto	u1435
  5055  03C3  0824               	movf	___aodiv@divisor+4,w
  5056  03C4  022C               	subwf	___aodiv@dividend+4,w
  5057  03C5  1D03               	skipz
  5058  03C6  2BD5               	goto	u1435
  5059  03C7  0823               	movf	___aodiv@divisor+3,w
  5060  03C8  022B               	subwf	___aodiv@dividend+3,w
  5061  03C9  1D03               	skipz
  5062  03CA  2BD5               	goto	u1435
  5063  03CB  0822               	movf	___aodiv@divisor+2,w
  5064  03CC  022A               	subwf	___aodiv@dividend+2,w
  5065  03CD  1D03               	skipz
  5066  03CE  2BD5               	goto	u1435
  5067  03CF  0821               	movf	___aodiv@divisor+1,w
  5068  03D0  0229               	subwf	___aodiv@dividend+1,w
  5069  03D1  1D03               	skipz
  5070  03D2  2BD5               	goto	u1435
  5071  03D3  0820               	movf	___aodiv@divisor,w
  5072  03D4  0228               	subwf	___aodiv@dividend,w
  5073  03D5                     u1435:
  5074  03D5  1C03               	skipc
  5075  03D6  2BD8               	goto	u1431
  5076  03D7  2BD9               	goto	u1430
  5077  03D8                     u1431:
  5078  03D8  2BEA               	goto	l1628
  5079  03D9                     u1430:
  5080  03D9                     l1624:
  5081  03D9  0820               	movf	___aodiv@divisor,w
  5082  03DA  02A8               	subwf	___aodiv@dividend,f
  5083  03DB  0821               	movf	___aodiv@divisor+1,w
  5084  03DC  3BA9               	subwfb	___aodiv@dividend+1,f
  5085  03DD  0822               	movf	___aodiv@divisor+2,w
  5086  03DE  3BAA               	subwfb	___aodiv@dividend+2,f
  5087  03DF  0823               	movf	___aodiv@divisor+3,w
  5088  03E0  3BAB               	subwfb	___aodiv@dividend+3,f
  5089  03E1  0824               	movf	___aodiv@divisor+4,w
  5090  03E2  3BAC               	subwfb	___aodiv@dividend+4,f
  5091  03E3  0825               	movf	___aodiv@divisor+5,w
  5092  03E4  3BAD               	subwfb	___aodiv@dividend+5,f
  5093  03E5  0826               	movf	___aodiv@divisor+6,w
  5094  03E6  3BAE               	subwfb	___aodiv@dividend+6,f
  5095  03E7  0827               	movf	___aodiv@divisor+7,w
  5096  03E8  3BAF               	subwfb	___aodiv@dividend+7,f
  5097  03E9                     l1626:
  5098  03E9  1473               	bsf	___aodiv@quotient,0
  5099  03EA                     l1628:
  5100  03EA  36A7               	lsrf	___aodiv@divisor+7,f
  5101  03EB  0CA6               	rrf	___aodiv@divisor+6,f
  5102  03EC  0CA5               	rrf	___aodiv@divisor+5,f
  5103  03ED  0CA4               	rrf	___aodiv@divisor+4,f
  5104  03EE  0CA3               	rrf	___aodiv@divisor+3,f
  5105  03EF  0CA2               	rrf	___aodiv@divisor+2,f
  5106  03F0  0CA1               	rrf	___aodiv@divisor+1,f
  5107  03F1  0CA0               	rrf	___aodiv@divisor,f
  5108  03F2  3001               	movlw	1
  5109  03F3  02F1               	subwf	___aodiv@counter,f
  5110  03F4  1D03               	btfss	3,2
  5111  03F5  2BF7               	goto	u1441
  5112  03F6  2BF8               	goto	u1440
  5113  03F7                     u1441:
  5114  03F7  2BAF               	goto	l1620
  5115  03F8                     u1440:
  5116  03F8                     l1630:
  5117  03F8  0872               	movf	___aodiv@sign,w
  5118  03F9  1903               	btfsc	3,2
  5119  03FA  2BFC               	goto	u1451
  5120  03FB  2BFD               	goto	u1450
  5121  03FC                     u1451:
  5122  03FC  2C1B               	goto	l307
  5123  03FD                     u1450:
  5124  03FD                     l1632:
  5125  03FD  09F3               	comf	___aodiv@quotient,f
  5126  03FE  09F4               	comf	___aodiv@quotient+1,f
  5127  03FF  09F5               	comf	___aodiv@quotient+2,f
  5128  0400  09F6               	comf	___aodiv@quotient+3,f
  5129  0401  09F7               	comf	___aodiv@quotient+4,f
  5130  0402  09F8               	comf	___aodiv@quotient+5,f
  5131  0403  09F9               	comf	___aodiv@quotient+6,f
  5132  0404  09FA               	comf	___aodiv@quotient+7,f
  5133  0405  0AF3               	incf	___aodiv@quotient,f
  5134  0406  1D03               	skipz
  5135  0407  2C1B               	goto	u146lld
  5136  0408  0AF4               	incf	___aodiv@quotient+1,f
  5137  0409  1D03               	skipz
  5138  040A  2C1B               	goto	u146lld
  5139  040B  0AF5               	incf	___aodiv@quotient+2,f
  5140  040C  1D03               	skipz
  5141  040D  2C1B               	goto	u146lld
  5142  040E  0AF6               	incf	___aodiv@quotient+3,f
  5143  040F  1D03               	skipz
  5144  0410  2C1B               	goto	u146lld
  5145  0411  0AF7               	incf	___aodiv@quotient+4,f
  5146  0412  1D03               	skipz
  5147  0413  2C1B               	goto	u146lld
  5148  0414  0AF8               	incf	___aodiv@quotient+5,f
  5149  0415  1D03               	skipz
  5150  0416  2C1B               	goto	u146lld
  5151  0417  0AF9               	incf	___aodiv@quotient+6,f
  5152  0418  1D03               	skipz
  5153  0419  2C1B               	goto	u146lld
  5154  041A  0AFA               	incf	___aodiv@quotient+7,f
  5155  041B                     u146lld:
  5156  041B                     l307:
  5157  041B  0873               	movf	___aodiv@quotient,w
  5158  041C  0140               	movlb	0	; select bank0
  5159  041D  00A0               	movwf	?___aodiv
  5160  041E  0874               	movf	___aodiv@quotient+1,w
  5161  041F  00A1               	movwf	?___aodiv+1
  5162  0420  0875               	movf	___aodiv@quotient+2,w
  5163  0421  00A2               	movwf	?___aodiv+2
  5164  0422  0876               	movf	___aodiv@quotient+3,w
  5165  0423  00A3               	movwf	?___aodiv+3
  5166  0424  0877               	movf	___aodiv@quotient+4,w
  5167  0425  00A4               	movwf	?___aodiv+4
  5168  0426  0878               	movf	___aodiv@quotient+5,w
  5169  0427  00A5               	movwf	?___aodiv+5
  5170  0428  0879               	movf	___aodiv@quotient+6,w
  5171  0429  00A6               	movwf	?___aodiv+6
  5172  042A  087A               	movf	___aodiv@quotient+7,w
  5173  042B  00A7               	movwf	?___aodiv+7
  5174  042C                     l308:
  5175  042C  0008               	return
  5176  042D                     __end_of___aodiv:
  5177                           
  5178                           	psect	text21
  5179  0CB2                     __ptext21:	
  5180 ;; *************** function _Lcd_Out2 *****************
  5181 ;; Defined at:
  5182 ;;		line 116 in file "./flex_lcd.h"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  y               1    wreg     unsigned char 
  5185 ;;  x               1    3[COMMON] unsigned char 
  5186 ;;  buffer          1    4[COMMON] PTR unsigned char 
  5187 ;;		 -> tex(20), 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  y               1    7[COMMON] unsigned char 
  5190 ;;  data            1    8[COMMON] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5200 ;;      Params:         2       0       0       0       0       0       0       0
  5201 ;;      Locals:         2       0       0       0       0       0       0       0
  5202 ;;      Temps:          2       0       0       0       0       0       0       0
  5203 ;;      Totals:         6       0       0       0       0       0       0       0
  5204 ;;Total ram usage:        6 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    1
  5207 ;; This function calls:
  5208 ;;		_Lcd_Chr_CP
  5209 ;;		_Lcd_Cmd
  5210 ;; This function is called by:
  5211 ;;		_ValorDeGenMax
  5212 ;;		_mostrargenmax
  5213 ;;		_mostrarcantidad
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _Lcd_Out2
  5219  0CB2                     _Lcd_Out2:
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5223                           ;Lcd_Out2@y stored from wreg
  5224  0CB2  00F7               	movwf	Lcd_Out2@y
  5225  0CB3                     l1866:
  5226                           
  5227                           ;./flex_lcd.h: 116: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 117: {;./flex_lcd.h: 118: unsigned char data;;./flex_lcd.h: 119: switch (y)
  5228  0CB3  2CCC               	goto	l1878
  5229  0CB4                     l1868:
  5230  0CB4  0873               	movf	Lcd_Out2@x,w
  5231  0CB5  3E80               	addlw	128
  5232  0CB6  00F5               	movwf	??_Lcd_Out2
  5233  0CB7  0875               	movf	??_Lcd_Out2,w
  5234  0CB8  00F8               	movwf	Lcd_Out2@data
  5235  0CB9  2CE2               	goto	l1880
  5236  0CBA                     l1870:
  5237  0CBA  0873               	movf	Lcd_Out2@x,w
  5238  0CBB  3EC0               	addlw	192
  5239  0CBC  00F5               	movwf	??_Lcd_Out2
  5240  0CBD  0875               	movf	??_Lcd_Out2,w
  5241  0CBE  00F8               	movwf	Lcd_Out2@data
  5242  0CBF  2CE2               	goto	l1880
  5243  0CC0                     l1872:
  5244  0CC0  0873               	movf	Lcd_Out2@x,w
  5245  0CC1  3E94               	addlw	148
  5246  0CC2  00F5               	movwf	??_Lcd_Out2
  5247  0CC3  0875               	movf	??_Lcd_Out2,w
  5248  0CC4  00F8               	movwf	Lcd_Out2@data
  5249  0CC5  2CE2               	goto	l1880
  5250  0CC6                     l1874:
  5251  0CC6  0873               	movf	Lcd_Out2@x,w
  5252  0CC7  3ED4               	addlw	212
  5253  0CC8  00F5               	movwf	??_Lcd_Out2
  5254  0CC9  0875               	movf	??_Lcd_Out2,w
  5255  0CCA  00F8               	movwf	Lcd_Out2@data
  5256  0CCB  2CE2               	goto	l1880
  5257  0CCC                     l1878:
  5258  0CCC  0877               	movf	Lcd_Out2@y,w
  5259  0CCD  00F5               	movwf	??_Lcd_Out2
  5260  0CCE  01F6               	clrf	??_Lcd_Out2+1
  5261                           
  5262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5263                           ; Switch size 1, requested type "simple"
  5264                           ; Number of cases is 1, Range of values is 0 to 0
  5265                           ; switch strategies available:
  5266                           ; Name         Instructions Cycles
  5267                           ; simple_byte            4     3 (average)
  5268                           ; direct_byte            8     6 (fixed)
  5269                           ; jumptable            260     6 (fixed)
  5270                           ;	Chosen strategy is simple_byte
  5271  0CCF  0876               	movf	??_Lcd_Out2+1,w
  5272  0CD0  3A00               	xorlw	0	; case 0
  5273  0CD1  1903               	skipnz
  5274  0CD2  2CD4               	goto	l2344
  5275  0CD3  2CE2               	goto	l1880
  5276  0CD4                     l2344:
  5277                           
  5278                           ; Switch size 1, requested type "simple"
  5279                           ; Number of cases is 4, Range of values is 1 to 4
  5280                           ; switch strategies available:
  5281                           ; Name         Instructions Cycles
  5282                           ; simple_byte           13     7 (average)
  5283                           ; direct_byte           17     9 (fixed)
  5284                           ; jumptable            263     9 (fixed)
  5285                           ;	Chosen strategy is simple_byte
  5286  0CD4  0875               	movf	??_Lcd_Out2,w
  5287  0CD5  3A01               	xorlw	1	; case 1
  5288  0CD6  1903               	skipnz
  5289  0CD7  2CB4               	goto	l1868
  5290  0CD8  3A03               	xorlw	3	; case 2
  5291  0CD9  1903               	skipnz
  5292  0CDA  2CBA               	goto	l1870
  5293  0CDB  3A01               	xorlw	1	; case 3
  5294  0CDC  1903               	skipnz
  5295  0CDD  2CC0               	goto	l1872
  5296  0CDE  3A07               	xorlw	7	; case 4
  5297  0CDF  1903               	skipnz
  5298  0CE0  2CC6               	goto	l1874
  5299  0CE1  2CE2               	goto	l1880
  5300  0CE2                     l1880:
  5301                           
  5302                           ;./flex_lcd.h: 127: Lcd_Cmd(data);
  5303  0CE2  0878               	movf	Lcd_Out2@data,w
  5304  0CE3  318E  262F  318C   	fcall	_Lcd_Cmd
  5305                           
  5306                           ;./flex_lcd.h: 128: while(*buffer)
  5307  0CE6  2CF2               	goto	l1886
  5308  0CE7                     l1882:
  5309                           
  5310                           ;./flex_lcd.h: 129: {;./flex_lcd.h: 130:     Lcd_Chr_CP(*buffer);
  5311  0CE7  0874               	movf	Lcd_Out2@buffer,w
  5312  0CE8  0086               	movwf	6
  5313  0CE9  0187               	clrf	7
  5314  0CEA  0801               	movf	1,w
  5315  0CEB  318E  26C1  318C   	fcall	_Lcd_Chr_CP
  5316  0CEE                     l1884:
  5317                           
  5318                           ;./flex_lcd.h: 131:     buffer++;
  5319  0CEE  3001               	movlw	1
  5320  0CEF  00F5               	movwf	??_Lcd_Out2
  5321  0CF0  0875               	movf	??_Lcd_Out2,w
  5322  0CF1  07F4               	addwf	Lcd_Out2@buffer,f
  5323  0CF2                     l1886:
  5324                           
  5325                           ;./flex_lcd.h: 128: while(*buffer)
  5326  0CF2  0874               	movf	Lcd_Out2@buffer,w
  5327  0CF3  0086               	movwf	6
  5328  0CF4  0187               	clrf	7
  5329  0CF5  0801               	movf	1,w
  5330  0CF6  1D03               	btfss	3,2
  5331  0CF7  2CF9               	goto	u1951
  5332  0CF8  2CFA               	goto	u1950
  5333  0CF9                     u1951:
  5334  0CF9  2CE7               	goto	l1882
  5335  0CFA                     u1950:
  5336  0CFA                     l85:
  5337  0CFA  0008               	return
  5338  0CFB                     __end_of_Lcd_Out2:
  5339                           
  5340                           	psect	text22
  5341  0EC1                     __ptext22:	
  5342 ;; *************** function _Lcd_Chr_CP *****************
  5343 ;; Defined at:
  5344 ;;		line 137 in file "./flex_lcd.h"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  data            1    wreg     unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  data            1    2[COMMON] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5358 ;;      Params:         0       0       0       0       0       0       0       0
  5359 ;;      Locals:         1       0       0       0       0       0       0       0
  5360 ;;      Temps:          2       0       0       0       0       0       0       0
  5361 ;;      Totals:         3       0       0       0       0       0       0       0
  5362 ;;Total ram usage:        3 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_Lcd_Out2
  5368 ;;		_Lcd_Out
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           
  5373                           ;psect for function _Lcd_Chr_CP
  5374  0EC1                     _Lcd_Chr_CP:
  5375                           
  5376                           ;incstack = 0
  5377                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  5378                           ;Lcd_Chr_CP@data stored from wreg
  5379  0EC1  00F2               	movwf	Lcd_Chr_CP@data
  5380  0EC2                     l1822:
  5381                           
  5382                           ;./flex_lcd.h: 138: PORTBbits.RB6 = 0; PORTBbits.RB4 = 1;
  5383  0EC2  0140               	movlb	0	; select bank0
  5384  0EC3  130D               	bcf	13,6	;volatile
  5385  0EC4  160D               	bsf	13,4	;volatile
  5386  0EC5                     l1824:
  5387                           
  5388                           ;./flex_lcd.h: 139: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  5389  0EC5  0872               	movf	Lcd_Chr_CP@data,w
  5390  0EC6  00F0               	movwf	??_Lcd_Chr_CP
  5391  0EC7  3007               	movlw	7
  5392  0EC8                     u1885:
  5393  0EC8  36F0               	lsrf	??_Lcd_Chr_CP,f
  5394  0EC9  0B89               	decfsz	9,f
  5395  0ECA  2EC8               	goto	u1885
  5396  0ECB  0870               	movf	??_Lcd_Chr_CP,w
  5397  0ECC  3901               	andlw	1
  5398  0ECD  00F1               	movwf	??_Lcd_Chr_CP+1
  5399  0ECE  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5400  0ECF  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5401  0ED0  080E               	movf	14,w	;volatile
  5402  0ED1  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5403  0ED2  397F               	andlw	-129
  5404  0ED3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5405  0ED4  008E               	movwf	14	;volatile
  5406  0ED5  0872               	movf	Lcd_Chr_CP@data,w
  5407  0ED6  00F0               	movwf	??_Lcd_Chr_CP
  5408  0ED7  3006               	movlw	6
  5409  0ED8                     u1895:
  5410  0ED8  36F0               	lsrf	??_Lcd_Chr_CP,f
  5411  0ED9  0B89               	decfsz	9,f
  5412  0EDA  2ED8               	goto	u1895
  5413  0EDB  0870               	movf	??_Lcd_Chr_CP,w
  5414  0EDC  3901               	andlw	1
  5415  0EDD  00F1               	movwf	??_Lcd_Chr_CP+1
  5416  0EDE  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5417  0EDF  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5418  0EE0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5419  0EE1  080E               	movf	14,w	;volatile
  5420  0EE2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5421  0EE3  39BF               	andlw	-65
  5422  0EE4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5423  0EE5  008E               	movwf	14	;volatile
  5424                           
  5425                           ;./flex_lcd.h: 140: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  5426  0EE6  0872               	movf	Lcd_Chr_CP@data,w
  5427  0EE7  00F0               	movwf	??_Lcd_Chr_CP
  5428  0EE8  3005               	movlw	5
  5429  0EE9                     u1905:
  5430  0EE9  36F0               	lsrf	??_Lcd_Chr_CP,f
  5431  0EEA  0B89               	decfsz	9,f
  5432  0EEB  2EE9               	goto	u1905
  5433  0EEC  0870               	movf	??_Lcd_Chr_CP,w
  5434  0EED  3901               	andlw	1
  5435  0EEE  00F1               	movwf	??_Lcd_Chr_CP+1
  5436  0EEF  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5437  0EF0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5438  0EF1  080E               	movf	14,w	;volatile
  5439  0EF2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5440  0EF3  39DF               	andlw	-33
  5441  0EF4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5442  0EF5  008E               	movwf	14	;volatile
  5443  0EF6  0872               	movf	Lcd_Chr_CP@data,w
  5444  0EF7  00F0               	movwf	??_Lcd_Chr_CP
  5445  0EF8  3004               	movlw	4
  5446  0EF9                     u1915:
  5447  0EF9  36F0               	lsrf	??_Lcd_Chr_CP,f
  5448  0EFA  0B89               	decfsz	9,f
  5449  0EFB  2EF9               	goto	u1915
  5450  0EFC  0870               	movf	??_Lcd_Chr_CP,w
  5451  0EFD  3901               	andlw	1
  5452  0EFE  00F1               	movwf	??_Lcd_Chr_CP+1
  5453  0EFF  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5454  0F00  080E               	movf	14,w	;volatile
  5455  0F01  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5456  0F02  39EF               	andlw	-17
  5457  0F03  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5458  0F04  008E               	movwf	14	;volatile
  5459  0F05                     l1826:
  5460                           
  5461                           ;./flex_lcd.h: 141: _delay(10);
  5462  0F05  3003               	movlw	3
  5463  0F06                     u2657:
  5464  0F06  0B89               	decfsz	9,f
  5465  0F07  2F06               	goto	u2657
  5466  0F08  0000               	nop
  5467  0F09                     l1828:
  5468                           
  5469                           ;./flex_lcd.h: 142: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5470  0F09  0140               	movlb	0	; select bank0
  5471  0F0A  170D               	bsf	13,6	;volatile
  5472  0F0B                     l1830:
  5473  0F0B  0000               	nop
  5474  0F0C                     l1832:
  5475  0F0C  0140               	movlb	0	; select bank0
  5476  0F0D  130D               	bcf	13,6	;volatile
  5477  0F0E                     l1834:
  5478                           
  5479                           ;./flex_lcd.h: 143: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  5480  0F0E  0872               	movf	Lcd_Chr_CP@data,w
  5481  0F0F  00F0               	movwf	??_Lcd_Chr_CP
  5482  0F10  3003               	movlw	3
  5483  0F11                     u1925:
  5484  0F11  36F0               	lsrf	??_Lcd_Chr_CP,f
  5485  0F12  0B89               	decfsz	9,f
  5486  0F13  2F11               	goto	u1925
  5487  0F14  0870               	movf	??_Lcd_Chr_CP,w
  5488  0F15  3901               	andlw	1
  5489  0F16  00F1               	movwf	??_Lcd_Chr_CP+1
  5490  0F17  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5491  0F18  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5492  0F19  080E               	movf	14,w	;volatile
  5493  0F1A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5494  0F1B  397F               	andlw	-129
  5495  0F1C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5496  0F1D  008E               	movwf	14	;volatile
  5497  0F1E                     l1836:
  5498  0F1E  0872               	movf	Lcd_Chr_CP@data,w
  5499  0F1F  00F0               	movwf	??_Lcd_Chr_CP
  5500  0F20  3002               	movlw	2
  5501  0F21                     u1935:
  5502  0F21  36F0               	lsrf	??_Lcd_Chr_CP,f
  5503  0F22  0B89               	decfsz	9,f
  5504  0F23  2F21               	goto	u1935
  5505  0F24  0870               	movf	??_Lcd_Chr_CP,w
  5506  0F25  3901               	andlw	1
  5507  0F26  00F1               	movwf	??_Lcd_Chr_CP+1
  5508  0F27  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5509  0F28  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5510  0F29  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5511  0F2A  080E               	movf	14,w	;volatile
  5512  0F2B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5513  0F2C  39BF               	andlw	-65
  5514  0F2D  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5515  0F2E  008E               	movwf	14	;volatile
  5516  0F2F                     l1838:
  5517                           
  5518                           ;./flex_lcd.h: 144: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  5519  0F2F  3672               	lsrf	Lcd_Chr_CP@data,w
  5520  0F30  3901               	andlw	1
  5521  0F31  00F0               	movwf	??_Lcd_Chr_CP
  5522  0F32  0EF0               	swapf	??_Lcd_Chr_CP,f
  5523  0F33  0DF0               	rlf	??_Lcd_Chr_CP,f
  5524  0F34  080E               	movf	14,w	;volatile
  5525  0F35  0670               	xorwf	??_Lcd_Chr_CP,w
  5526  0F36  39DF               	andlw	-33
  5527  0F37  0670               	xorwf	??_Lcd_Chr_CP,w
  5528  0F38  008E               	movwf	14	;volatile
  5529  0F39                     l1840:
  5530  0F39  0872               	movf	Lcd_Chr_CP@data,w
  5531  0F3A  3901               	andlw	1
  5532  0F3B  00F0               	movwf	??_Lcd_Chr_CP
  5533  0F3C  0EF0               	swapf	??_Lcd_Chr_CP,f
  5534  0F3D  080E               	movf	14,w	;volatile
  5535  0F3E  0670               	xorwf	??_Lcd_Chr_CP,w
  5536  0F3F  39EF               	andlw	-17
  5537  0F40  0670               	xorwf	??_Lcd_Chr_CP,w
  5538  0F41  008E               	movwf	14	;volatile
  5539  0F42                     l1842:
  5540                           
  5541                           ;./flex_lcd.h: 145: _delay(10);
  5542  0F42  3003               	movlw	3
  5543  0F43                     u2667:
  5544  0F43  0B89               	decfsz	9,f
  5545  0F44  2F43               	goto	u2667
  5546  0F45  0000               	nop
  5547  0F46                     l1844:
  5548                           
  5549                           ;./flex_lcd.h: 146: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5550  0F46  0140               	movlb	0	; select bank0
  5551  0F47  170D               	bsf	13,6	;volatile
  5552  0F48                     l1846:
  5553  0F48  0000               	nop
  5554  0F49                     l1848:
  5555  0F49  0140               	movlb	0	; select bank0
  5556  0F4A  130D               	bcf	13,6	;volatile
  5557  0F4B                     l1850:
  5558                           
  5559                           ;./flex_lcd.h: 147: _delay((unsigned long)((5)*(1000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(1000000/4000000.0)));
  5560  0F4B  0000               	nop
  5561  0F4C                     l1852:
  5562  0F4C  30C4               	movlw	196
  5563  0F4D                     u2677:
  5564  0F4D  3200               	nop2
  5565  0F4E  3200               	nop2
  5566  0F4F  0B89               	decfsz	9,f
  5567  0F50  2F4D               	goto	u2677
  5568  0F51  3200               	nop2
  5569  0F52  0000               	nop
  5570  0F53                     l88:
  5571  0F53  0008               	return
  5572  0F54                     __end_of_Lcd_Chr_CP:
  5573                           
  5574                           	psect	text23
  5575  0B44                     __ptext23:	
  5576 ;; *************** function _PIN_MANAGER_Initialize *****************
  5577 ;; Defined at:
  5578 ;;		line 72 in file "MAIN.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5592 ;;      Params:         0       0       0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_main
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _PIN_MANAGER_Initialize
  5607  0B44                     _PIN_MANAGER_Initialize:
  5608  0B44                     l1944:	
  5609                           ;incstack = 0
  5610                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5611                           
  5612                           
  5613                           ;MAIN.c: 74:   LATA = 0x00;
  5614  0B44  0140               	movlb	0	; select bank0
  5615  0B45  0198               	clrf	24	;volatile
  5616                           
  5617                           ;MAIN.c: 75:   LATB = 0x00;
  5618  0B46  0199               	clrf	25	;volatile
  5619                           
  5620                           ;MAIN.c: 76:   LATC = 0x00;
  5621  0B47  019A               	clrf	26	;volatile
  5622                           
  5623                           ;MAIN.c: 79:   TRISA = 0b00000000;
  5624  0B48  0192               	clrf	18	;volatile
  5625                           
  5626                           ;MAIN.c: 80:   TRISB = 0b00000000;
  5627  0B49  0193               	clrf	19	;volatile
  5628  0B4A                     l1946:
  5629                           
  5630                           ;MAIN.c: 81:   TRISC = 0b00001111;
  5631  0B4A  300F               	movlw	15
  5632  0B4B  0094               	movwf	20	;volatile
  5633  0B4C                     l1948:
  5634                           
  5635                           ;MAIN.c: 84:   ANSELC = 0;
  5636  0B4C  017E               	movlb	62	; select bank62
  5637  0B4D  01CE               	clrf	78	;volatile
  5638  0B4E                     l1950:
  5639                           
  5640                           ;MAIN.c: 86:   ANSELA = 0;
  5641  0B4E  01B8               	clrf	56	;volatile
  5642  0B4F                     l1952:
  5643                           
  5644                           ;MAIN.c: 91:   ODCONA = 0x04;
  5645  0B4F  3004               	movlw	4
  5646  0B50  00BA               	movwf	58	;volatile
  5647                           
  5648                           ;MAIN.c: 93:   ODCONC = 0x00;
  5649  0B51  01D0               	clrf	80	;volatile
  5650  0B52                     l1954:
  5651                           
  5652                           ;MAIN.c: 96:   SLRCONA = 0x37;
  5653  0B52  3037               	movlw	55
  5654  0B53  00BB               	movwf	59	;volatile
  5655  0B54                     l1956:
  5656                           
  5657                           ;MAIN.c: 98:   SLRCONC = 0xFF;
  5658  0B54  30FF               	movlw	255
  5659  0B55  00D1               	movwf	81	;volatile
  5660  0B56                     l1958:
  5661                           
  5662                           ;MAIN.c: 101:   INLVLA = 0x3F;
  5663  0B56  303F               	movlw	63
  5664  0B57  00BC               	movwf	60	;volatile
  5665  0B58                     l1960:
  5666                           
  5667                           ;MAIN.c: 103:   INLVLC = 0xFF;
  5668  0B58  30FF               	movlw	255
  5669  0B59  00D2               	movwf	82	;volatile
  5670  0B5A                     l102:
  5671  0B5A  0008               	return
  5672  0B5B                     __end_of_PIN_MANAGER_Initialize:
  5673                           
  5674                           	psect	text24
  5675  0B33                     __ptext24:	
  5676 ;; *************** function _OSCILLATOR_Initialize *****************
  5677 ;; Defined at:
  5678 ;;		line 106 in file "MAIN.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		status,2
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5692 ;;      Params:         0       0       0       0       0       0       0       0
  5693 ;;      Locals:         0       0       0       0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0
  5695 ;;      Totals:         0       0       0       0       0       0       0       0
  5696 ;;Total ram usage:        0 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _OSCILLATOR_Initialize
  5707  0B33                     _OSCILLATOR_Initialize:
  5708  0B33                     l1962:	
  5709                           ;incstack = 0
  5710                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  5711                           
  5712                           
  5713                           ;MAIN.c: 108:     OSCEN=0x00;
  5714  0B33  0151               	movlb	17	; select bank17
  5715  0B34  0191               	clrf	17	;volatile
  5716                           
  5717                           ;MAIN.c: 109:     OSCFRQ=0x00;
  5718  0B35  0193               	clrf	19	;volatile
  5719                           
  5720                           ;MAIN.c: 110:     OSCTUNE=0x00;
  5721  0B36  0192               	clrf	18	;volatile
  5722  0B37                     l105:
  5723  0B37  0008               	return
  5724  0B38                     __end_of_OSCILLATOR_Initialize:
  5725                           
  5726                           	psect	text25
  5727  0DA3                     __ptext25:	
  5728 ;; *************** function _Lcd_Init *****************
  5729 ;; Defined at:
  5730 ;;		line 53 in file "./flex_lcd.h"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  data            1    4[COMMON] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, pclath, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5744 ;;      Params:         0       0       0       0       0       0       0       0
  5745 ;;      Locals:         1       0       0       0       0       0       0       0
  5746 ;;      Temps:          1       0       0       0       0       0       0       0
  5747 ;;      Totals:         2       0       0       0       0       0       0       0
  5748 ;;Total ram usage:        2 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    1
  5751 ;; This function calls:
  5752 ;;		_Lcd_Cmd
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           
  5759                           ;psect for function _Lcd_Init
  5760  0DA3                     _Lcd_Init:
  5761  0DA3                     l1918:	
  5762                           ;incstack = 0
  5763                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5764                           
  5765                           
  5766                           ;./flex_lcd.h: 54: unsigned char data;;./flex_lcd.h: 55: TRISCbits.TRISC7 = 0;
  5767  0DA3  0140               	movlb	0	; select bank0
  5768  0DA4  1394               	bcf	20,7	;volatile
  5769                           
  5770                           ;./flex_lcd.h: 56: TRISCbits.TRISC6 = 0;
  5771  0DA5  1314               	bcf	20,6	;volatile
  5772                           
  5773                           ;./flex_lcd.h: 57: TRISCbits.TRISC5 = 0;
  5774  0DA6  1294               	bcf	20,5	;volatile
  5775                           
  5776                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  5777  0DA7  1214               	bcf	20,4	;volatile
  5778                           
  5779                           ;./flex_lcd.h: 59: TRISBbits.TRISB6 = 0;
  5780  0DA8  1313               	bcf	19,6	;volatile
  5781                           
  5782                           ;./flex_lcd.h: 60: TRISBbits.TRISB4 = 0;
  5783  0DA9  1213               	bcf	19,4	;volatile
  5784                           
  5785                           ;./flex_lcd.h: 61: PORTCbits.RC7 = 0;
  5786  0DAA  138E               	bcf	14,7	;volatile
  5787                           
  5788                           ;./flex_lcd.h: 62: PORTCbits.RC6 = 0;
  5789  0DAB  130E               	bcf	14,6	;volatile
  5790                           
  5791                           ;./flex_lcd.h: 63: PORTCbits.RC5 = 0;
  5792  0DAC  128E               	bcf	14,5	;volatile
  5793                           
  5794                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  5795  0DAD  120E               	bcf	14,4	;volatile
  5796                           
  5797                           ;./flex_lcd.h: 65: PORTBbits.RB6 = 0;
  5798  0DAE  130D               	bcf	13,6	;volatile
  5799                           
  5800                           ;./flex_lcd.h: 66: PORTBbits.RB4 = 0;
  5801  0DAF  120D               	bcf	13,4	;volatile
  5802  0DB0                     l1920:
  5803                           
  5804                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5805  0DB0  30C4               	movlw	196
  5806  0DB1                     u2687:
  5807  0DB1  3200               	nop2
  5808  0DB2  3200               	nop2
  5809  0DB3  0B89               	decfsz	9,f
  5810  0DB4  2DB1               	goto	u2687
  5811  0DB5  3200               	nop2
  5812  0DB6  0000               	nop
  5813                           
  5814                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5815  0DB7  30C4               	movlw	196
  5816  0DB8                     u2697:
  5817  0DB8  3200               	nop2
  5818  0DB9  3200               	nop2
  5819  0DBA  0B89               	decfsz	9,f
  5820  0DBB  2DB8               	goto	u2697
  5821  0DBC  3200               	nop2
  5822  0DBD  0000               	nop
  5823                           
  5824                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5825  0DBE  30C4               	movlw	196
  5826  0DBF                     u2707:
  5827  0DBF  3200               	nop2
  5828  0DC0  3200               	nop2
  5829  0DC1  0B89               	decfsz	9,f
  5830  0DC2  2DBF               	goto	u2707
  5831  0DC3  3200               	nop2
  5832  0DC4  0000               	nop
  5833                           
  5834                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5835  0DC5  30C4               	movlw	196
  5836  0DC6                     u2717:
  5837  0DC6  3200               	nop2
  5838  0DC7  3200               	nop2
  5839  0DC8  0B89               	decfsz	9,f
  5840  0DC9  2DC6               	goto	u2717
  5841  0DCA  3200               	nop2
  5842  0DCB  0000               	nop
  5843                           
  5844                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5845  0DCC  30C4               	movlw	196
  5846  0DCD                     u2727:
  5847  0DCD  3200               	nop2
  5848  0DCE  3200               	nop2
  5849  0DCF  0B89               	decfsz	9,f
  5850  0DD0  2DCD               	goto	u2727
  5851  0DD1  3200               	nop2
  5852  0DD2  0000               	nop
  5853                           
  5854                           ;./flex_lcd.h: 72: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5855  0DD3  30C4               	movlw	196
  5856  0DD4                     u2737:
  5857  0DD4  3200               	nop2
  5858  0DD5  3200               	nop2
  5859  0DD6  0B89               	decfsz	9,f
  5860  0DD7  2DD4               	goto	u2737
  5861  0DD8  3200               	nop2
  5862  0DD9  0000               	nop
  5863  0DDA                     l1922:
  5864                           
  5865                           ;./flex_lcd.h: 73: for(data = 1; data < 4; data ++)
  5866  0DDA  01F4               	clrf	Lcd_Init@data
  5867  0DDB  0AF4               	incf	Lcd_Init@data,f
  5868  0DDC                     l57:
  5869                           
  5870                           ;./flex_lcd.h: 74: {;./flex_lcd.h: 75:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbi
      +                          ts.RC5 = 1; PORTCbits.RC4 = 1; PORTBbits.RB6 = 0;
  5871  0DDC  0140               	movlb	0	; select bank0
  5872  0DDD  138E               	bcf	14,7	;volatile
  5873  0DDE  130E               	bcf	14,6	;volatile
  5874  0DDF  168E               	bsf	14,5	;volatile
  5875  0DE0  160E               	bsf	14,4	;volatile
  5876  0DE1  130D               	bcf	13,6	;volatile
  5877                           
  5878                           ;./flex_lcd.h: 76:     PORTBbits.RB4 = 0; PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbit
      +                          s.RC5 = 1; PORTCbits.RC4 = 1;
  5879  0DE2  120D               	bcf	13,4	;volatile
  5880  0DE3  138E               	bcf	14,7	;volatile
  5881  0DE4  130E               	bcf	14,6	;volatile
  5882  0DE5  168E               	bsf	14,5	;volatile
  5883  0DE6  160E               	bsf	14,4	;volatile
  5884                           
  5885                           ;./flex_lcd.h: 77:     PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  5886  0DE7  170D               	bsf	13,6	;volatile
  5887  0DE8  120D               	bcf	13,4	;volatile
  5888                           
  5889                           ;./flex_lcd.h: 78:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  5890  0DE9  0000               	nop
  5891                           
  5892                           ;./flex_lcd.h: 79:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbit
      +                          s.RC4 = 1; PORTBbits.RB6 = 0;
  5893  0DEA  0140               	movlb	0	; select bank0
  5894  0DEB  138E               	bcf	14,7	;volatile
  5895  0DEC  130E               	bcf	14,6	;volatile
  5896  0DED  168E               	bsf	14,5	;volatile
  5897  0DEE  160E               	bsf	14,4	;volatile
  5898  0DEF  130D               	bcf	13,6	;volatile
  5899                           
  5900                           ;./flex_lcd.h: 80:     PORTBbits.RB4 = 0;
  5901  0DF0  120D               	bcf	13,4	;volatile
  5902  0DF1                     l1926:
  5903                           
  5904                           ;./flex_lcd.h: 81:     _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5905  0DF1  30C4               	movlw	196
  5906  0DF2                     u2747:
  5907  0DF2  3200               	nop2
  5908  0DF3  3200               	nop2
  5909  0DF4  0B89               	decfsz	9,f
  5910  0DF5  2DF2               	goto	u2747
  5911  0DF6  3200               	nop2
  5912  0DF7  0000               	nop
  5913  0DF8                     l1928:
  5914                           
  5915                           ;./flex_lcd.h: 82: }
  5916  0DF8  3001               	movlw	1
  5917  0DF9  00F3               	movwf	??_Lcd_Init
  5918  0DFA  0873               	movf	??_Lcd_Init,w
  5919  0DFB  07F4               	addwf	Lcd_Init@data,f
  5920  0DFC                     l1930:
  5921  0DFC  3004               	movlw	4
  5922  0DFD  0274               	subwf	Lcd_Init@data,w
  5923  0DFE  1C03               	skipc
  5924  0DFF  2E01               	goto	u1991
  5925  0E00  2E02               	goto	u1990
  5926  0E01                     u1991:
  5927  0E01  2DDC               	goto	l57
  5928  0E02                     u1990:
  5929  0E02                     l58:
  5930                           
  5931                           ;./flex_lcd.h: 83: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5932  0E02  0140               	movlb	0	; select bank0
  5933  0E03  138E               	bcf	14,7	;volatile
  5934  0E04  130E               	bcf	14,6	;volatile
  5935  0E05  168E               	bsf	14,5	;volatile
  5936  0E06  120E               	bcf	14,4	;volatile
  5937  0E07  130D               	bcf	13,6	;volatile
  5938  0E08  120D               	bcf	13,4	;volatile
  5939                           
  5940                           ;./flex_lcd.h: 84: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  5941  0E09  138E               	bcf	14,7	;volatile
  5942  0E0A  130E               	bcf	14,6	;volatile
  5943  0E0B  168E               	bsf	14,5	;volatile
  5944  0E0C  120E               	bcf	14,4	;volatile
  5945  0E0D  170D               	bsf	13,6	;volatile
  5946  0E0E  120D               	bcf	13,4	;volatile
  5947                           
  5948                           ;./flex_lcd.h: 85: _delay((unsigned long)((5)*(1000000/4000000.0)));
  5949  0E0F  0000               	nop
  5950                           
  5951                           ;./flex_lcd.h: 86: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5952  0E10  0140               	movlb	0	; select bank0
  5953  0E11  138E               	bcf	14,7	;volatile
  5954  0E12  130E               	bcf	14,6	;volatile
  5955  0E13  168E               	bsf	14,5	;volatile
  5956  0E14  120E               	bcf	14,4	;volatile
  5957  0E15  130D               	bcf	13,6	;volatile
  5958  0E16  120D               	bcf	13,4	;volatile
  5959  0E17                     l1932:
  5960                           
  5961                           ;./flex_lcd.h: 87: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5962  0E17  30C4               	movlw	196
  5963  0E18                     u2757:
  5964  0E18  3200               	nop2
  5965  0E19  3200               	nop2
  5966  0E1A  0B89               	decfsz	9,f
  5967  0E1B  2E18               	goto	u2757
  5968  0E1C  3200               	nop2
  5969  0E1D  0000               	nop
  5970  0E1E                     l1934:
  5971  0E1E  3028               	movlw	40
  5972  0E1F  318E  262F  318D   	fcall	_Lcd_Cmd
  5973  0E22                     l1936:
  5974  0E22  3010               	movlw	16
  5975  0E23  318E  262F  318D   	fcall	_Lcd_Cmd
  5976  0E26                     l1938:
  5977  0E26  3001               	movlw	1
  5978  0E27  318E  262F  318D   	fcall	_Lcd_Cmd
  5979  0E2A                     l1940:
  5980  0E2A                     l1942:
  5981  0E2A  300F               	movlw	15
  5982  0E2B  318E  262F  318D   	fcall	_Lcd_Cmd
  5983  0E2E                     l59:
  5984  0E2E  0008               	return
  5985  0E2F                     __end_of_Lcd_Init:
  5986                           
  5987                           	psect	text26
  5988  0E2F                     __ptext26:	
  5989 ;; *************** function _Lcd_Cmd *****************
  5990 ;; Defined at:
  5991 ;;		line 151 in file "./flex_lcd.h"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  data            1    wreg     unsigned char 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  data            1    2[COMMON] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6005 ;;      Params:         0       0       0       0       0       0       0       0
  6006 ;;      Locals:         1       0       0       0       0       0       0       0
  6007 ;;      Temps:          2       0       0       0       0       0       0       0
  6008 ;;      Totals:         3       0       0       0       0       0       0       0
  6009 ;;Total ram usage:        3 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_Lcd_Init
  6015 ;;		_Lcd_Out2
  6016 ;;		_ValorDeGenMax
  6017 ;;		_mostrargenmax
  6018 ;;		_mostrarcantidad
  6019 ;;		_main
  6020 ;;		_Lcd_Out
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function _Lcd_Cmd
  6026  0E2F                     _Lcd_Cmd:
  6027                           
  6028                           ;incstack = 0
  6029                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  6030                           ;Lcd_Cmd@data stored from wreg
  6031  0E2F  00F2               	movwf	Lcd_Cmd@data
  6032  0E30                     l1792:
  6033                           
  6034                           ;./flex_lcd.h: 152: PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  6035  0E30  0140               	movlb	0	; select bank0
  6036  0E31  130D               	bcf	13,6	;volatile
  6037  0E32  120D               	bcf	13,4	;volatile
  6038  0E33                     l1794:
  6039                           
  6040                           ;./flex_lcd.h: 153: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  6041  0E33  0872               	movf	Lcd_Cmd@data,w
  6042  0E34  00F0               	movwf	??_Lcd_Cmd
  6043  0E35  3007               	movlw	7
  6044  0E36                     u1825:
  6045  0E36  36F0               	lsrf	??_Lcd_Cmd,f
  6046  0E37  0B89               	decfsz	9,f
  6047  0E38  2E36               	goto	u1825
  6048  0E39  0870               	movf	??_Lcd_Cmd,w
  6049  0E3A  3901               	andlw	1
  6050  0E3B  00F1               	movwf	??_Lcd_Cmd+1
  6051  0E3C  0CF1               	rrf	??_Lcd_Cmd+1,f
  6052  0E3D  0CF1               	rrf	??_Lcd_Cmd+1,f
  6053  0E3E  080E               	movf	14,w	;volatile
  6054  0E3F  0671               	xorwf	??_Lcd_Cmd+1,w
  6055  0E40  397F               	andlw	-129
  6056  0E41  0671               	xorwf	??_Lcd_Cmd+1,w
  6057  0E42  008E               	movwf	14	;volatile
  6058  0E43  0872               	movf	Lcd_Cmd@data,w
  6059  0E44  00F0               	movwf	??_Lcd_Cmd
  6060  0E45  3006               	movlw	6
  6061  0E46                     u1835:
  6062  0E46  36F0               	lsrf	??_Lcd_Cmd,f
  6063  0E47  0B89               	decfsz	9,f
  6064  0E48  2E46               	goto	u1835
  6065  0E49  0870               	movf	??_Lcd_Cmd,w
  6066  0E4A  3901               	andlw	1
  6067  0E4B  00F1               	movwf	??_Lcd_Cmd+1
  6068  0E4C  0EF1               	swapf	??_Lcd_Cmd+1,f
  6069  0E4D  0DF1               	rlf	??_Lcd_Cmd+1,f
  6070  0E4E  0DF1               	rlf	??_Lcd_Cmd+1,f
  6071  0E4F  080E               	movf	14,w	;volatile
  6072  0E50  0671               	xorwf	??_Lcd_Cmd+1,w
  6073  0E51  39BF               	andlw	-65
  6074  0E52  0671               	xorwf	??_Lcd_Cmd+1,w
  6075  0E53  008E               	movwf	14	;volatile
  6076                           
  6077                           ;./flex_lcd.h: 154: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  6078  0E54  0872               	movf	Lcd_Cmd@data,w
  6079  0E55  00F0               	movwf	??_Lcd_Cmd
  6080  0E56  3005               	movlw	5
  6081  0E57                     u1845:
  6082  0E57  36F0               	lsrf	??_Lcd_Cmd,f
  6083  0E58  0B89               	decfsz	9,f
  6084  0E59  2E57               	goto	u1845
  6085  0E5A  0870               	movf	??_Lcd_Cmd,w
  6086  0E5B  3901               	andlw	1
  6087  0E5C  00F1               	movwf	??_Lcd_Cmd+1
  6088  0E5D  0EF1               	swapf	??_Lcd_Cmd+1,f
  6089  0E5E  0DF1               	rlf	??_Lcd_Cmd+1,f
  6090  0E5F  080E               	movf	14,w	;volatile
  6091  0E60  0671               	xorwf	??_Lcd_Cmd+1,w
  6092  0E61  39DF               	andlw	-33
  6093  0E62  0671               	xorwf	??_Lcd_Cmd+1,w
  6094  0E63  008E               	movwf	14	;volatile
  6095  0E64  0872               	movf	Lcd_Cmd@data,w
  6096  0E65  00F0               	movwf	??_Lcd_Cmd
  6097  0E66  3004               	movlw	4
  6098  0E67                     u1855:
  6099  0E67  36F0               	lsrf	??_Lcd_Cmd,f
  6100  0E68  0B89               	decfsz	9,f
  6101  0E69  2E67               	goto	u1855
  6102  0E6A  0870               	movf	??_Lcd_Cmd,w
  6103  0E6B  3901               	andlw	1
  6104  0E6C  00F1               	movwf	??_Lcd_Cmd+1
  6105  0E6D  0EF1               	swapf	??_Lcd_Cmd+1,f
  6106  0E6E  080E               	movf	14,w	;volatile
  6107  0E6F  0671               	xorwf	??_Lcd_Cmd+1,w
  6108  0E70  39EF               	andlw	-17
  6109  0E71  0671               	xorwf	??_Lcd_Cmd+1,w
  6110  0E72  008E               	movwf	14	;volatile
  6111  0E73                     l1796:
  6112                           
  6113                           ;./flex_lcd.h: 155: _delay(10);
  6114  0E73  3003               	movlw	3
  6115  0E74                     u2767:
  6116  0E74  0B89               	decfsz	9,f
  6117  0E75  2E74               	goto	u2767
  6118  0E76  0000               	nop
  6119  0E77                     l1798:
  6120                           
  6121                           ;./flex_lcd.h: 156: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  6122  0E77  0140               	movlb	0	; select bank0
  6123  0E78  170D               	bsf	13,6	;volatile
  6124  0E79                     l1800:
  6125  0E79  0000               	nop
  6126  0E7A                     l1802:
  6127  0E7A  0140               	movlb	0	; select bank0
  6128  0E7B  130D               	bcf	13,6	;volatile
  6129  0E7C                     l1804:
  6130                           
  6131                           ;./flex_lcd.h: 157: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  6132  0E7C  0872               	movf	Lcd_Cmd@data,w
  6133  0E7D  00F0               	movwf	??_Lcd_Cmd
  6134  0E7E  3003               	movlw	3
  6135  0E7F                     u1865:
  6136  0E7F  36F0               	lsrf	??_Lcd_Cmd,f
  6137  0E80  0B89               	decfsz	9,f
  6138  0E81  2E7F               	goto	u1865
  6139  0E82  0870               	movf	??_Lcd_Cmd,w
  6140  0E83  3901               	andlw	1
  6141  0E84  00F1               	movwf	??_Lcd_Cmd+1
  6142  0E85  0CF1               	rrf	??_Lcd_Cmd+1,f
  6143  0E86  0CF1               	rrf	??_Lcd_Cmd+1,f
  6144  0E87  080E               	movf	14,w	;volatile
  6145  0E88  0671               	xorwf	??_Lcd_Cmd+1,w
  6146  0E89  397F               	andlw	-129
  6147  0E8A  0671               	xorwf	??_Lcd_Cmd+1,w
  6148  0E8B  008E               	movwf	14	;volatile
  6149  0E8C                     l1806:
  6150  0E8C  0872               	movf	Lcd_Cmd@data,w
  6151  0E8D  00F0               	movwf	??_Lcd_Cmd
  6152  0E8E  3002               	movlw	2
  6153  0E8F                     u1875:
  6154  0E8F  36F0               	lsrf	??_Lcd_Cmd,f
  6155  0E90  0B89               	decfsz	9,f
  6156  0E91  2E8F               	goto	u1875
  6157  0E92  0870               	movf	??_Lcd_Cmd,w
  6158  0E93  3901               	andlw	1
  6159  0E94  00F1               	movwf	??_Lcd_Cmd+1
  6160  0E95  0EF1               	swapf	??_Lcd_Cmd+1,f
  6161  0E96  0DF1               	rlf	??_Lcd_Cmd+1,f
  6162  0E97  0DF1               	rlf	??_Lcd_Cmd+1,f
  6163  0E98  080E               	movf	14,w	;volatile
  6164  0E99  0671               	xorwf	??_Lcd_Cmd+1,w
  6165  0E9A  39BF               	andlw	-65
  6166  0E9B  0671               	xorwf	??_Lcd_Cmd+1,w
  6167  0E9C  008E               	movwf	14	;volatile
  6168  0E9D                     l1808:
  6169                           
  6170                           ;./flex_lcd.h: 158: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  6171  0E9D  3672               	lsrf	Lcd_Cmd@data,w
  6172  0E9E  3901               	andlw	1
  6173  0E9F  00F0               	movwf	??_Lcd_Cmd
  6174  0EA0  0EF0               	swapf	??_Lcd_Cmd,f
  6175  0EA1  0DF0               	rlf	??_Lcd_Cmd,f
  6176  0EA2  080E               	movf	14,w	;volatile
  6177  0EA3  0670               	xorwf	??_Lcd_Cmd,w
  6178  0EA4  39DF               	andlw	-33
  6179  0EA5  0670               	xorwf	??_Lcd_Cmd,w
  6180  0EA6  008E               	movwf	14	;volatile
  6181  0EA7                     l1810:
  6182  0EA7  0872               	movf	Lcd_Cmd@data,w
  6183  0EA8  3901               	andlw	1
  6184  0EA9  00F0               	movwf	??_Lcd_Cmd
  6185  0EAA  0EF0               	swapf	??_Lcd_Cmd,f
  6186  0EAB  080E               	movf	14,w	;volatile
  6187  0EAC  0670               	xorwf	??_Lcd_Cmd,w
  6188  0EAD  39EF               	andlw	-17
  6189  0EAE  0670               	xorwf	??_Lcd_Cmd,w
  6190  0EAF  008E               	movwf	14	;volatile
  6191  0EB0                     l1812:
  6192                           
  6193                           ;./flex_lcd.h: 159: _delay(10);
  6194  0EB0  3003               	movlw	3
  6195  0EB1                     u2777:
  6196  0EB1  0B89               	decfsz	9,f
  6197  0EB2  2EB1               	goto	u2777
  6198  0EB3  0000               	nop
  6199  0EB4                     l1814:
  6200                           
  6201                           ;./flex_lcd.h: 160: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  6202  0EB4  0140               	movlb	0	; select bank0
  6203  0EB5  170D               	bsf	13,6	;volatile
  6204  0EB6                     l1816:
  6205  0EB6  0000               	nop
  6206  0EB7                     l1818:
  6207  0EB7  0140               	movlb	0	; select bank0
  6208  0EB8  130D               	bcf	13,6	;volatile
  6209  0EB9                     l1820:
  6210                           
  6211                           ;./flex_lcd.h: 161: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  6212  0EB9  30C4               	movlw	196
  6213  0EBA                     u2787:
  6214  0EBA  3200               	nop2
  6215  0EBB  3200               	nop2
  6216  0EBC  0B89               	decfsz	9,f
  6217  0EBD  2EBA               	goto	u2787
  6218  0EBE  3200               	nop2
  6219  0EBF  0000               	nop
  6220  0EC0                     l91:
  6221  0EC0  0008               	return
  6222  0EC1                     __end_of_Lcd_Cmd:
  6223  007E                     btemp	set	126	;btemp
  6224  007E                     wtemp0	set	126
  6225                           
  6226                           	psect	config
  6227                           
  6228                           ;Config register CONFIG1 @ 0x8007
  6229                           ;	External Oscillator Mode Selection bits
  6230                           ;	FEXTOSC = OFF, Oscillator not enabled
  6231                           ;	Power-up Default Value for COSC bits
  6232                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  6233                           ;	Clock Out Enable bit
  6234                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6235                           ;	VDD Range Analog Calibration Selection bit
  6236                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6237  8007                     	org	32775
  6238  8007  3FED               	dw	16365
  6239                           
  6240                           ;Config register CONFIG2 @ 0x8008
  6241                           ;	Master Clear Enable bit
  6242                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6243                           ;	Power-up Timer Selection bits
  6244                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6245                           ;	WDT Operating Mode bits
  6246                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6247                           ;	Brown-out Reset Enable bits
  6248                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6249                           ;	Brown-out Reset Voltage Selection bit
  6250                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6251                           ;	PPSLOCKED One-Way Set Enable bit
  6252                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  6253                           ;	Stack Overflow/Underflow Reset Enable bit
  6254                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6255  8008                     	org	32776
  6256  8008  3FE7               	dw	16359
  6257                           
  6258                           ;Config register CONFIG4 @ 0x800A
  6259                           ;	Boot Block Size Selection bits
  6260                           ;	BBSIZE = BB512, 512 words boot block size
  6261                           ;	Boot Block Enable bit
  6262                           ;	BBEN = OFF, Boot Block is disabled
  6263                           ;	SAF Enable bit
  6264                           ;	SAFEN = OFF, SAF is disabled
  6265                           ;	Application Block Write Protection bit
  6266                           ;	WRTAPP = OFF, Application Block is not write-protected
  6267                           ;	Boot Block Write Protection bit
  6268                           ;	WRTB = OFF, Boot Block is not write-protected
  6269                           ;	Configuration Registers Write Protection bit
  6270                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6271                           ;	Storage Area Flash (SAF) Write Protection bit
  6272                           ;	WRTSAF = OFF, SAF is not write-protected
  6273                           ;	Low Voltage Programming Enable bit
  6274                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6275  800A                     	org	32778
  6276  800A  3FFF               	dw	16383
  6277                           
  6278                           ;Config register CONFIG5 @ 0x800B
  6279                           ;	User Program Flash Memory Code Protection bit
  6280                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6281  800B                     	org	32779
  6282  800B  3FFF               	dw	16383

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         66
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80      9      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> tex(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[16]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[16]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[16]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> tex(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S557_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> tex(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> tex(BANK1[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> tex(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _mostrargenmax->_sprintf
    _mostrarcantidad->_sprintf
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _ValorDeGenMax->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_ValorDeGenMax
    _mostrargenmax->_sprintf
    _mostrarcantidad->_sprintf
    ___fltol->___flmul
    _ValorDeGenMax->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _mostrargenmax->_sprintf
    _mostrarcantidad->_sprintf
    _ValorDeGenMax->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   26878
                                             76 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                      _ValorDeGenMax
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _apagarsalidas
                    _mostrarcantidad
                      _mostrargenmax
 ---------------------------------------------------------------------------------
 (1) _mostrargenmax                                        1     1      0    7756
                                             74 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _mostrarcantidad                                      1     1      0    7756
                                             74 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _apagarsalidas                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ValorDeGenMax                                        2     2      0    7756
                                             74 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14    10      4    6439
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out2                                             6     4      2    1141
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _ValorDeGenMax
     _Lcd_Cmd
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _apagarsalidas
   _mostrarcantidad
     _Lcd_Cmd
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _mostrargenmax
     _Lcd_Cmd
     _Lcd_Out2
       _Lcd_Chr_CP
       _Lcd_Cmd
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      9      49       8       91.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 25 17:41:16 2021

                             l57 0DDC                               l58 0E02                               l91 0EC0  
                             l59 0E2E                               l85 0CFA                               l88 0F53  
            __Umul8_16@word_mpld 0076                              l102 0B5A                              l111 0BF8  
                            l105 0B37                              l114 0C48                              l131 0329  
                            l123 0274                              l108 0CB1                              l117 0B3D  
                            l125 027F                              l126 02A2                              l127 0296  
                            l320 022D                              l321 023E                              l401 0079  
                            l307 041B                              l411 0079                              l308 042C  
                            l408 0064                              l610 076D                              l700 0D88  
                            l604 07F1                              l702 0DA2                              l710 049C  
                            l711 04B4                              l623 0BA0                              l616 07E5  
                            l705 0476                              l625 0BB0                              l714 0524  
                            l706 047F                              l650 0FFF                              l661 0FCB  
                            l742 0C79                              l670 0BD4                              l662 0FD7  
                            l654 0FB1                              l735 0154                              l728 059A  
                            l648 0F76                              l761 0D49                              l746 0B8D  
                            l772 0004                              l749 0B8D                              l769 0C20  
                            l697 0D66                              l778 0B73                              _abs 0B74  
                            _pad 0D4A                              _tex 00CC                              wreg 0009  
                   ___flmul@aexp 0032                     ___flmul@bexp 0033                     ___flmul@sign 002D  
                   ___flmul@temp 0038                     ___flmul@prod 0034                  ??_mostrargenmax 006A  
                   ___fltol@exp1 0044                             l2000 001A                             l2010 003C  
                           l2002 002D                             ?_abs 0073                             l2100 06BB  
                           l2004 002E                             l2110 070C                             l2102 06C2  
                           l2030 059B                             l2006 0036                             l2120 0741  
                           l2112 0723                             l2104 06D6                             l2040 05AF  
                           l2032 05A1                             l2024 005B                             l2016 0044  
                           l2008 0038                             l2200 0FCF                             l2130 0752  
                           l2122 0742                             l2114 072A                             l2106 06E3  
                           l2050 05CB                             l2042 05B4                             l2034 05A5  
                           l2026 0069                             l2018 0054                             l2210 0FF7  
                           l2202 0FD9                             l2140 0777                             l2132 0756  
                           l2124 0749                             l2116 0736                             l2108 06F7  
                           l2060 05DE                             l2052 05CF                             l2044 05BC  
                           l2036 05A9                             l2028 006E                             l2204 0FED  
                           l2300 02FB                             l2150 07AC                             l2142 077F  
                           l2134 076A                             l2118 073D                             l2126 074D  
                           l2070 05FA                             l2062 05E6                             l2054 05D3  
                           l2046 05BE                             l2038 05AA                             l2206 0FF2  
                           l2310 0311                             l2302 02FE                             l1600 0337  
                           l2160 07DC                             l2152 07B6                             l2144 0783  
                           l2128 0751                             l2080 0637                             l2064 05E8  
                           l2056 05D4                             l2048 05C6                             l2208 0FF6  
                           l2320 0326                             l2312 0313                             l2240 023F  
                           l1610 038F                             l1602 0358                             l2162 07E0  
                           l2154 07C4                             l2146 079B                             l2138 0772  
                           l2090 067F                             l2082 0644                             l2074 0603  
                           l2066 05F0                             l2058 05D9                             l2170 0F55  
                           l2306 0301                             l2250 0253                             l2242 0242  
                           l1620 03AF                             l1612 039C                             l1604 0362  
                           l1700 048E                             l2164 07E1                             l2156 07CD  
                           l2148 079F                             l2092 068C                             l2084 065E  
                           l2076 0610                             l2068 05F5                             l2172 0F5A  
                           l2308 030E                             l2316 0315                             l2260 026D  
                           l2252 0256                             l2244 0245                             l1622 03B7  
                           l1614 039F                             l1630 03F8                             l1606 0381  
                           l1710 04B9                             l1702 0494                             l2166 07E9  
                           l2158 07CF                             l2094 0693                             l2086 066B  
                           l2078 061D                             l2190 0FA2                             l2182 0F87  
                           l2174 0F5E                             l2318 0323                             l2262 0270  
                           l2254 025A                             l2246 0248                             l1800 0E79  
                           l2344 0CD4                             l1632 03FD                             l1624 03D9  
                           l1616 03A7                             l1608 0385                             l1640 0181  
                           l1720 04F7                             l1712 04BC                             l1704 04A4  
                           l2096 06A0                             l2088 0678                             l2192 0FAA  
                           l2184 0F8C                             l2176 0F6E                             l2280 029A  
                           l2272 0283                             l2264 0278                             l2256 025F  
                           l2248 024C                             l1810 0EA7                             l1802 0E7A  
                           l1626 03E9                             l1618 03AB                             l1650 01C2  
                           l1642 018B                             l1634 0155                             l1570 0D14  
                           l1562 0CFB                             l1722 0532                             l1730 055F  
                           l1714 04C1                             l1706 04AA                             l2098 06A7  
                           l2194 0FB8                             l2186 0F97                             l2178 0F7E  
                           l2290 02D5                             l2274 028A                             l2258 0265  
                           l1820 0EB9                             l1812 0EB0                             l1804 0E7C  
                           l1628 03EA                             l1652 01C6                             l1660 020A  
                           l1644 01AA                             l1636 0156                             l1572 0D31  
                           l1564 0D00                             l1580 0BFE                             l1740 057B  
                           l1732 0566                             l1724 053F                             l1716 04EF  
                           l1708 04AF                             l1900 0BCC                             l2196 0FC1  
                           l2188 0F9E                             l2292 02DF                             l2276 0292  
                           l1814 0EB4                             l1806 0E8C                             l1830 0F0B  
                           l1822 0EC2                             l1662 020F                             l1654 01CA  
                           l1646 01B7                             l1638 0160                             l1574 0D41  
                           l1566 0D05                             l1582 0C0C                             l1590 0B65  
                           l1670 0D5F                             l1742 057F                             l1734 056B  
                           l1726 054C                             l1718 04F3                             l1750 008D  
                           l1910 0B9C                             l2198 0FC5                             l2294 02E2  
                           l1816 0EB6                             l1808 0E9D                             l1920 0DB0  
                           l1840 0F39                             l1832 0F0C                             l1824 0EC5  
                           l1656 01EC                             l1648 01BA                             l1568 0D0A  
                           l1584 0C11                             l1592 0B6D                             l1680 0D8D  
                           l1672 0D64                             l1664 0D4C                             l1736 0570  
                           l1744 0587                             l1728 055A                             l1760 00C1  
                           l1752 0095                             l1912 0BA7                             l1904 0B8F  
                           l2296 02E4                             l2288 02A2                             l1818 0EB7  
                           l1930 0DFC                             l1922 0DDA                             l1850 0F4B  
                           l1842 0F42                             l1834 0F0E                             l1826 0F05  
                           l1658 01FC                             l1578 0BFB                             l1586 0B5C  
                           l1682 0D96                             l1674 0D69                             l1666 0D51  
                           l1738 0576                             l1690 042F                             l1770 010D  
                           l1762 00C9                             l1754 009A                             l1914 0BAC  
                           l1906 0B91                             l2298 02ED                             l1940 0E2A  
                           l1932 0E17                             l1852 0F4C                             l1844 0F46  
                           l1836 0F1E                             l1828 0F09                             l1596 032C  
                           l1588 0B61                             l1676 0D75                             l1668 0D5A  
                           l1692 043F                             l1780 012E                             l1772 0115  
                           l1764 00E2                             l1756 009E                             l1748 007C  
                           l1860 0C67                             l1908 0B98                             l1942 0E2A  
                           l1934 0E1E                             l1926 0DF1                             l1918 0DA3  
                           l1950 0B4E                             l1846 0F48                             l1838 0F2F  
                           l1870 0CBA                             l1598 032D                             l1686 0B74  
                           l1678 0D7A                             l1694 0452                             l1774 0120  
                           l1758 00B0                             l1862 0C71                             l1854 0C4B  
                           l1792 0E30                             l1936 0E22                             l1928 0DF8  
                           l1960 0B58                             l1952 0B4F                             l1944 0B44  
                           l1848 0F49                             l1872 0CC0                             l1880 0CE2  
                           l1688 0B81                             l1696 0458                             l1768 00FC  
                           l1784 0131                             l1856 0C4F                             l1794 0E33  
                           l1938 0E26                             l1962 0B33                             l1954 0B52  
                           l1946 0B4A                             l1882 0CE7                             l1874 0CC6  
                           l1866 0CB3                             l1698 047B                             l1786 014A  
                           l1778 0126                             l1858 0C53                             l1970 0C91  
                           l1796 0E73                             l1956 0B54                             l1948 0B4C  
                           l1884 0CEE                             l1868 0CB4                             l1892 0BB3  
                           l1972 0C9A                             l1964 0C7A                             l1980 0BE6  
                           l1798 0E77                             l1958 0B56                             l1886 0CF2  
                           l1878 0CCC                             l1894 0BBB                             l1974 0CA4  
                           l1966 0C7E                             l1990 0C40                             l1982 0BF0  
                           ?_pad 0024                             l1896 0BBD                             l1968 0C87  
                           l1992 0B38                             l1984 0C21                             l1976 0BD5  
                           l1898 0BBF                             l1994 0005                             l1986 0C25  
                           l1978 0BD9                             l1996 0011                             l1988 0C36  
                           STR_1 0829                             STR_2 0800                             STR_3 0810  
                           STR_4 081E                             u2000 0011                             u2001 0010  
                           u2010 0027                             u1300 0D00                             u2100 05A9  
                           u2020 003C                             u1301 0CFF                             u2101 05A8  
                           u2021 003B                             u1310 0D05                             u2110 05AF  
                           u2030 0043                             u1311 0D04                             u2111 05AE  
                           u2031 0042                             u2015 0023                             u1400 038C  
                           u1320 0D14                             u2200 0702                             u2120 05B4  
                           u1321 0D13                             u2121 05B3                             u1410 039C  
                           u1330 0D31                             u2210 0719                             u2130 05D3  
                           u2050 0053                             u1411 039B                             u1331 0D30  
                           u2131 05D2                             u2051 0052                             u1420 03AF  
                           u1340 0C20                             u2300 0777                             u2140 05D9  
                           u2060 005A                             u1421 03AE                             u1341 0C1F  
                           u2301 0776                             u2205 06FE                             u2141 05D8  
                           u2061 0059                             u2045 0045                             _LATA 0018  
                           u1430 03D9                             u1510 01B7                             u1350 0B6D  
                           u2310 0783                             u2150 05DE                             _LATB 0019  
                           u1431 03D8                             u1511 01B6                             u1335 0D2D  
                           u1351 0B6C                             u2311 0782                             u2215 0715  
                           u2151 05DD                             _LATC 001A                             u1440 03F8  
                           u1360 0337                             u1520 01CA                             u1600 0D8D  
                           u2320 0791                             u2240 0741                             u2160 05F5  
                           u2080 0069                             u2400 0F9D                             u1441 03F7  
                           u1361 0336                             u1521 01C9                             u1601 0D8C  
                           u2241 0740                             u2225 0724                             u2161 05F4  
                           u2081 0068                             u2401 0F9C                             u1450 03FD  
                           u1530 01EC                             u1610 0B81                             u2330 07AC  
                           u2170 05FA                             u2090 006E                             u1451 03FC  
                           u1435 03D5                             u1531 01EB                             u1611 0B80  
                           u2331 07AB                             u2235 0737                             u2171 05F9  
                           u2091 006D                             u2075 005C                             u1380 0362  
                           u1540 020A                             u1700 0532                             u1620 044A  
                           u2340 07C4                             u2260 0751                             u2420 0FB7  
                           u1381 0361                             u1541 0209                             u1701 0531  
                           u1621 0448                             u2341 07C3                             u2325 078D  
                           u2261 0750                             u2421 0FB6                             u1550 020F  
                           u1470 0160                             u1710 053F                             u1630 044B  
                           u2350 07E0                             u2270 0756                             u2510 025F  
                           u1551 020E                             u1535 01E8                             u1471 015F  
                           u1615 0B7D                             u1711 053E                             u2351 07DF  
                           u2335 07A8                             u2271 0755                             u2255 0743  
                           u2415 0FAB                             u2511 025E                             u1720 054C  
                           u1640 0458                             u1800 00C1                             u2280 076A  
                           u2440 0FC5                             u2360 0F5A                             u2520 0278  
                           u1721 054B                             u1705 052E                             u1641 0457  
                           u1801 00C0                             u2345 07C0                             u2281 0769  
                           u2185 0679                             u2441 0FC4                             u2361 0F59  
                           u2521 0277                             u1490 018B                             u1570 0D51  
                           u1730 055A                             u1810 010D                             u2290 0771  
                           u2450 0FCB                             u2370 0F5E                             u2530 0283  
                           u1491 018A                             u1571 0D50                             u1731 0559  
                           u1811 010C                             u2291 0770                             u2195 06A8  
                           u2451 0FCA                             u2435 0FBB                             u2371 0F5D  
                           u2531 0282                             u1580 0D5F                             u1740 055F  
                           u1660 047B                             u2460 0FCF                             u2380 0F7E  
                           u2540 029A                             u1581 0D5E                             u1741 055E  
                           u1725 0548                             u1661 047A                             u2461 0FCE  
                           u2381 0F7D                             u2541 0299                             u1590 0D88  
                           u1750 0566                             u1670 048E                             u2470 0FE3  
                           u2550 02DF                             u1591 0D87                             u1751 0565  
                           u1735 0556                             u1671 048D                             u2551 02DE  
                           u2607 028E                             u1760 056B                             u1680 04AA  
                           u2480 0FF2                             u2560 02FB                             u1825 0E36  
                           u1905 0EE9                             u1761 056A                             u1681 04A9  
                           u2481 0FF1                             u2561 02FA                             u2617 02E8  
                           u1770 0576                             u1690 04AF                             u2490 0FF6  
                           u2570 030E                             u1835 0E46                             u2707 0DBF  
                           u1915 0EF9                             u1595 0D84                             u1771 0575  
                           u1691 04AE                             u1675 048A                             u2491 0FF5  
                           u2475 0FDF                             u2395 0F91                             u2627 0BF4  
                           u2571 030D                             u2555 02DB                             u1780 008D  
                           u1940 0C71                             u2580 0323                             u1845 0E57  
                           u2717 0DC6                             u1925 0F11                             u1781 008C  
                           u1941 0C70                             u2637 0C44                             u2581 0322  
                           u2565 02F7                             u1950 0CFA                             u1790 00B0  
                           u1855 0E67                             u2727 0DCD                             u1935 0F21  
                           u1951 0CF9                             u1791 00AF                             u2647 0CAA  
                           u2575 030A                             u1960 0B9C                             u1865 0E7F  
                           u2737 0DD4                             u2657 0F06                             u1961 0B9B  
                           u2585 031F                             u1875 0E8F                             u2747 0DF2  
                           u2667 0F43                             u1980 0BAC                             u2757 0E18  
                           u2677 0F4D                             u1885 0EC8                             u1981 0BAB  
                           u2597 0269                             u1990 0E02                             u2767 0E74  
                           u1991 0E01                             u2687 0DB1                             u1895 0ED8  
                           u1975 0BA1                             u2777 0EB1                             u2697 0DB8  
                           u2787 0EBA                             abs@a 0073                             _dbuf 00AC  
                           _main 023F                             _dtoa 042D                             _prec 00A4  
                           _nout 00A0                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             start 0002  
                __end_of_Lcd_Cmd 0EC1                       _Lcd_Chr_CP 0EC1                            ??_abs 0075  
                          ??_pad 007C                   Lcd_Out2@buffer 0074   __size_of_OSCILLATOR_Initialize 0005  
  __end_of_OSCILLATOR_Initialize 0B38                    ___fltol@sign1 0043                  __end_of___aodiv 042D  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 023F  
                __end_of___flmul 07F2                  __end_of___fltol 007A                            _OSCEN 0891  
                   vfpfcnvrt@fmt 004E            __end_of_ValorDeGenMax 0CB2                            _TRISA 0012  
                          _TRISB 0013                            _TRISC 0014                            _flags 00A6  
                          _fputc 0CFB                            _mitad 00A8                            _fputs 0BF9  
                          pad@fp 002B                            _width 00A2                            _putch 0004  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003E                            dtoa@s 0042                            dtoa@w 0040  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0BD5  
               __end_of_Lcd_Init 0E2F                 __end_of_Lcd_Out2 0CFB                  __initialization 07F2  
                   __end_of_main 032C                     __end_of_dtoa 059B                ??_mostrarcantidad 006A  
          __end_of_apagarsalidas 0B3E                           ??_main 006C                           ??_dtoa 0038  
                         ?_fputc 0070                           ?_fputs 0078                           _ANSELA 1F38  
                         ?_putch 0070                           _ANSELC 1F4E                           _ODCONA 1F3A  
                         _ODCONC 1F50                           _INLVLA 1F3C                           _INLVLC 1F52  
                         _OSCFRQ 0893                        ??_Lcd_Cmd 0070                           u150lld 01AA  
                         u137lld 0356                           u146lld 041B                           u139lld 0381  
                         u156lld 022D                           u148lld 017F                           u165lld 0476  
               __end_of___xxtofl 1000                     vfprintf@cfmt 0064                      ?_Lcd_Chr_CP 0070  
                      ??___aodiv 0070                        ??___aomod 0070                        ??___flmul 0028  
                      ??___fltol 003E                           pad@buf 0024                           dtoa@fp 003D  
                         _strlen 0B5B                           fputc@c 0070                           fputs@c 0020  
                         fputs@i 0021                           fputs@s 0023               __size_of__Umul8_16 0023  
                         putch@c 0070                 __end_of_vfprintf 0C7A                        ??_sprintf 007D  
                   ___xxtofl@arg 007A                     ___xxtofl@exp 0079                     ___xxtofl@val 0070  
        __end_of__initialization 07FD                       ___fltol@f1 003A                   __pcstackCOMMON 0070  
                  __end_of_fputc 0D4A                    __end_of_fputs 0C21                    __end_of_putch 0005  
                      ?_Lcd_Init 0070                        ?_Lcd_Out2 0073                          ??_fputc 0073  
                        ??_fputs 0079              __size_of_Lcd_Chr_CP 0093                          ??_putch 0070  
                     __pbssBANK0 006D                       __pbssBANK1 00A0                __end_of__Umul8_16 0BB1  
                     __pmaintext 023F                          ?_strlen 0070                        ?___xxtofl 0070  
             __size_of_vfpfcnvrt 00DB                          _OSCTUNE 0892                       ??_Lcd_Init 0073  
                     ??_Lcd_Out2 0075                          _SLRCONA 1F3B                          _SLRCONC 1F51  
          __end_of_mostrargenmax 0BF9                          _Lcd_Cmd 0E2F                  _mostrarcantidad 0C21  
                        ___aodiv 032C                          ___aomod 0155                          ___flmul 059B  
                        ___fltol 0005                        ?_vfprintf 005E                          __ptext1 0BD5  
                        __ptext2 0C21                          __ptext3 0B38                          __ptext4 0F54  
                        __ptext5 0005                          __ptext6 059B                          __ptext7 0B8E  
                        __ptext8 0C7A                          __ptext9 0BB1                  __size_of_strlen 0019  
          _OSCILLATOR_Initialize 0B33                     __size_of_abs 001A                     __size_of_pad 0059  
                     ??___xxtofl 0074                          _per_max 006D         ??_PIN_MANAGER_Initialize 0070  
                        _sprintf 0BB1                          clrloop0 0B3F             end_of_initialization 07FD  
                        fputc@fp 0072                          fputs@fp 0078           __size_of_ValorDeGenMax 0038  
              __end_of_vfpfcnvrt 0155                     ??_Lcd_Chr_CP 0070                        Lcd_Out2@x 0073  
                      Lcd_Out2@y 0077                       ??_vfprintf 0061                          strlen@a 0073  
                        strlen@s 0074                        _PORTBbits 000D                        _PORTCbits 000E  
                  ___xxtofl@sign 0078                        _TRISBbits 0013                        _TRISCbits 0014  
        __end_of_mostrarcantidad 0C49               __end_of_Lcd_Chr_CP 0F54                      ___flmul@grs 002E  
         __size_of_apagarsalidas 0006                      vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D  
                    vfpfcnvrt@ll 0055           ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 0B74  
            start_initialization 07F2                    _ValorDeGenMax 0C7A  __size_of_PIN_MANAGER_Initialize 0017  
                    __end_of_abs 0B8E                      __end_of_pad 0DA3                __size_of_Lcd_Init 008C  
              __size_of_Lcd_Out2 0049                      vfprintf@fmt 005E                        __Umul8_16 0B8E  
                  _apagarsalidas 0B38                         ??_strlen 0072                   ?_ValorDeGenMax 0070  
                      ___flmul@a 0024                        ___flmul@b 0020                        ___latbits 0001  
                  __pcstackBANK0 0020                    __pcstackBANK1 00E0                 ___aodiv@dividend 0028  
              __size_of___xxtofl 00AC                 ?_mostrarcantidad 0070                         ?_Lcd_Cmd 0070  
         _PIN_MANAGER_Initialize 0B44                         ?___aodiv 0020                         ?___aomod 0020  
               ___aodiv@quotient 0073                         ?___flmul 0020                         ?___fltol 003A  
                     ?__Umul8_16 0070                   ?_apagarsalidas 0070                __size_of_vfprintf 0031  
                       ?_sprintf 0066                   __size_of_fputc 004F                   __size_of_fputs 0028  
                 __size_of_putch 0001                         _LATAbits 0018                         _LATBbits 0019  
                      clear_ram0 0B3E                        _vfpfcnvrt 007A           __size_of_mostrargenmax 0024  
                   Lcd_Init@data 0074                  ??_ValorDeGenMax 006A                     Lcd_Out2@data 0078  
                       _Lcd_Init 0DA3                         _Lcd_Out2 0CB2                 __size_of_Lcd_Cmd 0092  
                     vfprintf@ap 0060                       vfprintf@fp 0063                  ??_apagarsalidas 0070  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072                 __size_of___aodiv 0101  
               __size_of___aomod 00EA                 __size_of___flmul 0257                 __size_of___fltol 0075  
                     ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020                  ___aodiv@counter 0071  
                     sprintf@fmt 0066                         ___xxtofl 0F54                         _cantidad 00AA  
                 Lcd_Chr_CP@data 0072                         _dtoa$630 003B                         __ptext10 0C49  
                       __ptext11 007A                         __ptext20 032C                         __ptext12 042D  
                       __ptext21 0CB2                         __ptext13 0D4A                         __ptext22 0EC1  
                       __ptext14 0B5B                         __ptext23 0B44                         __ptext15 0BF9  
                       __ptext24 0B33                         __ptext16 0CFB                         __ptext25 0DA3  
                       __ptext17 0004                         __ptext26 0E2F                         __ptext18 0B74  
                       __ptext19 0155                 __size_of_sprintf 0024                    _mostrargenmax 0BD5  
                    Lcd_Cmd@data 0072                    __size_of_main 00ED                    __size_of_dtoa 016E  
                       _vfprintf 0C49                 ___aomod@dividend 0028                   ?_mostrargenmax 0070  
                      sprintf@ap 00E2          ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                    __pstringtext1 0800  
                  __pstringtext2 0810                    __pstringtext3 081E                    __pstringtext4 0829  
                  __pstringtext5 0000           __Umul8_16@multiplicand 0070                         sprintf@f 00E4  
                       sprintf@s 00E3                     ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0B5B  
           __Umul8_16@multiplier 0078         __size_of_mostrarcantidad 0028                     ___aomod@sign 0072  
              __Umul8_16@product 0074  
