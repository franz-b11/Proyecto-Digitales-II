

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon May 24 11:29:23 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 30/04/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F15244 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  0119                     	;# 
   100  011A                     	;# 
   101  011B                     	;# 
   102  011B                     	;# 
   103  011C                     	;# 
   104  011D                     	;# 
   105  011E                     	;# 
   106  011F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  018E                     	;# 
   110  018F                     	;# 
   111  0190                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  020C                     	;# 
   115  020D                     	;# 
   116  020E                     	;# 
   117  020E                     	;# 
   118  020F                     	;# 
   119  020F                     	;# 
   120  0210                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  028C                     	;# 
   125  028C                     	;# 
   126  028D                     	;# 
   127  028D                     	;# 
   128  028E                     	;# 
   129  028F                     	;# 
   130  0290                     	;# 
   131  0291                     	;# 
   132  030C                     	;# 
   133  030C                     	;# 
   134  030D                     	;# 
   135  030E                     	;# 
   136  030F                     	;# 
   137  0310                     	;# 
   138  0310                     	;# 
   139  0311                     	;# 
   140  0312                     	;# 
   141  0313                     	;# 
   142  0314                     	;# 
   143  0314                     	;# 
   144  0315                     	;# 
   145  0316                     	;# 
   146  0318                     	;# 
   147  0318                     	;# 
   148  0319                     	;# 
   149  031A                     	;# 
   150  059C                     	;# 
   151  059C                     	;# 
   152  059D                     	;# 
   153  059D                     	;# 
   154  059E                     	;# 
   155  059F                     	;# 
   156  070C                     	;# 
   157  070D                     	;# 
   158  070E                     	;# 
   159  0716                     	;# 
   160  0717                     	;# 
   161  0718                     	;# 
   162  080C                     	;# 
   163  0811                     	;# 
   164  0813                     	;# 
   165  0814                     	;# 
   166  081A                     	;# 
   167  081A                     	;# 
   168  081B                     	;# 
   169  081C                     	;# 
   170  081C                     	;# 
   171  081D                     	;# 
   172  081E                     	;# 
   173  081F                     	;# 
   174  088E                     	;# 
   175  0890                     	;# 
   176  0891                     	;# 
   177  0892                     	;# 
   178  0893                     	;# 
   179  090C                     	;# 
   180  1E8F                     	;# 
   181  1E90                     	;# 
   182  1E91                     	;# 
   183  1E92                     	;# 
   184  1E93                     	;# 
   185  1E9C                     	;# 
   186  1EA1                     	;# 
   187  1EA2                     	;# 
   188  1EC3                     	;# 
   189  1EC5                     	;# 
   190  1EC6                     	;# 
   191  1EC7                     	;# 
   192  1ECB                     	;# 
   193  1ECB                     	;# 
   194  1ECB                     	;# 
   195  1ECC                     	;# 
   196  1ECC                     	;# 
   197  1ECC                     	;# 
   198  1F10                     	;# 
   199  1F11                     	;# 
   200  1F12                     	;# 
   201  1F14                     	;# 
   202  1F15                     	;# 
   203  1F1C                     	;# 
   204  1F1D                     	;# 
   205  1F1E                     	;# 
   206  1F1F                     	;# 
   207  1F20                     	;# 
   208  1F21                     	;# 
   209  1F22                     	;# 
   210  1F23                     	;# 
   211  1F24                     	;# 
   212  1F25                     	;# 
   213  1F26                     	;# 
   214  1F27                     	;# 
   215  1F38                     	;# 
   216  1F39                     	;# 
   217  1F3A                     	;# 
   218  1F3B                     	;# 
   219  1F3C                     	;# 
   220  1F3D                     	;# 
   221  1F3E                     	;# 
   222  1F3F                     	;# 
   223  1F43                     	;# 
   224  1F44                     	;# 
   225  1F45                     	;# 
   226  1F46                     	;# 
   227  1F47                     	;# 
   228  1F48                     	;# 
   229  1F49                     	;# 
   230  1F4A                     	;# 
   231  1F4E                     	;# 
   232  1F4F                     	;# 
   233  1F50                     	;# 
   234  1F51                     	;# 
   235  1F52                     	;# 
   236  1F53                     	;# 
   237  1F54                     	;# 
   238  1F55                     	;# 
   239  1FE4                     	;# 
   240  1FE5                     	;# 
   241  1FE6                     	;# 
   242  1FE7                     	;# 
   243  1FE8                     	;# 
   244  1FE8                     	;# 
   245  1FE9                     	;# 
   246  1FEA                     	;# 
   247  1FEB                     	;# 
   248  1FED                     	;# 
   249  1FEE                     	;# 
   250  1FEF                     	;# 
   251  000C                     _PORTAbits	set	12
   252  0018                     _LATAbits	set	24
   253  0014                     _TRISC	set	20
   254  0013                     _TRISB	set	19
   255  0012                     _TRISA	set	18
   256  001A                     _LATC	set	26
   257  0019                     _LATB	set	25
   258  0018                     _LATA	set	24
   259  000D                     _PORTBbits	set	13
   260  000E                     _PORTCbits	set	14
   261  0013                     _TRISBbits	set	19
   262  0014                     _TRISCbits	set	20
   263  009D                     _TRISB5	set	157
   264  009F                     _TRISB7	set	159
   265  00A3                     _TRISC3	set	163
   266  0092                     _TRISA2	set	146
   267  0095                     _TRISA5	set	149
   268  0094                     _TRISA4	set	148
   269  0090                     _TRISA0	set	144
   270  0093                     _TRISA3	set	147
   271  1F52                     _INLVLC	set	8018
   272  1F47                     _INLVLB	set	8007
   273  1F3C                     _INLVLA	set	7996
   274  1F51                     _SLRCONC	set	8017
   275  1F46                     _SLRCONB	set	8006
   276  1F3B                     _SLRCONA	set	7995
   277  1F50                     _ODCONC	set	8016
   278  1F45                     _ODCONB	set	8005
   279  1F3A                     _ODCONA	set	7994
   280  1F4F                     _WPUC	set	8015
   281  1F38                     _ANSELA	set	7992
   282  1F43                     _ANSELB	set	8003
   283  1F4E                     _ANSELC	set	8014
   284                           
   285                           	psect	stringtext1
   286  0800                     __pstringtext1:
   287  0800                     STR_3:
   288  0800  3450               	retlw	80	;'P'
   289  0801  3465               	retlw	101	;'e'
   290  0802  3472               	retlw	114	;'r'
   291  0803  3473               	retlw	115	;'s'
   292  0804  346F               	retlw	111	;'o'
   293  0805  346E               	retlw	110	;'n'
   294  0806  3461               	retlw	97	;'a'
   295  0807  3473               	retlw	115	;'s'
   296  0808  3464               	retlw	100	;'d'
   297  0809  3465               	retlw	101	;'e'
   298  080A  346E               	retlw	110	;'n'
   299  080B  3474               	retlw	116	;'t'
   300  080C  3472               	retlw	114	;'r'
   301  080D  346F               	retlw	111	;'o'
   302  080E  343A               	retlw	58	;':'
   303  080F  3420               	retlw	32	;' '
   304  0810  3425               	retlw	37	;'%'
   305  0811  3464               	retlw	100	;'d'
   306  0812  3400               	retlw	0
   307                           
   308                           	psect	stringtext2
   309  0813                     __pstringtext2:
   310  0813                     STR_1:
   311  0813  3450               	retlw	80	;'P'
   312  0814  3465               	retlw	101	;'e'
   313  0815  3472               	retlw	114	;'r'
   314  0816  3473               	retlw	115	;'s'
   315  0817  346F               	retlw	111	;'o'
   316  0818  346E               	retlw	110	;'n'
   317  0819  3461               	retlw	97	;'a'
   318  081A  3473               	retlw	115	;'s'
   319  081B  346D               	retlw	109	;'m'
   320  081C  3461               	retlw	97	;'a'
   321  081D  3478               	retlw	120	;'x'
   322  081E  343A               	retlw	58	;':'
   323  081F  3420               	retlw	32	;' '
   324  0820  3425               	retlw	37	;'%'
   325  0821  3464               	retlw	100	;'d'
   326  0822  3400               	retlw	0
   327                           
   328                           	psect	stringtext3
   329  0000                     __pstringtext3:
   330  0800                     
   331                           	psect	cinit
   332  07F0                     start_initialization:	
   333                           ; #config settings
   334                           
   335  07F0                     __initialization:
   336                           
   337                           ; Clear objects allocated to BANK0
   338  07F0  0140               	movlb	0	; select bank0
   339  07F1  01EC               	clrf	__pbssBANK0& (0+127)
   340  07F2  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   341  07F3  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   342  07F4  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   343                           
   344                           ; Clear objects allocated to BANK1
   345  07F5  30A0               	movlw	low __pbssBANK1
   346  07F6  0084               	movwf	4
   347  07F7  3000               	movlw	high __pbssBANK1
   348  07F8  0085               	movwf	5
   349  07F9  303E               	movlw	62
   350  07FA  318F  274A  3187   	fcall	clear_ram0
   351  07FD                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354  07FD                     __end_of__initialization:
   355  07FD  0140               	movlb	0
   356  07FE  3184  2C96         	ljmp	_main	;jump to C main() function
   357                           
   358                           	psect	bssBANK0
   359  006C                     __pbssBANK0:
   360  006C                     _flags:
   361  006C                     	ds	2
   362  006E                     _persomax:
   363  006E                     	ds	2
   364                           
   365                           	psect	bssBANK1
   366  00A0                     __pbssBANK1:
   367  00A0                     _nout:
   368  00A0                     	ds	2
   369  00A2                     _width:
   370  00A2                     	ds	2
   371  00A4                     _prec:
   372  00A4                     	ds	2
   373  00A6                     _contadoperso:
   374  00A6                     	ds	2
   375  00A8                     _mitad:
   376  00A8                     	ds	2
   377  00AA                     _dbuf:
   378  00AA                     	ds	32
   379  00CA                     _carac:
   380  00CA                     	ds	20
   381                           
   382                           	psect	clrtext
   383  0F4A                     clear_ram0:	
   384                           ;	Called with FSR0 containing the base address, and
   385                           ;	WREG with the size to clear
   386                           
   387  0F4A  0064               	clrwdt	;clear the watchdog before getting into this loop
   388  0F4B                     clrloop0:
   389  0F4B  0180               	clrf	0	;clear RAM location pointed to by FSR
   390  0F4C  3101               	addfsr 0,1
   391  0F4D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   392  0F4E  2F4B               	goto	clrloop0	;have we reached the end yet?
   393  0F4F  3400               	retlw	0	;all done for this memory range, return
   394                           
   395                           	psect	cstackBANK1
   396  00DE                     __pcstackBANK1:
   397  00DE                     	ds	2
   398  00E0                     sprintf@ap:
   399                           
   400                           ; 1 bytes @ 0x2
   401  00E0                     	ds	1
   402  00E1                     sprintf@s:
   403                           
   404                           ; 1 bytes @ 0x3
   405  00E1                     	ds	1
   406  00E2                     sprintf@f:
   407                           
   408                           ; 5 bytes @ 0x4
   409  00E2                     	ds	5
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:
   413  0070                     ?_Lcd_Cmd:
   414  0070                     ??_Lcd_Cmd:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_Lcd_Chr_CP:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_Lcd_Chr_CP:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_putch:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_putch:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_Lcd_Init:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_PIN_MANAGER_Initialize:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_PIN_MANAGER_Initialize:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??___aodiv:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??___aomod:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_fputc:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_strlen:	
   451                           ; 2 bytes @ 0x0
   452                           
   453  0070                     putch@c:	
   454                           ; 2 bytes @ 0x0
   455                           
   456  0070                     fputc@c:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 2 bytes @ 0x0
   461  0070                     	ds	1
   462  0071                     ___aodiv@counter:
   463  0071                     ___aomod@counter:	
   464                           ; 1 bytes @ 0x1
   465                           
   466                           
   467                           ; 1 bytes @ 0x1
   468  0071                     	ds	1
   469  0072                     ??_strlen:
   470  0072                     Lcd_Chr_CP@data:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0072                     Lcd_Cmd@data:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0072                     ___aodiv@sign:	
   477                           ; 1 bytes @ 0x2
   478                           
   479  0072                     ___aomod@sign:	
   480                           ; 1 bytes @ 0x2
   481                           
   482  0072                     fputc@fp:	
   483                           ; 1 bytes @ 0x2
   484                           
   485                           
   486                           ; 1 bytes @ 0x2
   487  0072                     	ds	1
   488  0073                     ??_fputc:
   489  0073                     ??_Lcd_Init:	
   490                           ; 1 bytes @ 0x3
   491                           
   492  0073                     ?_Lcd_Out2:	
   493                           ; 1 bytes @ 0x3
   494                           
   495  0073                     ?_abs:	
   496                           ; 1 bytes @ 0x3
   497                           
   498  0073                     Lcd_Out2@x:	
   499                           ; 2 bytes @ 0x3
   500                           
   501  0073                     strlen@a:	
   502                           ; 1 bytes @ 0x3
   503                           
   504  0073                     abs@a:	
   505                           ; 1 bytes @ 0x3
   506                           
   507  0073                     ___aodiv@quotient:	
   508                           ; 2 bytes @ 0x3
   509                           
   510                           
   511                           ; 8 bytes @ 0x3
   512  0073                     	ds	1
   513  0074                     Lcd_Init@data:
   514  0074                     Lcd_Out2@buffer:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     strlen@s:	
   518                           ; 1 bytes @ 0x4
   519                           
   520                           
   521                           ; 1 bytes @ 0x4
   522  0074                     	ds	1
   523  0075                     ??_abs:
   524  0075                     ??_Lcd_Out2:	
   525                           ; 1 bytes @ 0x5
   526                           
   527                           
   528                           ; 1 bytes @ 0x5
   529  0075                     	ds	2
   530  0077                     Lcd_Out2@y:
   531                           
   532                           ; 1 bytes @ 0x7
   533  0077                     	ds	1
   534  0078                     ?_fputs:
   535  0078                     Lcd_Out2@data:	
   536                           ; 2 bytes @ 0x8
   537                           
   538  0078                     fputs@fp:	
   539                           ; 1 bytes @ 0x8
   540                           
   541                           
   542                           ; 1 bytes @ 0x8
   543  0078                     	ds	1
   544  0079                     ??_fputs:
   545                           
   546                           ; 1 bytes @ 0x9
   547  0079                     	ds	3
   548  007C                     ??_pad:
   549                           
   550                           ; 1 bytes @ 0xC
   551  007C                     	ds	1
   552  007D                     ??_sprintf:
   553                           
   554                           ; 1 bytes @ 0xD
   555  007D                     	ds	1
   556                           
   557                           	psect	cstackBANK0
   558  0020                     __pcstackBANK0:
   559  0020                     ?___aodiv:
   560  0020                     ?___aomod:	
   561                           ; 8 bytes @ 0x0
   562                           
   563  0020                     fputs@c:	
   564                           ; 8 bytes @ 0x0
   565                           
   566  0020                     ___aodiv@divisor:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0020                     ___aomod@divisor:	
   570                           ; 8 bytes @ 0x0
   571                           
   572                           
   573                           ; 8 bytes @ 0x0
   574  0020                     	ds	1
   575  0021                     fputs@i:
   576                           
   577                           ; 2 bytes @ 0x1
   578  0021                     	ds	2
   579  0023                     fputs@s:
   580                           
   581                           ; 1 bytes @ 0x3
   582  0023                     	ds	1
   583  0024                     ?_pad:
   584  0024                     pad@buf:	
   585                           ; 2 bytes @ 0x4
   586                           
   587                           
   588                           ; 1 bytes @ 0x4
   589  0024                     	ds	1
   590  0025                     pad@p:
   591                           
   592                           ; 2 bytes @ 0x5
   593  0025                     	ds	2
   594  0027                     pad@i:
   595                           
   596                           ; 2 bytes @ 0x7
   597  0027                     	ds	1
   598  0028                     ___aodiv@dividend:
   599  0028                     ___aomod@dividend:	
   600                           ; 8 bytes @ 0x8
   601                           
   602                           
   603                           ; 8 bytes @ 0x8
   604  0028                     	ds	1
   605  0029                     pad@w:
   606                           
   607                           ; 2 bytes @ 0x9
   608  0029                     	ds	2
   609  002B                     pad@fp:
   610                           
   611                           ; 1 bytes @ 0xB
   612  002B                     	ds	5
   613  0030                     ?_dtoa:
   614  0030                     dtoa@d:	
   615                           ; 2 bytes @ 0x10
   616                           
   617                           
   618                           ; 8 bytes @ 0x10
   619  0030                     	ds	8
   620  0038                     ??_dtoa:
   621                           
   622                           ; 1 bytes @ 0x18
   623  0038                     	ds	3
   624  003B                     _dtoa$633:
   625                           
   626                           ; 2 bytes @ 0x1B
   627  003B                     	ds	2
   628  003D                     dtoa@fp:
   629                           
   630                           ; 1 bytes @ 0x1D
   631  003D                     	ds	1
   632  003E                     dtoa@p:
   633                           
   634                           ; 2 bytes @ 0x1E
   635  003E                     	ds	2
   636  0040                     dtoa@w:
   637                           
   638                           ; 2 bytes @ 0x20
   639  0040                     	ds	2
   640  0042                     dtoa@s:
   641                           
   642                           ; 2 bytes @ 0x22
   643  0042                     	ds	2
   644  0044                     dtoa@n:
   645                           
   646                           ; 8 bytes @ 0x24
   647  0044                     	ds	8
   648  004C                     dtoa@i:
   649                           
   650                           ; 2 bytes @ 0x2C
   651  004C                     	ds	2
   652  004E                     ?_vfpfcnvrt:
   653  004E                     vfpfcnvrt@fmt:	
   654                           ; 2 bytes @ 0x2E
   655                           
   656                           
   657                           ; 1 bytes @ 0x2E
   658  004E                     	ds	1
   659  004F                     vfpfcnvrt@ap:
   660                           
   661                           ; 1 bytes @ 0x2F
   662  004F                     	ds	1
   663  0050                     ??_vfpfcnvrt:
   664                           
   665                           ; 1 bytes @ 0x30
   666  0050                     	ds	5
   667  0055                     vfpfcnvrt@ll:
   668                           
   669                           ; 8 bytes @ 0x35
   670  0055                     	ds	8
   671  005D                     vfpfcnvrt@fp:
   672                           
   673                           ; 1 bytes @ 0x3D
   674  005D                     	ds	1
   675  005E                     ?_vfprintf:
   676  005E                     vfprintf@fmt:	
   677                           ; 2 bytes @ 0x3E
   678                           
   679                           
   680                           ; 2 bytes @ 0x3E
   681  005E                     	ds	2
   682  0060                     vfprintf@ap:
   683                           
   684                           ; 1 bytes @ 0x40
   685  0060                     	ds	1
   686  0061                     ??_vfprintf:
   687                           
   688                           ; 1 bytes @ 0x41
   689  0061                     	ds	2
   690  0063                     vfprintf@fp:
   691                           
   692                           ; 1 bytes @ 0x43
   693  0063                     	ds	1
   694  0064                     vfprintf@cfmt:
   695                           
   696                           ; 2 bytes @ 0x44
   697  0064                     	ds	2
   698  0066                     ?_sprintf:
   699  0066                     sprintf@fmt:	
   700                           ; 2 bytes @ 0x46
   701                           
   702                           
   703                           ; 2 bytes @ 0x46
   704  0066                     	ds	4
   705  006A                     ??_main:
   706                           
   707                           ; 1 bytes @ 0x4A
   708  006A                     	ds	2
   709                           
   710                           	psect	maintext
   711  0496                     __pmaintext:	
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 128 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : B3F/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   731 ;;      Params:         0       0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0
   733 ;;      Temps:          0       2       0       0       0       0       0       0
   734 ;;      Totals:         0       2       0       0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels required when called:    8
   737 ;; This function calls:
   738 ;;		_Lcd_Cmd
   739 ;;		_Lcd_Init
   740 ;;		_Lcd_Out2
   741 ;;		_PIN_MANAGER_Initialize
   742 ;;		_sprintf
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _main
   750  0496                     _main:
   751  0496                     l1703:	
   752                           ;incstack = 0
   753                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   754                           
   755                           
   756                           ;main.c: 131:     PIN_MANAGER_Initialize();
   757  0496  3180  2006  3184   	fcall	_PIN_MANAGER_Initialize
   758  0499                     l1705:
   759                           
   760                           ;main.c: 132:     LATAbits.LATA2=1;
   761  0499  0140               	movlb	0	; select bank0
   762  049A  1518               	bsf	24,2	;volatile
   763                           
   764                           ;main.c: 135:     Lcd_Init();
   765  049B  3181  211E  3184   	fcall	_Lcd_Init
   766                           
   767                           ;main.c: 136:     Lcd_Cmd(12);
   768  049E  300C               	movlw	12
   769  049F  3181  21AA  3184   	fcall	_Lcd_Cmd
   770  04A2                     l1707:
   771                           
   772                           ;main.c: 137:     _delay((unsigned long)((1000)*(1000000/4000.0)));
   773  04A2  3002               	movlw	2
   774  04A3  0140               	movlb	0	; select bank0
   775  04A4  00EB               	movwf	??_main+1
   776  04A5  3045               	movlw	69
   777  04A6  00EA               	movwf	??_main
   778  04A7  30A9               	movlw	169
   779  04A8                     u1497:
   780  04A8  0B89               	decfsz	9,f
   781  04A9  2CA8               	goto	u1497
   782  04AA  0BEA               	decfsz	??_main,f
   783  04AB  2CA8               	goto	u1497
   784  04AC  0BEB               	decfsz	??_main+1,f
   785  04AD  2CA8               	goto	u1497
   786  04AE  3200               	nop2
   787  04AF                     l1709:
   788                           
   789                           ;main.c: 139:     {;main.c: 140:     if(PORTBbits.RB5==0){
   790  04AF  0140               	movlb	0	; select bank0
   791  04B0  1A8D               	btfsc	13,5	;volatile
   792  04B1  2CB3               	goto	u1431
   793  04B2  2CB4               	goto	u1430
   794  04B3                     u1431:
   795  04B3  2CBC               	goto	l1713
   796  04B4                     u1430:
   797  04B4                     l1711:
   798                           
   799                           ;main.c: 141:     _delay((unsigned long)((20)*(1000000/4000.0)));
   800  04B4  3007               	movlw	7
   801  04B5  0140               	movlb	0	; select bank0
   802  04B6  00EA               	movwf	??_main
   803  04B7  307D               	movlw	125
   804  04B8                     u1507:
   805  04B8  0B89               	decfsz	9,f
   806  04B9  2CB8               	goto	u1507
   807  04BA  0BEA               	decfsz	??_main,f
   808  04BB  2CB8               	goto	u1507
   809  04BC                     l1713:
   810                           
   811                           ;main.c: 143:     if(PORTBbits.RB5==1)
   812  04BC  0140               	movlb	0	; select bank0
   813  04BD  1E8D               	btfss	13,5	;volatile
   814  04BE  2CC0               	goto	u1441
   815  04BF  2CC1               	goto	u1440
   816  04C0                     u1441:
   817  04C0  2CE8               	goto	l1723
   818  04C1                     u1440:
   819  04C1                     l1715:
   820                           
   821                           ;main.c: 144:     {;main.c: 145:         persomax=persomax+2;
   822  04C1  086E               	movf	_persomax,w
   823  04C2  3E02               	addlw	2
   824  04C3  00EE               	movwf	_persomax
   825  04C4  3000               	movlw	0
   826  04C5  3D6F               	addwfc	_persomax+1,w
   827  04C6  00EF               	movwf	_persomax+1
   828  04C7                     l1717:
   829                           
   830                           ;main.c: 147:          sprintf(carac, "Personasmax: %d",persomax);
   831  04C7  3013               	movlw	low (STR_1| (0+32768))
   832  04C8  00E6               	movwf	sprintf@fmt
   833  04C9  3088               	movlw	high (STR_1| (0+32768))
   834  04CA  00E7               	movwf	sprintf@fmt+1
   835  04CB  086F               	movf	_persomax+1,w
   836  04CC  00E9               	movwf	?_sprintf+3
   837  04CD  086E               	movf	_persomax,w
   838  04CE  00E8               	movwf	?_sprintf+2
   839  04CF  30CA               	movlw	(low (_carac| 0))& (0+255)
   840  04D0  318F  2783  3184   	fcall	_sprintf
   841  04D3                     l1719:
   842                           
   843                           ;main.c: 148:         Lcd_Out2(1,2,carac);
   844  04D3  3002               	movlw	2
   845  04D4  0140               	movlb	0	; select bank0
   846  04D5  00EA               	movwf	??_main
   847  04D6  086A               	movf	??_main,w
   848  04D7  00F3               	movwf	Lcd_Out2@x
   849  04D8  30CA               	movlw	(low (_carac| 0))& (0+255)
   850  04D9  00EB               	movwf	??_main+1
   851  04DA  086B               	movf	??_main+1,w
   852  04DB  00F4               	movwf	Lcd_Out2@buffer
   853  04DC  3001               	movlw	1
   854  04DD  3180  2030  3184   	fcall	_Lcd_Out2
   855  04E0                     l1721:
   856                           
   857                           ;main.c: 149:         _delay((unsigned long)((500)*(1000000/4000.0)));
   858  04E0  30A3               	movlw	163
   859  04E1  0140               	movlb	0	; select bank0
   860  04E2  00EA               	movwf	??_main
   861  04E3  3055               	movlw	85
   862  04E4                     u1517:
   863  04E4  0B89               	decfsz	9,f
   864  04E5  2CE4               	goto	u1517
   865  04E6  0BEA               	decfsz	??_main,f
   866  04E7  2CE4               	goto	u1517
   867  04E8                     l1723:
   868                           
   869                           ;main.c: 152:     if(PORTBbits.RB7==1)
   870  04E8  0140               	movlb	0	; select bank0
   871  04E9  1F8D               	btfss	13,7	;volatile
   872  04EA  2CEC               	goto	u1451
   873  04EB  2CED               	goto	u1450
   874  04EC                     u1451:
   875  04EC  2D14               	goto	l1733
   876  04ED                     u1450:
   877  04ED                     l1725:
   878                           
   879                           ;main.c: 153:     {;main.c: 154:        persomax=persomax-2;
   880  04ED  086E               	movf	_persomax,w
   881  04EE  3EFE               	addlw	254
   882  04EF  00EE               	movwf	_persomax
   883  04F0  30FF               	movlw	255
   884  04F1  3D6F               	addwfc	_persomax+1,w
   885  04F2  00EF               	movwf	_persomax+1
   886  04F3                     l1727:
   887                           
   888                           ;main.c: 155:     sprintf(carac, "Personasmax: %d",persomax);
   889  04F3  3013               	movlw	low (STR_1| (0+32768))
   890  04F4  00E6               	movwf	sprintf@fmt
   891  04F5  3088               	movlw	high (STR_1| (0+32768))
   892  04F6  00E7               	movwf	sprintf@fmt+1
   893  04F7  086F               	movf	_persomax+1,w
   894  04F8  00E9               	movwf	?_sprintf+3
   895  04F9  086E               	movf	_persomax,w
   896  04FA  00E8               	movwf	?_sprintf+2
   897  04FB  30CA               	movlw	(low (_carac| 0))& (0+255)
   898  04FC  318F  2783  3184   	fcall	_sprintf
   899  04FF                     l1729:
   900                           
   901                           ;main.c: 156:         Lcd_Out2(1,2,carac);
   902  04FF  3002               	movlw	2
   903  0500  0140               	movlb	0	; select bank0
   904  0501  00EA               	movwf	??_main
   905  0502  086A               	movf	??_main,w
   906  0503  00F3               	movwf	Lcd_Out2@x
   907  0504  30CA               	movlw	(low (_carac| 0))& (0+255)
   908  0505  00EB               	movwf	??_main+1
   909  0506  086B               	movf	??_main+1,w
   910  0507  00F4               	movwf	Lcd_Out2@buffer
   911  0508  3001               	movlw	1
   912  0509  3180  2030  3184   	fcall	_Lcd_Out2
   913  050C                     l1731:
   914                           
   915                           ;main.c: 157:         _delay((unsigned long)((500)*(1000000/4000.0)));
   916  050C  30A3               	movlw	163
   917  050D  0140               	movlb	0	; select bank0
   918  050E  00EA               	movwf	??_main
   919  050F  3055               	movlw	85
   920  0510                     u1527:
   921  0510  0B89               	decfsz	9,f
   922  0511  2D10               	goto	u1527
   923  0512  0BEA               	decfsz	??_main,f
   924  0513  2D10               	goto	u1527
   925  0514                     l1733:
   926                           
   927                           ;main.c: 160:     if(PORTAbits.RA2==0){
   928  0514  0140               	movlb	0	; select bank0
   929  0515  190C               	btfsc	12,2	;volatile
   930  0516  2D18               	goto	u1461
   931  0517  2D19               	goto	u1460
   932  0518                     u1461:
   933  0518  2D22               	goto	l1737
   934  0519                     u1460:
   935  0519                     l1735:
   936                           
   937                           ;main.c: 161:     _delay((unsigned long)((50)*(1000000/4000.0)));
   938  0519  3011               	movlw	17
   939  051A  0140               	movlb	0	; select bank0
   940  051B  00EA               	movwf	??_main
   941  051C  303A               	movlw	58
   942  051D                     u1537:
   943  051D  0B89               	decfsz	9,f
   944  051E  2D1D               	goto	u1537
   945  051F  0BEA               	decfsz	??_main,f
   946  0520  2D1D               	goto	u1537
   947  0521  0000               	nop
   948  0522                     l1737:
   949                           
   950                           ;main.c: 163:     if(PORTAbits.RA2==1)
   951  0522  0140               	movlb	0	; select bank0
   952  0523  1D0C               	btfss	12,2	;volatile
   953  0524  2D26               	goto	u1471
   954  0525  2D27               	goto	u1470
   955  0526                     u1471:
   956  0526  2D52               	goto	l1745
   957  0527                     u1470:
   958  0527                     l1739:
   959                           
   960                           ;main.c: 164:     {;main.c: 165:         contadoperso++;
   961  0527  3001               	movlw	1
   962  0528  0141               	movlb	1	; select bank1
   963  0529  07A6               	addwf	_contadoperso^(0+128),f
   964  052A  3000               	movlw	0
   965  052B  3DA7               	addwfc	(_contadoperso+1)^(0+128),f
   966  052C                     l1741:
   967                           
   968                           ;main.c: 166:          sprintf(carac, "Personasdentro: %d",contadoperso);
   969  052C  3000               	movlw	low (STR_3| (0+32768))
   970  052D  0140               	movlb	0	; select bank0
   971  052E  00E6               	movwf	sprintf@fmt
   972  052F  3088               	movlw	high (STR_3| (0+32768))
   973  0530  00E7               	movwf	sprintf@fmt+1
   974  0531  0141               	movlb	1	; select bank1
   975  0532  0827               	movf	(_contadoperso+1)^(0+128),w
   976  0533  0140               	movlb	0	; select bank0
   977  0534  00E9               	movwf	?_sprintf+3
   978  0535  0141               	movlb	1	; select bank1
   979  0536  0826               	movf	_contadoperso^(0+128),w
   980  0537  0140               	movlb	0	; select bank0
   981  0538  00E8               	movwf	?_sprintf+2
   982  0539  30CA               	movlw	(low (_carac| 0))& (0+255)
   983  053A  318F  2783  3184   	fcall	_sprintf
   984  053D                     l1743:
   985                           
   986                           ;main.c: 167:         Lcd_Out2(1,2,carac);
   987  053D  3002               	movlw	2
   988  053E  0140               	movlb	0	; select bank0
   989  053F  00EA               	movwf	??_main
   990  0540  086A               	movf	??_main,w
   991  0541  00F3               	movwf	Lcd_Out2@x
   992  0542  30CA               	movlw	(low (_carac| 0))& (0+255)
   993  0543  00EB               	movwf	??_main+1
   994  0544  086B               	movf	??_main+1,w
   995  0545  00F4               	movwf	Lcd_Out2@buffer
   996  0546  3001               	movlw	1
   997  0547  3180  2030  3184   	fcall	_Lcd_Out2
   998                           
   999                           ;main.c: 168:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1000  054A  30A3               	movlw	163
  1001  054B  0140               	movlb	0	; select bank0
  1002  054C  00EA               	movwf	??_main
  1003  054D  3055               	movlw	85
  1004  054E                     u1547:
  1005  054E  0B89               	decfsz	9,f
  1006  054F  2D4E               	goto	u1547
  1007  0550  0BEA               	decfsz	??_main,f
  1008  0551  2D4E               	goto	u1547
  1009  0552                     l1745:
  1010                           
  1011                           ;main.c: 171:     if(PORTCbits.RC3==1)
  1012  0552  0140               	movlb	0	; select bank0
  1013  0553  1D8E               	btfss	14,3	;volatile
  1014  0554  2D56               	goto	u1481
  1015  0555  2D57               	goto	u1480
  1016  0556                     u1481:
  1017  0556  2CAF               	goto	l1709
  1018  0557                     u1480:
  1019  0557                     l1747:
  1020                           
  1021                           ;main.c: 172:     {;main.c: 173:         contadoperso--;
  1022  0557  30FF               	movlw	255
  1023  0558  0141               	movlb	1	; select bank1
  1024  0559  07A6               	addwf	_contadoperso^(0+128),f
  1025  055A  30FF               	movlw	255
  1026  055B  3DA7               	addwfc	(_contadoperso+1)^(0+128),f
  1027  055C                     l1749:
  1028                           
  1029                           ;main.c: 174:     sprintf(carac, "Personasdentro: %d",contadoperso);
  1030  055C  3000               	movlw	low (STR_3| (0+32768))
  1031  055D  0140               	movlb	0	; select bank0
  1032  055E  00E6               	movwf	sprintf@fmt
  1033  055F  3088               	movlw	high (STR_3| (0+32768))
  1034  0560  00E7               	movwf	sprintf@fmt+1
  1035  0561  0141               	movlb	1	; select bank1
  1036  0562  0827               	movf	(_contadoperso+1)^(0+128),w
  1037  0563  0140               	movlb	0	; select bank0
  1038  0564  00E9               	movwf	?_sprintf+3
  1039  0565  0141               	movlb	1	; select bank1
  1040  0566  0826               	movf	_contadoperso^(0+128),w
  1041  0567  0140               	movlb	0	; select bank0
  1042  0568  00E8               	movwf	?_sprintf+2
  1043  0569  30CA               	movlw	(low (_carac| 0))& (0+255)
  1044  056A  318F  2783  3184   	fcall	_sprintf
  1045  056D                     l1751:
  1046                           
  1047                           ;main.c: 175:         Lcd_Out2(1,2,carac);
  1048  056D  3002               	movlw	2
  1049  056E  0140               	movlb	0	; select bank0
  1050  056F  00EA               	movwf	??_main
  1051  0570  086A               	movf	??_main,w
  1052  0571  00F3               	movwf	Lcd_Out2@x
  1053  0572  30CA               	movlw	(low (_carac| 0))& (0+255)
  1054  0573  00EB               	movwf	??_main+1
  1055  0574  086B               	movf	??_main+1,w
  1056  0575  00F4               	movwf	Lcd_Out2@buffer
  1057  0576  3001               	movlw	1
  1058  0577  3180  2030  3184   	fcall	_Lcd_Out2
  1059                           
  1060                           ;main.c: 176:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1061  057A  30A3               	movlw	163
  1062  057B  0140               	movlb	0	; select bank0
  1063  057C  00EA               	movwf	??_main
  1064  057D  3055               	movlw	85
  1065  057E                     u1557:
  1066  057E  0B89               	decfsz	9,f
  1067  057F  2D7E               	goto	u1557
  1068  0580  0BEA               	decfsz	??_main,f
  1069  0581  2D7E               	goto	u1557
  1070  0582  2CAF               	goto	l1709
  1071  0583  3180  2802         	ljmp	start
  1072  0585                     __end_of_main:
  1073                           
  1074                           	psect	text1
  1075  0F83                     __ptext1:	
  1076 ;; *************** function _sprintf *****************
  1077 ;; Defined at:
  1078 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  s               1    wreg     PTR unsigned char 
  1081 ;;		 -> carac(20), 
  1082 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1083 ;;		 -> STR_4(19), STR_3(19), STR_2(16), STR_1(16), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1086 ;;		 -> carac(20), 
  1087 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1088 ;;  ret             2    0        int 
  1089 ;;  ap              1    2[BANK1 ] PTR void [1]
  1090 ;;		 -> ?_sprintf(2), 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2   70[BANK0 ] int 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1100 ;;      Params:         0       4       0       0       0       0       0       0
  1101 ;;      Locals:         0       0       9       0       0       0       0       0
  1102 ;;      Temps:          1       0       0       0       0       0       0       0
  1103 ;;      Totals:         1       4       9       0       0       0       0       0
  1104 ;;Total ram usage:       14 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    7
  1107 ;; This function calls:
  1108 ;;		_vfprintf
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function _sprintf
  1116  0F83                     _sprintf:
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1120                           ;sprintf@s stored from wreg
  1121  0F83  0141               	movlb	1	; select bank1
  1122  0F84  00E1               	movwf	sprintf@s^(0+128)
  1123  0F85                     l1665:
  1124  0F85  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1125  0F86  00FD               	movwf	??_sprintf
  1126  0F87  087D               	movf	??_sprintf,w
  1127  0F88  00E0               	movwf	sprintf@ap^(0+128)
  1128  0F89  0861               	movf	sprintf@s^(0+128),w
  1129  0F8A  00FD               	movwf	??_sprintf
  1130  0F8B  087D               	movf	??_sprintf,w
  1131  0F8C  00E2               	movwf	sprintf@f^(0+128)
  1132  0F8D                     l1667:
  1133  0F8D  01E3               	clrf	(sprintf@f^(0+128)+1)
  1134  0F8E  01E4               	clrf	((sprintf@f+1)^(0+128)+1)
  1135  0F8F                     l1669:
  1136  0F8F  01E5               	clrf	(sprintf@f^(0+128)+3)
  1137  0F90  01E6               	clrf	((sprintf@f+1)^(0+128)+3)
  1138  0F91                     l1671:
  1139  0F91  0140               	movlb	0	; select bank0
  1140  0F92  0867               	movf	sprintf@fmt+1,w
  1141  0F93  00DF               	movwf	vfprintf@fmt+1
  1142  0F94  0866               	movf	sprintf@fmt,w
  1143  0F95  00DE               	movwf	vfprintf@fmt
  1144  0F96  30E0               	movlw	(low (sprintf@ap| 0))& (0+255)
  1145  0F97  00FD               	movwf	??_sprintf
  1146  0F98  087D               	movf	??_sprintf,w
  1147  0F99  00E0               	movwf	vfprintf@ap
  1148  0F9A  30E2               	movlw	(low (sprintf@f| 0))& (0+255)
  1149  0F9B  318F  27CF  318F   	fcall	_vfprintf
  1150  0F9E                     l1673:
  1151  0F9E  0141               	movlb	1	; select bank1
  1152  0F9F  0863               	movf	(sprintf@f^(0+128)+1),w
  1153  0FA0  0761               	addwf	sprintf@s^(0+128),w
  1154  0FA1  00FD               	movwf	??_sprintf
  1155  0FA2  087D               	movf	??_sprintf,w
  1156  0FA3  0086               	movwf	6
  1157  0FA4  0187               	clrf	7
  1158  0FA5  0181               	clrf	1
  1159  0FA6                     l667:
  1160  0FA6  0008               	return
  1161  0FA7                     __end_of_sprintf:
  1162                           
  1163                           	psect	text2
  1164  0FCF                     __ptext2:	
  1165 ;; *************** function _vfprintf *****************
  1166 ;; Defined at:
  1167 ;;		line 1368 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  fp              1    wreg     PTR struct _IO_FILE
  1170 ;;		 -> sprintf@f(5), 
  1171 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1172 ;;		 -> STR_4(19), STR_3(19), STR_2(16), STR_1(16), 
  1173 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1174 ;;		 -> sprintf@ap(1), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1177 ;;		 -> sprintf@f(5), 
  1178 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1179 ;;		 -> STR_4(19), STR_3(19), STR_2(16), STR_1(16), 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2   62[BANK0 ] int 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1189 ;;      Params:         0       3       0       0       0       0       0       0
  1190 ;;      Locals:         0       3       0       0       0       0       0       0
  1191 ;;      Temps:          0       2       0       0       0       0       0       0
  1192 ;;      Totals:         0       8       0       0       0       0       0       0
  1193 ;;Total ram usage:        8 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    6
  1196 ;; This function calls:
  1197 ;;		_vfpfcnvrt
  1198 ;; This function is called by:
  1199 ;;		_sprintf
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _vfprintf
  1205  0FCF                     _vfprintf:
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1209                           ;vfprintf@fp stored from wreg
  1210  0FCF  0140               	movlb	0	; select bank0
  1211  0FD0  00E3               	movwf	vfprintf@fp
  1212  0FD1                     l1567:
  1213                           
  1214                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1215  0FD1  085F               	movf	vfprintf@fmt+1,w
  1216  0FD2  00E5               	movwf	vfprintf@cfmt+1
  1217  0FD3  085E               	movf	vfprintf@fmt,w
  1218  0FD4  00E4               	movwf	vfprintf@cfmt
  1219  0FD5                     l1569:
  1220                           
  1221                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1222  0FD5  0141               	movlb	1	; select bank1
  1223  0FD6  01A0               	clrf	_nout^(0+128)
  1224  0FD7  01A1               	clrf	(_nout+1)^(0+128)
  1225                           
  1226                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1227  0FD8  2FED               	goto	l1573
  1228  0FD9                     l1571:
  1229                           
  1230                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1231  0FD9  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1232  0FDA  00E1               	movwf	??_vfprintf
  1233  0FDB  0861               	movf	??_vfprintf,w
  1234  0FDC  00CE               	movwf	vfpfcnvrt@fmt
  1235  0FDD  0860               	movf	vfprintf@ap,w
  1236  0FDE  00E2               	movwf	??_vfprintf+1
  1237  0FDF  0862               	movf	??_vfprintf+1,w
  1238  0FE0  00CF               	movwf	vfpfcnvrt@ap
  1239  0FE1  0863               	movf	vfprintf@fp,w
  1240  0FE2  3182  22CF  318F   	fcall	_vfpfcnvrt
  1241  0FE5  0140               	movlb	0	; select bank0
  1242  0FE6  084E               	movf	?_vfpfcnvrt,w
  1243  0FE7  0141               	movlb	1	; select bank1
  1244  0FE8  07A0               	addwf	_nout^(0+128),f
  1245  0FE9  0140               	movlb	0	; select bank0
  1246  0FEA  084F               	movf	?_vfpfcnvrt+1,w
  1247  0FEB  0141               	movlb	1	; select bank1
  1248  0FEC  3DA1               	addwfc	(_nout+1)^(0+128),f
  1249  0FED                     l1573:
  1250                           
  1251                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1252  0FED  0140               	movlb	0	; select bank0
  1253  0FEE  0864               	movf	vfprintf@cfmt,w
  1254  0FEF  0084               	movwf	4
  1255  0FF0  0865               	movf	vfprintf@cfmt+1,w
  1256  0FF1  0085               	movwf	5
  1257  0FF2  0012               	moviw fsr0++
  1258  0FF3  1D03               	btfss	3,2
  1259  0FF4  2FF6               	goto	u1391
  1260  0FF5  2FF7               	goto	u1390
  1261  0FF6                     u1391:
  1262  0FF6  2FD9               	goto	l1571
  1263  0FF7                     u1390:
  1264  0FF7                     l1575:
  1265                           
  1266                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1267  0FF7  0141               	movlb	1	; select bank1
  1268  0FF8  0821               	movf	(_nout+1)^(0+128),w
  1269  0FF9  0140               	movlb	0	; select bank0
  1270  0FFA  00DF               	movwf	?_vfprintf+1
  1271  0FFB  0141               	movlb	1	; select bank1
  1272  0FFC  0820               	movf	_nout^(0+128),w
  1273  0FFD  0140               	movlb	0	; select bank0
  1274  0FFE  00DE               	movwf	?_vfprintf
  1275  0FFF                     l739:
  1276  0FFF  0008               	return
  1277  1000                     __end_of_vfprintf:
  1278                           
  1279                           	psect	text3
  1280  02CF                     __ptext3:	
  1281 ;; *************** function _vfpfcnvrt *****************
  1282 ;; Defined at:
  1283 ;;		line 670 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  fp              1    wreg     PTR struct _IO_FILE
  1286 ;;		 -> sprintf@f(5), 
  1287 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1288 ;;		 -> vfprintf@cfmt(2), 
  1289 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1290 ;;		 -> sprintf@ap(1), 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1293 ;;		 -> sprintf@f(5), 
  1294 ;;  ll              8   53[BANK0 ] long long 
  1295 ;;  llu             8    0        unsigned long long 
  1296 ;;  f               4    0        unsigned long long 
  1297 ;;  ct              3    0        unsigned char [3]
  1298 ;;  vp              2    0        PTR void 
  1299 ;;  i               2    0        int 
  1300 ;;  done            2    0        int 
  1301 ;;  cp              2    0        PTR unsigned char 
  1302 ;;  c               1    0        unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2   46[BANK0 ] int 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1312 ;;      Params:         0       2       0       0       0       0       0       0
  1313 ;;      Locals:         0       9       0       0       0       0       0       0
  1314 ;;      Temps:          0       5       0       0       0       0       0       0
  1315 ;;      Totals:         0      16       0       0       0       0       0       0
  1316 ;;Total ram usage:       16 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    5
  1319 ;; This function calls:
  1320 ;;		_dtoa
  1321 ;;		_fputc
  1322 ;; This function is called by:
  1323 ;;		_vfprintf
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _vfpfcnvrt
  1329  02CF                     _vfpfcnvrt:
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1333                           ;vfpfcnvrt@fp stored from wreg
  1334  02CF  0140               	movlb	0	; select bank0
  1335  02D0  00DD               	movwf	vfpfcnvrt@fp
  1336  02D1                     l1461:
  1337                           
  1338                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;D:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;D:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1339  02D1  084E               	movf	vfpfcnvrt@fmt,w
  1340  02D2  0086               	movwf	6
  1341  02D3  0187               	clrf	7
  1342  02D4  3F40               	moviw [0]fsr1
  1343  02D5  00D0               	movwf	??_vfpfcnvrt
  1344  02D6  3F41               	moviw [1]fsr1
  1345  02D7  00D1               	movwf	??_vfpfcnvrt+1
  1346  02D8  0850               	movf	??_vfpfcnvrt,w
  1347  02D9  0084               	movwf	4
  1348  02DA  0851               	movf	??_vfpfcnvrt+1,w
  1349  02DB  0085               	movwf	5
  1350  02DC  0012               	moviw fsr0++
  1351  02DD  3A25               	xorlw	37
  1352  02DE  1D03               	btfss	3,2
  1353  02DF  2AE1               	goto	u1231
  1354  02E0  2AE2               	goto	u1230
  1355  02E1                     u1231:
  1356  02E1  2B88               	goto	l1497
  1357  02E2                     u1230:
  1358  02E2                     l1463:
  1359                           
  1360                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1361  02E2  084E               	movf	vfpfcnvrt@fmt,w
  1362  02E3  0086               	movwf	6
  1363  02E4  0187               	clrf	7
  1364  02E5  3001               	movlw	1
  1365  02E6  0781               	addwf	1,f
  1366  02E7  3141               	addfsr 1,1
  1367  02E8  1803               	skipnc
  1368  02E9  0A81               	incf	1,f
  1369  02EA                     l1465:
  1370                           
  1371                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1372  02EA  0141               	movlb	1	; select bank1
  1373  02EB  01A2               	clrf	_width^(0+128)
  1374  02EC  01A3               	clrf	(_width+1)^(0+128)
  1375  02ED  0140               	movlb	0	; select bank0
  1376  02EE  01EC               	clrf	_flags
  1377  02EF  01ED               	clrf	_flags+1
  1378  02F0                     l1467:
  1379                           
  1380                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1381  02F0  30FF               	movlw	255
  1382  02F1  0141               	movlb	1	; select bank1
  1383  02F2  00A4               	movwf	_prec^(0+128)
  1384  02F3  30FF               	movlw	255
  1385  02F4  00A5               	movwf	(_prec^(0+128)+1)
  1386  02F5                     l1469:
  1387                           
  1388                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1389  02F5  0140               	movlb	0	; select bank0
  1390  02F6  084E               	movf	vfpfcnvrt@fmt,w
  1391  02F7  0086               	movwf	6
  1392  02F8  0187               	clrf	7
  1393  02F9  3F40               	moviw [0]fsr1
  1394  02FA  00D0               	movwf	??_vfpfcnvrt
  1395  02FB  3F41               	moviw [1]fsr1
  1396  02FC  00D1               	movwf	??_vfpfcnvrt+1
  1397  02FD  0850               	movf	??_vfpfcnvrt,w
  1398  02FE  0084               	movwf	4
  1399  02FF  0851               	movf	??_vfpfcnvrt+1,w
  1400  0300  0085               	movwf	5
  1401  0301  0012               	moviw fsr0++
  1402  0302  3A64               	xorlw	100
  1403  0303  1903               	btfsc	3,2
  1404  0304  2B06               	goto	u1241
  1405  0305  2B07               	goto	u1240
  1406  0306                     u1241:
  1407  0306  2B18               	goto	l1473
  1408  0307                     u1240:
  1409  0307                     l1471:
  1410  0307  084E               	movf	vfpfcnvrt@fmt,w
  1411  0308  0086               	movwf	6
  1412  0309  0187               	clrf	7
  1413  030A  3F40               	moviw [0]fsr1
  1414  030B  00D0               	movwf	??_vfpfcnvrt
  1415  030C  3F41               	moviw [1]fsr1
  1416  030D  00D1               	movwf	??_vfpfcnvrt+1
  1417  030E  0850               	movf	??_vfpfcnvrt,w
  1418  030F  0084               	movwf	4
  1419  0310  0851               	movf	??_vfpfcnvrt+1,w
  1420  0311  0085               	movwf	5
  1421  0312  0012               	moviw fsr0++
  1422  0313  3A69               	xorlw	105
  1423  0314  1D03               	btfss	3,2
  1424  0315  2B17               	goto	u1251
  1425  0316  2B18               	goto	u1250
  1426  0317                     u1251:
  1427  0317  2B53               	goto	l1481
  1428  0318                     u1250:
  1429  0318                     l1473:
  1430                           
  1431                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1432  0318  084E               	movf	vfpfcnvrt@fmt,w
  1433  0319  0086               	movwf	6
  1434  031A  0187               	clrf	7
  1435  031B  3001               	movlw	1
  1436  031C  0781               	addwf	1,f
  1437  031D  3141               	addfsr 1,1
  1438  031E  1803               	skipnc
  1439  031F  0A81               	incf	1,f
  1440  0320                     l1475:
  1441                           
  1442                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1443  0320  084F               	movf	vfpfcnvrt@ap,w
  1444  0321  0086               	movwf	6
  1445  0322  0187               	clrf	7
  1446  0323  0801               	movf	1,w
  1447  0324  0084               	movwf	4
  1448  0325  0185               	clrf	5
  1449  0326  3002               	movlw	2
  1450  0327  0781               	addwf	1,f
  1451  0328  3F00               	moviw [0]fsr0
  1452  0329  00D0               	movwf	??_vfpfcnvrt
  1453  032A  3F01               	moviw [1]fsr0
  1454  032B  00D1               	movwf	??_vfpfcnvrt+1
  1455  032C  0850               	movf	??_vfpfcnvrt,w
  1456  032D  00D5               	movwf	vfpfcnvrt@ll
  1457  032E  0851               	movf	??_vfpfcnvrt+1,w
  1458  032F  00D6               	movwf	vfpfcnvrt@ll+1
  1459  0330  0D89               	rlf	9,f
  1460  0331  3B89               	subwfb	9,f
  1461  0332  0989               	comf	9,f
  1462  0333  00D7               	movwf	vfpfcnvrt@ll+2
  1463  0334  00D8               	movwf	vfpfcnvrt@ll+3
  1464  0335  00D9               	movwf	vfpfcnvrt@ll+4
  1465  0336  00DA               	movwf	vfpfcnvrt@ll+5
  1466  0337  00DB               	movwf	vfpfcnvrt@ll+6
  1467  0338  00DC               	movwf	vfpfcnvrt@ll+7
  1468  0339                     l1477:
  1469                           
  1470                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1471  0339  0855               	movf	vfpfcnvrt@ll,w
  1472  033A  00B0               	movwf	dtoa@d
  1473  033B  0856               	movf	vfpfcnvrt@ll+1,w
  1474  033C  00B1               	movwf	dtoa@d+1
  1475  033D  0857               	movf	vfpfcnvrt@ll+2,w
  1476  033E  00B2               	movwf	dtoa@d+2
  1477  033F  0858               	movf	vfpfcnvrt@ll+3,w
  1478  0340  00B3               	movwf	dtoa@d+3
  1479  0341  0859               	movf	vfpfcnvrt@ll+4,w
  1480  0342  00B4               	movwf	dtoa@d+4
  1481  0343  085A               	movf	vfpfcnvrt@ll+5,w
  1482  0344  00B5               	movwf	dtoa@d+5
  1483  0345  085B               	movf	vfpfcnvrt@ll+6,w
  1484  0346  00B6               	movwf	dtoa@d+6
  1485  0347  085C               	movf	vfpfcnvrt@ll+7,w
  1486  0348  00B7               	movwf	dtoa@d+7
  1487  0349  085D               	movf	vfpfcnvrt@fp,w
  1488  034A  3186  2686  3182   	fcall	_dtoa
  1489  034D  0140               	movlb	0	; select bank0
  1490  034E  0831               	movf	?_dtoa+1,w
  1491  034F  00CF               	movwf	?_vfpfcnvrt+1
  1492  0350  0830               	movf	?_dtoa,w
  1493  0351  00CE               	movwf	?_vfpfcnvrt
  1494  0352  2BAB               	goto	l732
  1495  0353                     l1481:
  1496                           
  1497                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1498  0353  084E               	movf	vfpfcnvrt@fmt,w
  1499  0354  0086               	movwf	6
  1500  0355  0187               	clrf	7
  1501  0356  3F40               	moviw [0]fsr1
  1502  0357  00D0               	movwf	??_vfpfcnvrt
  1503  0358  3F41               	moviw [1]fsr1
  1504  0359  00D1               	movwf	??_vfpfcnvrt+1
  1505  035A  0850               	movf	??_vfpfcnvrt,w
  1506  035B  0084               	movwf	4
  1507  035C  0851               	movf	??_vfpfcnvrt+1,w
  1508  035D  0085               	movwf	5
  1509  035E  0012               	moviw fsr0++
  1510  035F  3A25               	xorlw	37
  1511  0360  1D03               	btfss	3,2
  1512  0361  2B63               	goto	u1261
  1513  0362  2B64               	goto	u1260
  1514  0363                     u1261:
  1515  0363  2B7D               	goto	l1491
  1516  0364                     u1260:
  1517  0364                     l1483:
  1518                           
  1519                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1520  0364  084E               	movf	vfpfcnvrt@fmt,w
  1521  0365  0086               	movwf	6
  1522  0366  0187               	clrf	7
  1523  0367  3001               	movlw	1
  1524  0368  0781               	addwf	1,f
  1525  0369  3141               	addfsr 1,1
  1526  036A  1803               	skipnc
  1527  036B  0A81               	incf	1,f
  1528  036C                     l1485:
  1529                           
  1530                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1531  036C  3025               	movlw	37
  1532  036D  00F0               	movwf	fputc@c
  1533  036E  3000               	movlw	0
  1534  036F  00F1               	movwf	fputc@c+1
  1535  0370  085D               	movf	vfpfcnvrt@fp,w
  1536  0371  00D0               	movwf	??_vfpfcnvrt
  1537  0372  0850               	movf	??_vfpfcnvrt,w
  1538  0373  00F2               	movwf	fputc@fp
  1539  0374  3180  2079  3182   	fcall	_fputc
  1540  0377                     l1487:
  1541                           
  1542                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1543  0377  3001               	movlw	1
  1544  0378  0140               	movlb	0	; select bank0
  1545  0379  00CE               	movwf	?_vfpfcnvrt
  1546  037A  3000               	movlw	0
  1547  037B  00CF               	movwf	?_vfpfcnvrt+1
  1548  037C  2BAB               	goto	l732
  1549  037D                     l1491:
  1550                           
  1551                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1552  037D  084E               	movf	vfpfcnvrt@fmt,w
  1553  037E  0086               	movwf	6
  1554  037F  0187               	clrf	7
  1555  0380  3001               	movlw	1
  1556  0381  0781               	addwf	1,f
  1557  0382  3141               	addfsr 1,1
  1558  0383  1803               	skipnc
  1559  0384  0A81               	incf	1,f
  1560  0385                     l1493:
  1561                           
  1562                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1563  0385  01CE               	clrf	?_vfpfcnvrt
  1564  0386  01CF               	clrf	?_vfpfcnvrt+1
  1565  0387  2BAB               	goto	l732
  1566  0388                     l1497:
  1567                           
  1568                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1569  0388  084E               	movf	vfpfcnvrt@fmt,w
  1570  0389  0086               	movwf	6
  1571  038A  0187               	clrf	7
  1572  038B  3F40               	moviw [0]fsr1
  1573  038C  00D0               	movwf	??_vfpfcnvrt
  1574  038D  3F41               	moviw [1]fsr1
  1575  038E  00D1               	movwf	??_vfpfcnvrt+1
  1576  038F  0850               	movf	??_vfpfcnvrt,w
  1577  0390  0084               	movwf	4
  1578  0391  0851               	movf	??_vfpfcnvrt+1,w
  1579  0392  0085               	movwf	5
  1580  0393  0800               	movf	0,w	;code access
  1581  0394  00D2               	movwf	??_vfpfcnvrt+2
  1582  0395  01D3               	clrf	??_vfpfcnvrt+3
  1583  0396  0852               	movf	??_vfpfcnvrt+2,w
  1584  0397  00F0               	movwf	fputc@c
  1585  0398  0853               	movf	??_vfpfcnvrt+3,w
  1586  0399  00F1               	movwf	fputc@c+1
  1587  039A  085D               	movf	vfpfcnvrt@fp,w
  1588  039B  00D4               	movwf	??_vfpfcnvrt+4
  1589  039C  0854               	movf	??_vfpfcnvrt+4,w
  1590  039D  00F2               	movwf	fputc@fp
  1591  039E  3180  2079  3182   	fcall	_fputc
  1592  03A1                     l1499:
  1593                           
  1594                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1595  03A1  0140               	movlb	0	; select bank0
  1596  03A2  084E               	movf	vfpfcnvrt@fmt,w
  1597  03A3  0086               	movwf	6
  1598  03A4  0187               	clrf	7
  1599  03A5  3001               	movlw	1
  1600  03A6  0781               	addwf	1,f
  1601  03A7  3141               	addfsr 1,1
  1602  03A8  1803               	skipnc
  1603  03A9  0A81               	incf	1,f
  1604  03AA  2B77               	goto	l1487
  1605  03AB                     l732:
  1606  03AB  0008               	return
  1607  03AC                     __end_of_vfpfcnvrt:
  1608                           
  1609                           	psect	text4
  1610  0686                     __ptext4:	
  1611 ;; *************** function _dtoa *****************
  1612 ;; Defined at:
  1613 ;;		line 274 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  fp              1    wreg     PTR struct _IO_FILE
  1616 ;;		 -> sprintf@f(5), 
  1617 ;;  d               8   16[BANK0 ] long long 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  1620 ;;		 -> sprintf@f(5), 
  1621 ;;  n               8   36[BANK0 ] long long 
  1622 ;;  i               2   44[BANK0 ] int 
  1623 ;;  s               2   34[BANK0 ] int 
  1624 ;;  w               2   32[BANK0 ] int 
  1625 ;;  p               2   30[BANK0 ] int 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2   16[BANK0 ] int 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1635 ;;      Params:         0       8       0       0       0       0       0       0
  1636 ;;      Locals:         0      19       0       0       0       0       0       0
  1637 ;;      Temps:          0       3       0       0       0       0       0       0
  1638 ;;      Totals:         0      30       0       0       0       0       0       0
  1639 ;;Total ram usage:       30 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    4
  1642 ;; This function calls:
  1643 ;;		___aodiv
  1644 ;;		___aomod
  1645 ;;		_abs
  1646 ;;		_pad
  1647 ;; This function is called by:
  1648 ;;		_vfpfcnvrt
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _dtoa
  1654  0686                     _dtoa:
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1658                           ;dtoa@fp stored from wreg
  1659  0686  0140               	movlb	0	; select bank0
  1660  0687  00BD               	movwf	dtoa@fp
  1661  0688                     l1403:
  1662                           
  1663                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  1664  0688  0830               	movf	dtoa@d,w
  1665  0689  00C4               	movwf	dtoa@n
  1666  068A  0831               	movf	dtoa@d+1,w
  1667  068B  00C5               	movwf	dtoa@n+1
  1668  068C  0832               	movf	dtoa@d+2,w
  1669  068D  00C6               	movwf	dtoa@n+2
  1670  068E  0833               	movf	dtoa@d+3,w
  1671  068F  00C7               	movwf	dtoa@n+3
  1672  0690  0834               	movf	dtoa@d+4,w
  1673  0691  00C8               	movwf	dtoa@n+4
  1674  0692  0835               	movf	dtoa@d+5,w
  1675  0693  00C9               	movwf	dtoa@n+5
  1676  0694  0836               	movf	dtoa@d+6,w
  1677  0695  00CA               	movwf	dtoa@n+6
  1678  0696  0837               	movf	dtoa@d+7,w
  1679  0697  00CB               	movwf	dtoa@n+7
  1680  0698                     l1405:
  1681                           
  1682                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  1683  0698  3044               	movlw	low dtoa@n
  1684  0699  0086               	movwf	6
  1685  069A  3000               	movlw	high dtoa@n
  1686  069B  0087               	movwf	7
  1687  069C  3F47               	moviw [7]fsr1
  1688  069D  00B8               	movwf	??_dtoa
  1689  069E  1BB8               	btfsc	??_dtoa,7
  1690  069F  2EA1               	goto	u1071
  1691  06A0  2EA3               	goto	u1070
  1692  06A1                     u1071:
  1693  06A1  3001               	movlw	1
  1694  06A2  2EA4               	goto	u1080
  1695  06A3                     u1070:
  1696  06A3  3000               	movlw	0
  1697  06A4                     u1080:
  1698  06A4  0140               	movlb	0	; select bank0
  1699  06A5  00B9               	movwf	??_dtoa+1
  1700  06A6  01BA               	clrf	??_dtoa+2
  1701  06A7  0839               	movf	??_dtoa+1,w
  1702  06A8  00C2               	movwf	dtoa@s
  1703  06A9  083A               	movf	??_dtoa+2,w
  1704  06AA  00C3               	movwf	dtoa@s+1
  1705  06AB                     l1407:
  1706                           
  1707                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1708  06AB  0842               	movf	dtoa@s,w
  1709  06AC  0443               	iorwf	dtoa@s+1,w
  1710  06AD  1903               	btfsc	3,2
  1711  06AE  2EB0               	goto	u1091
  1712  06AF  2EB1               	goto	u1090
  1713  06B0                     u1091:
  1714  06B0  2ECF               	goto	l702
  1715  06B1                     u1090:
  1716  06B1                     l1409:
  1717                           
  1718                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  1719  06B1  09C4               	comf	dtoa@n,f
  1720  06B2  09C5               	comf	dtoa@n+1,f
  1721  06B3  09C6               	comf	dtoa@n+2,f
  1722  06B4  09C7               	comf	dtoa@n+3,f
  1723  06B5  09C8               	comf	dtoa@n+4,f
  1724  06B6  09C9               	comf	dtoa@n+5,f
  1725  06B7  09CA               	comf	dtoa@n+6,f
  1726  06B8  09CB               	comf	dtoa@n+7,f
  1727  06B9  0AC4               	incf	dtoa@n,f
  1728  06BA  1D03               	skipz
  1729  06BB  2ECF               	goto	u110lld
  1730  06BC  0AC5               	incf	dtoa@n+1,f
  1731  06BD  1D03               	skipz
  1732  06BE  2ECF               	goto	u110lld
  1733  06BF  0AC6               	incf	dtoa@n+2,f
  1734  06C0  1D03               	skipz
  1735  06C1  2ECF               	goto	u110lld
  1736  06C2  0AC7               	incf	dtoa@n+3,f
  1737  06C3  1D03               	skipz
  1738  06C4  2ECF               	goto	u110lld
  1739  06C5  0AC8               	incf	dtoa@n+4,f
  1740  06C6  1D03               	skipz
  1741  06C7  2ECF               	goto	u110lld
  1742  06C8  0AC9               	incf	dtoa@n+5,f
  1743  06C9  1D03               	skipz
  1744  06CA  2ECF               	goto	u110lld
  1745  06CB  0ACA               	incf	dtoa@n+6,f
  1746  06CC  1D03               	skipz
  1747  06CD  2ECF               	goto	u110lld
  1748  06CE  0ACB               	incf	dtoa@n+7,f
  1749  06CF                     u110lld:
  1750  06CF                     l702:	
  1751                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 284:     }
  1752                           
  1753                           
  1754                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  1755  06CF  0141               	movlb	1	; select bank1
  1756  06D0  1BA5               	btfsc	(_prec+1)^(0+128),7
  1757  06D1  2ED3               	goto	u1111
  1758  06D2  2ED4               	goto	u1110
  1759  06D3                     u1111:
  1760  06D3  2ED9               	goto	l703
  1761  06D4                     u1110:
  1762  06D4                     l1411:
  1763                           
  1764                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  1765  06D4  30FD               	movlw	253
  1766  06D5  0140               	movlb	0	; select bank0
  1767  06D6  05EC               	andwf	_flags,f
  1768  06D7  30FF               	movlw	255
  1769  06D8  05ED               	andwf	_flags+1,f
  1770  06D9                     l703:	
  1771                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 289:     }
  1772                           
  1773                           
  1774                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  1775  06D9  0141               	movlb	1	; select bank1
  1776  06DA  0825               	movf	(_prec+1)^(0+128),w
  1777  06DB  3A80               	xorlw	128
  1778  06DC  0140               	movlb	0	; select bank0
  1779  06DD  00B8               	movwf	??_dtoa
  1780  06DE  3080               	movlw	128
  1781  06DF  0238               	subwf	??_dtoa,w
  1782  06E0  1D03               	skipz
  1783  06E1  2EE5               	goto	u1125
  1784  06E2  3001               	movlw	1
  1785  06E3  0141               	movlb	1	; select bank1
  1786  06E4  0224               	subwf	_prec^(0+128),w
  1787  06E5                     u1125:
  1788  06E5  1803               	skipnc
  1789  06E6  2EE8               	goto	u1121
  1790  06E7  2EE9               	goto	u1120
  1791  06E8                     u1121:
  1792  06E8  2EEF               	goto	l1415
  1793  06E9                     u1120:
  1794  06E9                     l1413:
  1795  06E9  3001               	movlw	1
  1796  06EA  0140               	movlb	0	; select bank0
  1797  06EB  00BE               	movwf	dtoa@p
  1798  06EC  3000               	movlw	0
  1799  06ED  00BF               	movwf	dtoa@p+1
  1800  06EE  2EF7               	goto	l707
  1801  06EF                     l1415:
  1802  06EF  0141               	movlb	1	; select bank1
  1803  06F0  0825               	movf	(_prec+1)^(0+128),w
  1804  06F1  0140               	movlb	0	; select bank0
  1805  06F2  00BF               	movwf	dtoa@p+1
  1806  06F3  0141               	movlb	1	; select bank1
  1807  06F4  0824               	movf	_prec^(0+128),w
  1808  06F5  0140               	movlb	0	; select bank0
  1809  06F6  00BE               	movwf	dtoa@p
  1810  06F7                     l707:
  1811                           
  1812                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  1813  06F7  0141               	movlb	1	; select bank1
  1814  06F8  0823               	movf	(_width+1)^(0+128),w
  1815  06F9  0140               	movlb	0	; select bank0
  1816  06FA  00C1               	movwf	dtoa@w+1
  1817  06FB  0141               	movlb	1	; select bank1
  1818  06FC  0822               	movf	_width^(0+128),w
  1819  06FD  0140               	movlb	0	; select bank0
  1820  06FE  00C0               	movwf	dtoa@w
  1821  06FF                     l1417:
  1822                           
  1823                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  1824  06FF  0842               	movf	dtoa@s,w
  1825  0700  0443               	iorwf	dtoa@s+1,w
  1826  0701  1D03               	btfss	3,2
  1827  0702  2F04               	goto	u1131
  1828  0703  2F05               	goto	u1130
  1829  0704                     u1131:
  1830  0704  2F09               	goto	l1421
  1831  0705                     u1130:
  1832  0705                     l1419:
  1833  0705  1D6C               	btfss	_flags,2
  1834  0706  2F08               	goto	u1141
  1835  0707  2F09               	goto	u1140
  1836  0708                     u1141:
  1837  0708  2F0D               	goto	l708
  1838  0709                     u1140:
  1839  0709                     l1421:
  1840                           
  1841                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  1842  0709  30FF               	movlw	255
  1843  070A  07C0               	addwf	dtoa@w,f
  1844  070B  30FF               	movlw	255
  1845  070C  3DC1               	addwfc	dtoa@w+1,f
  1846  070D                     l708:	
  1847                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 294:     }
  1848                           
  1849                           
  1850                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  1851  070D  301F               	movlw	31
  1852  070E  00CC               	movwf	dtoa@i
  1853  070F  3000               	movlw	0
  1854  0710  00CD               	movwf	dtoa@i+1
  1855  0711                     l1423:
  1856                           
  1857                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  1858  0711  0141               	movlb	1	; select bank1
  1859  0712  01C9               	clrf	(_dbuf^(0+128)+31)
  1860                           
  1861                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1862  0713  2F7C               	goto	l711
  1863  0714                     l1425:
  1864                           
  1865                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  1866  0714  30FF               	movlw	255
  1867  0715  0140               	movlb	0	; select bank0
  1868  0716  07CC               	addwf	dtoa@i,f
  1869  0717  30FF               	movlw	255
  1870  0718  3DCD               	addwfc	dtoa@i+1,f
  1871  0719                     l1427:
  1872                           
  1873                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  1874  0719  300A               	movlw	10
  1875  071A  00A0               	movwf	___aomod@divisor
  1876  071B  01A1               	clrf	___aomod@divisor+1
  1877  071C  01A2               	clrf	___aomod@divisor+2
  1878  071D  01A3               	clrf	___aomod@divisor+3
  1879  071E  01A4               	clrf	___aomod@divisor+4
  1880  071F  01A5               	clrf	___aomod@divisor+5
  1881  0720  01A6               	clrf	___aomod@divisor+6
  1882  0721  01A7               	clrf	___aomod@divisor+7
  1883  0722  0844               	movf	dtoa@n,w
  1884  0723  00A8               	movwf	___aomod@dividend
  1885  0724  0845               	movf	dtoa@n+1,w
  1886  0725  00A9               	movwf	___aomod@dividend+1
  1887  0726  0846               	movf	dtoa@n+2,w
  1888  0727  00AA               	movwf	___aomod@dividend+2
  1889  0728  0847               	movf	dtoa@n+3,w
  1890  0729  00AB               	movwf	___aomod@dividend+3
  1891  072A  0848               	movf	dtoa@n+4,w
  1892  072B  00AC               	movwf	___aomod@dividend+4
  1893  072C  0849               	movf	dtoa@n+5,w
  1894  072D  00AD               	movwf	___aomod@dividend+5
  1895  072E  084A               	movf	dtoa@n+6,w
  1896  072F  00AE               	movwf	___aomod@dividend+6
  1897  0730  084B               	movf	dtoa@n+7,w
  1898  0731  00AF               	movwf	___aomod@dividend+7
  1899  0732  3183  23AC  3186   	fcall	___aomod
  1900  0735  0140               	movlb	0	; select bank0
  1901  0736  0821               	movf	?___aomod+1,w
  1902  0737  00F4               	movwf	abs@a+1
  1903  0738  0820               	movf	?___aomod,w
  1904  0739  00F3               	movwf	abs@a
  1905  073A  318F  2769  3186   	fcall	_abs
  1906  073D  0873               	movf	?_abs,w
  1907  073E  3E30               	addlw	48
  1908  073F  0140               	movlb	0	; select bank0
  1909  0740  00B8               	movwf	??_dtoa
  1910  0741  084C               	movf	dtoa@i,w
  1911  0742  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  1912  0743  0086               	movwf	6
  1913  0744  0187               	clrf	7
  1914  0745  0838               	movf	??_dtoa,w
  1915  0746  0081               	movwf	1
  1916  0747                     l1429:
  1917                           
  1918                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  1919  0747  30FF               	movlw	255
  1920  0748  07BE               	addwf	dtoa@p,f
  1921  0749  30FF               	movlw	255
  1922  074A  3DBF               	addwfc	dtoa@p+1,f
  1923  074B                     l1431:
  1924                           
  1925                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  1926  074B  30FF               	movlw	255
  1927  074C  07C0               	addwf	dtoa@w,f
  1928  074D  30FF               	movlw	255
  1929  074E  3DC1               	addwfc	dtoa@w+1,f
  1930  074F                     l1433:
  1931                           
  1932                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  1933  074F  300A               	movlw	10
  1934  0750  00A0               	movwf	___aodiv@divisor
  1935  0751  01A1               	clrf	___aodiv@divisor+1
  1936  0752  01A2               	clrf	___aodiv@divisor+2
  1937  0753  01A3               	clrf	___aodiv@divisor+3
  1938  0754  01A4               	clrf	___aodiv@divisor+4
  1939  0755  01A5               	clrf	___aodiv@divisor+5
  1940  0756  01A6               	clrf	___aodiv@divisor+6
  1941  0757  01A7               	clrf	___aodiv@divisor+7
  1942  0758  0844               	movf	dtoa@n,w
  1943  0759  00A8               	movwf	___aodiv@dividend
  1944  075A  0845               	movf	dtoa@n+1,w
  1945  075B  00A9               	movwf	___aodiv@dividend+1
  1946  075C  0846               	movf	dtoa@n+2,w
  1947  075D  00AA               	movwf	___aodiv@dividend+2
  1948  075E  0847               	movf	dtoa@n+3,w
  1949  075F  00AB               	movwf	___aodiv@dividend+3
  1950  0760  0848               	movf	dtoa@n+4,w
  1951  0761  00AC               	movwf	___aodiv@dividend+4
  1952  0762  0849               	movf	dtoa@n+5,w
  1953  0763  00AD               	movwf	___aodiv@dividend+5
  1954  0764  084A               	movf	dtoa@n+6,w
  1955  0765  00AE               	movwf	___aodiv@dividend+6
  1956  0766  084B               	movf	dtoa@n+7,w
  1957  0767  00AF               	movwf	___aodiv@dividend+7
  1958  0768  3185  2585  3186   	fcall	___aodiv
  1959  076B  0140               	movlb	0	; select bank0
  1960  076C  0820               	movf	?___aodiv,w
  1961  076D  00C4               	movwf	dtoa@n
  1962  076E  0821               	movf	?___aodiv+1,w
  1963  076F  00C5               	movwf	dtoa@n+1
  1964  0770  0822               	movf	?___aodiv+2,w
  1965  0771  00C6               	movwf	dtoa@n+2
  1966  0772  0823               	movf	?___aodiv+3,w
  1967  0773  00C7               	movwf	dtoa@n+3
  1968  0774  0824               	movf	?___aodiv+4,w
  1969  0775  00C8               	movwf	dtoa@n+4
  1970  0776  0825               	movf	?___aodiv+5,w
  1971  0777  00C9               	movwf	dtoa@n+5
  1972  0778  0826               	movf	?___aodiv+6,w
  1973  0779  00CA               	movwf	dtoa@n+6
  1974  077A  0827               	movf	?___aodiv+7,w
  1975  077B  00CB               	movwf	dtoa@n+7
  1976  077C                     l711:	
  1977                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 305:     }
  1978                           
  1979                           
  1980                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1981  077C  0140               	movlb	0	; select bank0
  1982  077D  084D               	movf	dtoa@i+1,w
  1983  077E  3A80               	xorlw	128
  1984  077F  00B8               	movwf	??_dtoa
  1985  0780  3080               	movlw	128
  1986  0781  0238               	subwf	??_dtoa,w
  1987  0782  1D03               	skipz
  1988  0783  2F86               	goto	u1155
  1989  0784  3001               	movlw	1
  1990  0785  024C               	subwf	dtoa@i,w
  1991  0786                     u1155:
  1992  0786  1C03               	skipc
  1993  0787  2F89               	goto	u1151
  1994  0788  2F8A               	goto	u1150
  1995  0789                     u1151:
  1996  0789  2FB7               	goto	l1443
  1997  078A                     u1150:
  1998  078A                     l1435:
  1999  078A  0140               	movlb	0	; select bank0
  2000  078B  0844               	movf	dtoa@n,w
  2001  078C  0445               	iorwf	dtoa@n+1,w
  2002  078D  0446               	iorwf	dtoa@n+2,w
  2003  078E  0447               	iorwf	dtoa@n+3,w
  2004  078F  0448               	iorwf	dtoa@n+4,w
  2005  0790  0449               	iorwf	dtoa@n+5,w
  2006  0791  044A               	iorwf	dtoa@n+6,w
  2007  0792  044B               	iorwf	dtoa@n+7,w
  2008  0793  1D03               	skipz
  2009  0794  2F96               	goto	u1161
  2010  0795  2F97               	goto	u1160
  2011  0796                     u1161:
  2012  0796  2F14               	goto	l1425
  2013  0797                     u1160:
  2014  0797                     l1437:
  2015  0797  083F               	movf	dtoa@p+1,w
  2016  0798  3A80               	xorlw	128
  2017  0799  00B8               	movwf	??_dtoa
  2018  079A  3080               	movlw	128
  2019  079B  0238               	subwf	??_dtoa,w
  2020  079C  1D03               	skipz
  2021  079D  2FA0               	goto	u1175
  2022  079E  3001               	movlw	1
  2023  079F  023E               	subwf	dtoa@p,w
  2024  07A0                     u1175:
  2025  07A0  1803               	skipnc
  2026  07A1  2FA3               	goto	u1171
  2027  07A2  2FA4               	goto	u1170
  2028  07A3                     u1171:
  2029  07A3  2F14               	goto	l1425
  2030  07A4                     u1170:
  2031  07A4                     l1439:
  2032  07A4  0140               	movlb	0	; select bank0
  2033  07A5  0841               	movf	dtoa@w+1,w
  2034  07A6  3A80               	xorlw	128
  2035  07A7  00B8               	movwf	??_dtoa
  2036  07A8  3080               	movlw	128
  2037  07A9  0238               	subwf	??_dtoa,w
  2038  07AA  1D03               	skipz
  2039  07AB  2FAE               	goto	u1185
  2040  07AC  3001               	movlw	1
  2041  07AD  0240               	subwf	dtoa@w,w
  2042  07AE                     u1185:
  2043  07AE  1C03               	skipc
  2044  07AF  2FB1               	goto	u1181
  2045  07B0  2FB2               	goto	u1180
  2046  07B1                     u1181:
  2047  07B1  2FB7               	goto	l1443
  2048  07B2                     u1180:
  2049  07B2                     l1441:
  2050  07B2  0140               	movlb	0	; select bank0
  2051  07B3  18EC               	btfsc	_flags,1
  2052  07B4  2FB6               	goto	u1191
  2053  07B5  2FB7               	goto	u1190
  2054  07B6                     u1191:
  2055  07B6  2F14               	goto	l1425
  2056  07B7                     u1190:
  2057  07B7                     l1443:
  2058                           
  2059                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  2060  07B7  0140               	movlb	0	; select bank0
  2061  07B8  0842               	movf	dtoa@s,w
  2062  07B9  0443               	iorwf	dtoa@s+1,w
  2063  07BA  1D03               	btfss	3,2
  2064  07BB  2FBD               	goto	u1201
  2065  07BC  2FBE               	goto	u1200
  2066  07BD                     u1201:
  2067  07BD  2FC2               	goto	l1447
  2068  07BE                     u1200:
  2069  07BE                     l1445:
  2070  07BE  1D6C               	btfss	_flags,2
  2071  07BF  2FC1               	goto	u1211
  2072  07C0  2FC2               	goto	u1210
  2073  07C1                     u1211:
  2074  07C1  2FDD               	goto	l1457
  2075  07C2                     u1210:
  2076  07C2                     l1447:
  2077                           
  2078                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  2079  07C2  30FF               	movlw	255
  2080  07C3  07CC               	addwf	dtoa@i,f
  2081  07C4  30FF               	movlw	255
  2082  07C5  3DCD               	addwfc	dtoa@i+1,f
  2083  07C6                     l1449:
  2084                           
  2085                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  2086  07C6  0842               	movf	dtoa@s,w
  2087  07C7  0443               	iorwf	dtoa@s+1,w
  2088  07C8  1D03               	btfss	3,2
  2089  07C9  2FCB               	goto	u1221
  2090  07CA  2FCC               	goto	u1220
  2091  07CB                     u1221:
  2092  07CB  2FD1               	goto	l1453
  2093  07CC                     u1220:
  2094  07CC                     l1451:
  2095  07CC  302B               	movlw	43
  2096  07CD  00BB               	movwf	_dtoa$633
  2097  07CE  3000               	movlw	0
  2098  07CF  00BC               	movwf	_dtoa$633+1
  2099  07D0  2FD5               	goto	l1455
  2100  07D1                     l1453:
  2101  07D1  302D               	movlw	45
  2102  07D2  00BB               	movwf	_dtoa$633
  2103  07D3  3000               	movlw	0
  2104  07D4  00BC               	movwf	_dtoa$633+1
  2105  07D5                     l1455:
  2106  07D5  083B               	movf	_dtoa$633,w
  2107  07D6  00B8               	movwf	??_dtoa
  2108  07D7  084C               	movf	dtoa@i,w
  2109  07D8  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2110  07D9  0086               	movwf	6
  2111  07DA  0187               	clrf	7
  2112  07DB  0838               	movf	??_dtoa,w
  2113  07DC  0081               	movwf	1
  2114  07DD                     l1457:
  2115                           
  2116                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  2117  07DD  084C               	movf	dtoa@i,w
  2118  07DE  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2119  07DF  00B8               	movwf	??_dtoa
  2120  07E0  0838               	movf	??_dtoa,w
  2121  07E1  00A4               	movwf	pad@buf
  2122  07E2  0841               	movf	dtoa@w+1,w
  2123  07E3  00A6               	movwf	pad@p+1
  2124  07E4  0840               	movf	dtoa@w,w
  2125  07E5  00A5               	movwf	pad@p
  2126  07E6  083D               	movf	dtoa@fp,w
  2127  07E7  3180  20C8  3186   	fcall	_pad
  2128  07EA  0140               	movlb	0	; select bank0
  2129  07EB  0825               	movf	?_pad+1,w
  2130  07EC  00B1               	movwf	?_dtoa+1
  2131  07ED  0824               	movf	?_pad,w
  2132  07EE  00B0               	movwf	?_dtoa
  2133  07EF                     l725:
  2134  07EF  0008               	return
  2135  07F0                     __end_of_dtoa:
  2136                           
  2137                           	psect	text5
  2138  00C8                     __ptext5:	
  2139 ;; *************** function _pad *****************
  2140 ;; Defined at:
  2141 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  fp              1    wreg     PTR struct _IO_FILE
  2144 ;;		 -> sprintf@f(5), 
  2145 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2146 ;;		 -> dbuf(32), 
  2147 ;;  p               2    5[BANK0 ] int 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2150 ;;		 -> sprintf@f(5), 
  2151 ;;  w               2    9[BANK0 ] int 
  2152 ;;  i               2    7[BANK0 ] int 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2    4[BANK0 ] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2162 ;;      Params:         0       3       0       0       0       0       0       0
  2163 ;;      Locals:         0       5       0       0       0       0       0       0
  2164 ;;      Temps:          1       0       0       0       0       0       0       0
  2165 ;;      Totals:         1       8       0       0       0       0       0       0
  2166 ;;Total ram usage:        9 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    3
  2169 ;; This function calls:
  2170 ;;		_fputc
  2171 ;;		_fputs
  2172 ;;		_strlen
  2173 ;; This function is called by:
  2174 ;;		_dtoa
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _pad
  2180  00C8                     _pad:
  2181                           
  2182                           ;incstack = 0
  2183                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2184                           ;pad@fp stored from wreg
  2185  00C8  0140               	movlb	0	; select bank0
  2186  00C9  00AB               	movwf	pad@fp
  2187  00CA                     l1377:
  2188                           
  2189                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2190  00CA  1C6C               	btfss	_flags,0
  2191  00CB  28CD               	goto	u1021
  2192  00CC  28CE               	goto	u1020
  2193  00CD                     u1021:
  2194  00CD  28D6               	goto	l1381
  2195  00CE                     u1020:
  2196  00CE                     l1379:
  2197                           
  2198                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2199  00CE  082B               	movf	pad@fp,w
  2200  00CF  00FC               	movwf	??_pad
  2201  00D0  087C               	movf	??_pad,w
  2202  00D1  00F8               	movwf	fputs@fp
  2203  00D2  0824               	movf	pad@buf,w
  2204  00D3  318F  27A7  3180   	fcall	_fputs
  2205  00D6                     l1381:
  2206                           
  2207                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2208  00D6  0140               	movlb	0	; select bank0
  2209  00D7  1BA6               	btfsc	pad@p+1,7
  2210  00D8  28DA               	goto	u1031
  2211  00D9  28DB               	goto	u1030
  2212  00DA                     u1031:
  2213  00DA  28E0               	goto	l1385
  2214  00DB                     u1030:
  2215  00DB                     l1383:
  2216  00DB  0826               	movf	pad@p+1,w
  2217  00DC  00AA               	movwf	pad@w+1
  2218  00DD  0825               	movf	pad@p,w
  2219  00DE  00A9               	movwf	pad@w
  2220  00DF  28E2               	goto	l694
  2221  00E0                     l1385:
  2222  00E0  01A9               	clrf	pad@w
  2223  00E1  01AA               	clrf	pad@w+1
  2224  00E2                     l694:
  2225                           
  2226                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2227  00E2  01A7               	clrf	pad@i
  2228  00E3  01A8               	clrf	pad@i+1
  2229                           
  2230                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2231  00E4  28F6               	goto	l1391
  2232  00E5                     l1387:
  2233                           
  2234                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2235  00E5  3020               	movlw	32
  2236  00E6  00F0               	movwf	fputc@c
  2237  00E7  3000               	movlw	0
  2238  00E8  00F1               	movwf	fputc@c+1
  2239  00E9  0140               	movlb	0	; select bank0
  2240  00EA  082B               	movf	pad@fp,w
  2241  00EB  00FC               	movwf	??_pad
  2242  00EC  087C               	movf	??_pad,w
  2243  00ED  00F2               	movwf	fputc@fp
  2244  00EE  3180  2079  3180   	fcall	_fputc
  2245  00F1                     l1389:
  2246                           
  2247                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2248  00F1  3001               	movlw	1
  2249  00F2  0140               	movlb	0	; select bank0
  2250  00F3  07A7               	addwf	pad@i,f
  2251  00F4  3000               	movlw	0
  2252  00F5  3DA8               	addwfc	pad@i+1,f
  2253  00F6                     l1391:
  2254                           
  2255                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2256  00F6  0828               	movf	pad@i+1,w
  2257  00F7  3A80               	xorlw	128
  2258  00F8  00FC               	movwf	??_pad
  2259  00F9  082A               	movf	pad@w+1,w
  2260  00FA  3A80               	xorlw	128
  2261  00FB  027C               	subwf	??_pad,w
  2262  00FC  1D03               	skipz
  2263  00FD  2900               	goto	u1045
  2264  00FE  0829               	movf	pad@w,w
  2265  00FF  0227               	subwf	pad@i,w
  2266  0100                     u1045:
  2267  0100  1C03               	skipc
  2268  0101  2903               	goto	u1041
  2269  0102  2904               	goto	u1040
  2270  0103                     u1041:
  2271  0103  28E5               	goto	l1387
  2272  0104                     u1040:
  2273  0104                     l697:
  2274                           
  2275                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2276  0104  0140               	movlb	0	; select bank0
  2277  0105  186C               	btfsc	_flags,0
  2278  0106  2908               	goto	u1051
  2279  0107  2909               	goto	u1050
  2280  0108                     u1051:
  2281  0108  2911               	goto	l1395
  2282  0109                     u1050:
  2283  0109                     l1393:
  2284                           
  2285                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2286  0109  082B               	movf	pad@fp,w
  2287  010A  00FC               	movwf	??_pad
  2288  010B  087C               	movf	??_pad,w
  2289  010C  00F8               	movwf	fputs@fp
  2290  010D  0824               	movf	pad@buf,w
  2291  010E  318F  27A7  3180   	fcall	_fputs
  2292  0111                     l1395:
  2293                           
  2294                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  2295  0111  0140               	movlb	0	; select bank0
  2296  0112  0824               	movf	pad@buf,w
  2297  0113  318F  2750  3180   	fcall	_strlen
  2298  0116  0140               	movlb	0	; select bank0
  2299  0117  0829               	movf	pad@w,w
  2300  0118  0770               	addwf	?_strlen,w
  2301  0119  00A4               	movwf	?_pad
  2302  011A  082A               	movf	pad@w+1,w
  2303  011B  3D71               	addwfc	?_strlen+1,w
  2304  011C  00A5               	movwf	?_pad+1
  2305  011D                     l699:
  2306  011D  0008               	return
  2307  011E                     __end_of_pad:
  2308                           
  2309                           	psect	text6
  2310  0F50                     __ptext6:	
  2311 ;; *************** function _strlen *****************
  2312 ;; Defined at:
  2313 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  s               1    wreg     PTR const unsigned char 
  2316 ;;		 -> dbuf(32), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  s               1    4[COMMON] PTR const unsigned char 
  2319 ;;		 -> dbuf(32), 
  2320 ;;  a               1    3[COMMON] PTR const unsigned char 
  2321 ;;		 -> dbuf(32), 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2    0[COMMON] unsigned int 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2331 ;;      Params:         2       0       0       0       0       0       0       0
  2332 ;;      Locals:         2       0       0       0       0       0       0       0
  2333 ;;      Temps:          1       0       0       0       0       0       0       0
  2334 ;;      Totals:         5       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        5 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_pad
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _strlen
  2346  0F50                     _strlen:
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2350                           ;strlen@s stored from wreg
  2351  0F50  00F4               	movwf	strlen@s
  2352  0F51                     l1299:
  2353  0F51  0874               	movf	strlen@s,w
  2354  0F52  00F2               	movwf	??_strlen
  2355  0F53  0872               	movf	??_strlen,w
  2356  0F54  00F3               	movwf	strlen@a
  2357  0F55  2F5A               	goto	l1303
  2358  0F56                     l1301:
  2359  0F56  3001               	movlw	1
  2360  0F57  00F2               	movwf	??_strlen
  2361  0F58  0872               	movf	??_strlen,w
  2362  0F59  07F4               	addwf	strlen@s,f
  2363  0F5A                     l1303:
  2364  0F5A  0874               	movf	strlen@s,w
  2365  0F5B  0086               	movwf	6
  2366  0F5C  0187               	clrf	7
  2367  0F5D  0801               	movf	1,w
  2368  0F5E  1D03               	btfss	3,2
  2369  0F5F  2F61               	goto	u801
  2370  0F60  2F62               	goto	u800
  2371  0F61                     u801:
  2372  0F61  2F56               	goto	l1301
  2373  0F62                     u800:
  2374  0F62                     l1305:
  2375  0F62  0873               	movf	strlen@a,w
  2376  0F63  0274               	subwf	strlen@s,w
  2377  0F64  00F0               	movwf	?_strlen
  2378  0F65  01F1               	clrf	?_strlen+1
  2379  0F66  1BF0               	btfsc	?_strlen,7
  2380  0F67  03F1               	decf	?_strlen+1,f
  2381  0F68                     l775:
  2382  0F68  0008               	return
  2383  0F69                     __end_of_strlen:
  2384                           
  2385                           	psect	text7
  2386  0FA7                     __ptext7:	
  2387 ;; *************** function _fputs *****************
  2388 ;; Defined at:
  2389 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  s               1    wreg     PTR const unsigned char 
  2392 ;;		 -> dbuf(32), 
  2393 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2394 ;;		 -> sprintf@f(5), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2397 ;;		 -> dbuf(32), 
  2398 ;;  i               2    1[BANK0 ] int 
  2399 ;;  c               1    0[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2    8[COMMON] int 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2409 ;;      Params:         1       0       0       0       0       0       0       0
  2410 ;;      Locals:         0       4       0       0       0       0       0       0
  2411 ;;      Temps:          3       0       0       0       0       0       0       0
  2412 ;;      Totals:         4       4       0       0       0       0       0       0
  2413 ;;Total ram usage:        8 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    2
  2416 ;; This function calls:
  2417 ;;		_fputc
  2418 ;; This function is called by:
  2419 ;;		_pad
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _fputs
  2425  0FA7                     _fputs:
  2426                           
  2427                           ;incstack = 0
  2428                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2429                           ;fputs@s stored from wreg
  2430  0FA7  0140               	movlb	0	; select bank0
  2431  0FA8  00A3               	movwf	fputs@s
  2432  0FA9                     l1291:
  2433  0FA9  01A1               	clrf	fputs@i
  2434  0FAA  01A2               	clrf	fputs@i+1
  2435  0FAB  2FBF               	goto	l1297
  2436  0FAC                     l1293:
  2437  0FAC  0820               	movf	fputs@c,w
  2438  0FAD  00F9               	movwf	??_fputs
  2439  0FAE  01FA               	clrf	??_fputs+1
  2440  0FAF  0879               	movf	??_fputs,w
  2441  0FB0  00F0               	movwf	fputc@c
  2442  0FB1  087A               	movf	??_fputs+1,w
  2443  0FB2  00F1               	movwf	fputc@c+1
  2444  0FB3  0878               	movf	fputs@fp,w
  2445  0FB4  00FB               	movwf	??_fputs+2
  2446  0FB5  087B               	movf	??_fputs+2,w
  2447  0FB6  00F2               	movwf	fputc@fp
  2448  0FB7  3180  2079  318F   	fcall	_fputc
  2449  0FBA                     l1295:
  2450  0FBA  3001               	movlw	1
  2451  0FBB  0140               	movlb	0	; select bank0
  2452  0FBC  07A1               	addwf	fputs@i,f
  2453  0FBD  3000               	movlw	0
  2454  0FBE  3DA2               	addwfc	fputs@i+1,f
  2455  0FBF                     l1297:
  2456  0FBF  0821               	movf	fputs@i,w
  2457  0FC0  0723               	addwf	fputs@s,w
  2458  0FC1  00F9               	movwf	??_fputs
  2459  0FC2  0879               	movf	??_fputs,w
  2460  0FC3  0086               	movwf	6
  2461  0FC4  0187               	clrf	7
  2462  0FC5  0801               	movf	1,w
  2463  0FC6  00FA               	movwf	??_fputs+1
  2464  0FC7  087A               	movf	??_fputs+1,w
  2465  0FC8  00A0               	movwf	fputs@c
  2466  0FC9  0820               	movf	fputs@c,w
  2467  0FCA  1D03               	btfss	3,2
  2468  0FCB  2FCD               	goto	u791
  2469  0FCC  2FCE               	goto	u790
  2470  0FCD                     u791:
  2471  0FCD  2FAC               	goto	l1293
  2472  0FCE                     u790:
  2473  0FCE                     l766:
  2474  0FCE  0008               	return
  2475  0FCF                     __end_of_fputs:
  2476                           
  2477                           	psect	text8
  2478  0079                     __ptext8:	
  2479 ;; *************** function _fputc *****************
  2480 ;; Defined at:
  2481 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  c               2    0[COMMON] int 
  2484 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2485 ;;		 -> sprintf@f(5), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2    0[COMMON] int 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2497 ;;      Params:         3       0       0       0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0
  2499 ;;      Temps:          5       0       0       0       0       0       0       0
  2500 ;;      Totals:         8       0       0       0       0       0       0       0
  2501 ;;Total ram usage:        8 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    1
  2504 ;; This function calls:
  2505 ;;		_putch
  2506 ;; This function is called by:
  2507 ;;		_pad
  2508 ;;		_vfpfcnvrt
  2509 ;;		_fputs
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _fputc
  2515  0079                     _fputc:
  2516  0079                     l1275:	
  2517                           ;incstack = 0
  2518                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2519                           
  2520  0079  0872               	movf	fputc@fp,w
  2521  007A  1903               	btfsc	3,2
  2522  007B  287D               	goto	u751
  2523  007C  287E               	goto	u750
  2524  007D                     u751:
  2525  007D  2883               	goto	l1279
  2526  007E                     u750:
  2527  007E                     l1277:
  2528  007E  0872               	movf	fputc@fp,w
  2529  007F  1D03               	btfss	3,2
  2530  0080  2882               	goto	u761
  2531  0081  2883               	goto	u760
  2532  0082                     u761:
  2533  0082  2888               	goto	l1281
  2534  0083                     u760:
  2535  0083                     l1279:
  2536  0083  0870               	movf	fputc@c,w
  2537  0084  3180  2005  3180   	fcall	_putch
  2538  0087  28C7               	goto	l758
  2539  0088                     l1281:
  2540  0088  0872               	movf	fputc@fp,w
  2541  0089  3E03               	addlw	3
  2542  008A  0086               	movwf	6
  2543  008B  0187               	clrf	7
  2544  008C  0016               	moviw fsr1++
  2545  008D  0401               	iorwf	1,w
  2546  008E  1903               	btfsc	3,2
  2547  008F  2891               	goto	u771
  2548  0090  2892               	goto	u770
  2549  0091                     u771:
  2550  0091  28AF               	goto	l1285
  2551  0092                     u770:
  2552  0092                     l1283:
  2553  0092  0872               	movf	fputc@fp,w
  2554  0093  3E03               	addlw	3
  2555  0094  0086               	movwf	6
  2556  0095  0187               	clrf	7
  2557  0096  3F40               	moviw [0]fsr1
  2558  0097  00F3               	movwf	??_fputc
  2559  0098  3F41               	moviw [1]fsr1
  2560  0099  00F4               	movwf	??_fputc+1
  2561  009A  0A72               	incf	fputc@fp,w
  2562  009B  0086               	movwf	6
  2563  009C  0187               	clrf	7
  2564  009D  3F40               	moviw [0]fsr1
  2565  009E  00F5               	movwf	??_fputc+2
  2566  009F  3F41               	moviw [1]fsr1
  2567  00A0  00F6               	movwf	??_fputc+3
  2568  00A1  0876               	movf	??_fputc+3,w
  2569  00A2  3A80               	xorlw	128
  2570  00A3  00F7               	movwf	??_fputc+4
  2571  00A4  0874               	movf	??_fputc+1,w
  2572  00A5  3A80               	xorlw	128
  2573  00A6  0277               	subwf	??_fputc+4,w
  2574  00A7  1D03               	skipz
  2575  00A8  28AB               	goto	u785
  2576  00A9  0873               	movf	??_fputc,w
  2577  00AA  0275               	subwf	??_fputc+2,w
  2578  00AB                     u785:
  2579  00AB  1803               	skipnc
  2580  00AC  28AE               	goto	u781
  2581  00AD  28AF               	goto	u780
  2582  00AE                     u781:
  2583  00AE  28C7               	goto	l758
  2584  00AF                     u780:
  2585  00AF                     l1285:
  2586  00AF  0870               	movf	fputc@c,w
  2587  00B0  00F3               	movwf	??_fputc
  2588  00B1  0872               	movf	fputc@fp,w
  2589  00B2  0086               	movwf	6
  2590  00B3  0187               	clrf	7
  2591  00B4  0A72               	incf	fputc@fp,w
  2592  00B5  0084               	movwf	4
  2593  00B6  0185               	clrf	5
  2594  00B7  0800               	movf	0,w
  2595  00B8  0701               	addwf	1,w
  2596  00B9  00F4               	movwf	??_fputc+1
  2597  00BA  0874               	movf	??_fputc+1,w
  2598  00BB  0086               	movwf	6
  2599  00BC  0187               	clrf	7
  2600  00BD  0873               	movf	??_fputc,w
  2601  00BE  0081               	movwf	1
  2602  00BF                     l1287:
  2603  00BF  0A72               	incf	fputc@fp,w
  2604  00C0  0086               	movwf	6
  2605  00C1  0187               	clrf	7
  2606  00C2  3001               	movlw	1
  2607  00C3  0781               	addwf	1,f
  2608  00C4  3141               	addfsr 1,1
  2609  00C5  1803               	skipnc
  2610  00C6  0A81               	incf	1,f
  2611  00C7                     l758:
  2612  00C7  0008               	return
  2613  00C8                     __end_of_fputc:
  2614                           
  2615                           	psect	text9
  2616  0005                     __ptext9:	
  2617 ;; *************** function _putch *****************
  2618 ;; Defined at:
  2619 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  c               1    wreg     unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  c               1    0[COMMON] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2633 ;;      Params:         0       0       0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_fputc
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function _putch
  2648  0005                     _putch:
  2649  0005                     l769:	
  2650                           ;incstack = 0
  2651                           ; Regs used in _putch: [wreg]
  2652                           
  2653  0005  0008               	return
  2654  0006                     __end_of_putch:
  2655                           
  2656                           	psect	text10
  2657  0F69                     __ptext10:	
  2658 ;; *************** function _abs *****************
  2659 ;; Defined at:
  2660 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  a               2    3[COMMON] int 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    3[COMMON] int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2674 ;;      Params:         2       0       0       0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0
  2676 ;;      Temps:          2       0       0       0       0       0       0       0
  2677 ;;      Totals:         4       0       0       0       0       0       0       0
  2678 ;;Total ram usage:        4 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_dtoa
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _abs
  2689  0F69                     _abs:
  2690  0F69                     l1399:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _abs: [wreg+status,2+status,0]
  2693                           
  2694  0F69  0874               	movf	abs@a+1,w
  2695  0F6A  3A80               	xorlw	128
  2696  0F6B  00F5               	movwf	??_abs
  2697  0F6C  3080               	movlw	128
  2698  0F6D  0275               	subwf	??_abs,w
  2699  0F6E  1D03               	skipz
  2700  0F6F  2F72               	goto	u1065
  2701  0F70  3001               	movlw	1
  2702  0F71  0273               	subwf	abs@a,w
  2703  0F72                     u1065:
  2704  0F72  1803               	skipnc
  2705  0F73  2F75               	goto	u1061
  2706  0F74  2F76               	goto	u1060
  2707  0F75                     u1061:
  2708  0F75  2F82               	goto	l743
  2709  0F76                     u1060:
  2710  0F76                     l1401:
  2711  0F76  0973               	comf	abs@a,w
  2712  0F77  00F5               	movwf	??_abs
  2713  0F78  0974               	comf	abs@a+1,w
  2714  0F79  00F6               	movwf	??_abs+1
  2715  0F7A  0AF5               	incf	??_abs,f
  2716  0F7B  1903               	skipnz
  2717  0F7C  0AF6               	incf	??_abs+1,f
  2718  0F7D  0875               	movf	??_abs,w
  2719  0F7E  00F3               	movwf	?_abs
  2720  0F7F  0876               	movf	??_abs+1,w
  2721  0F80  00F4               	movwf	?_abs+1
  2722  0F81  2F82               	goto	l746
  2723  0F82                     l743:
  2724  0F82                     l746:
  2725  0F82  0008               	return
  2726  0F83                     __end_of_abs:
  2727                           
  2728                           	psect	text11
  2729  03AC                     __ptext11:	
  2730 ;; *************** function ___aomod *****************
  2731 ;; Defined at:
  2732 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  divisor         8    0[BANK0 ] long long 
  2735 ;;  dividend        8    8[BANK0 ] long long 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  sign            1    2[COMMON] unsigned char 
  2738 ;;  counter         1    1[COMMON] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  8    0[BANK0 ] long long 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2748 ;;      Params:         0      16       0       0       0       0       0       0
  2749 ;;      Locals:         2       0       0       0       0       0       0       0
  2750 ;;      Temps:          1       0       0       0       0       0       0       0
  2751 ;;      Totals:         3      16       0       0       0       0       0       0
  2752 ;;Total ram usage:       19 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_dtoa
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           
  2762                           ;psect for function ___aomod
  2763  03AC                     ___aomod:
  2764  03AC                     l1347:	
  2765                           ;incstack = 0
  2766                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  2767                           
  2768  03AC  01F2               	clrf	___aomod@sign
  2769  03AD                     l1349:
  2770  03AD  3028               	movlw	low ___aomod@dividend
  2771  03AE  0086               	movwf	6
  2772  03AF  3000               	movlw	high ___aomod@dividend
  2773  03B0  0087               	movwf	7
  2774  03B1  3F47               	moviw [7]fsr1
  2775  03B2  00F0               	movwf	??___aomod
  2776  03B3  1FF0               	btfss	??___aomod,7
  2777  03B4  2BB6               	goto	u921
  2778  03B5  2BB7               	goto	u920
  2779  03B6                     u921:
  2780  03B6  2BD8               	goto	l1353
  2781  03B7                     u920:
  2782  03B7                     l1351:
  2783  03B7  0140               	movlb	0	; select bank0
  2784  03B8  09A8               	comf	___aomod@dividend,f
  2785  03B9  09A9               	comf	___aomod@dividend+1,f
  2786  03BA  09AA               	comf	___aomod@dividend+2,f
  2787  03BB  09AB               	comf	___aomod@dividend+3,f
  2788  03BC  09AC               	comf	___aomod@dividend+4,f
  2789  03BD  09AD               	comf	___aomod@dividend+5,f
  2790  03BE  09AE               	comf	___aomod@dividend+6,f
  2791  03BF  09AF               	comf	___aomod@dividend+7,f
  2792  03C0  0AA8               	incf	___aomod@dividend,f
  2793  03C1  1D03               	skipz
  2794  03C2  2BD6               	goto	u93lld
  2795  03C3  0AA9               	incf	___aomod@dividend+1,f
  2796  03C4  1D03               	skipz
  2797  03C5  2BD6               	goto	u93lld
  2798  03C6  0AAA               	incf	___aomod@dividend+2,f
  2799  03C7  1D03               	skipz
  2800  03C8  2BD6               	goto	u93lld
  2801  03C9  0AAB               	incf	___aomod@dividend+3,f
  2802  03CA  1D03               	skipz
  2803  03CB  2BD6               	goto	u93lld
  2804  03CC  0AAC               	incf	___aomod@dividend+4,f
  2805  03CD  1D03               	skipz
  2806  03CE  2BD6               	goto	u93lld
  2807  03CF  0AAD               	incf	___aomod@dividend+5,f
  2808  03D0  1D03               	skipz
  2809  03D1  2BD6               	goto	u93lld
  2810  03D2  0AAE               	incf	___aomod@dividend+6,f
  2811  03D3  1D03               	skipz
  2812  03D4  2BD6               	goto	u93lld
  2813  03D5  0AAF               	incf	___aomod@dividend+7,f
  2814  03D6                     u93lld:
  2815  03D6  01F2               	clrf	___aomod@sign
  2816  03D7  0AF2               	incf	___aomod@sign,f
  2817  03D8                     l1353:
  2818  03D8  3020               	movlw	low ___aomod@divisor
  2819  03D9  0086               	movwf	6
  2820  03DA  3000               	movlw	high ___aomod@divisor
  2821  03DB  0087               	movwf	7
  2822  03DC  3F47               	moviw [7]fsr1
  2823  03DD  00F0               	movwf	??___aomod
  2824  03DE  1FF0               	btfss	??___aomod,7
  2825  03DF  2BE1               	goto	u941
  2826  03E0  2BE2               	goto	u940
  2827  03E1                     u941:
  2828  03E1  2C01               	goto	l1357
  2829  03E2                     u940:
  2830  03E2                     l1355:
  2831  03E2  0140               	movlb	0	; select bank0
  2832  03E3  09A0               	comf	___aomod@divisor,f
  2833  03E4  09A1               	comf	___aomod@divisor+1,f
  2834  03E5  09A2               	comf	___aomod@divisor+2,f
  2835  03E6  09A3               	comf	___aomod@divisor+3,f
  2836  03E7  09A4               	comf	___aomod@divisor+4,f
  2837  03E8  09A5               	comf	___aomod@divisor+5,f
  2838  03E9  09A6               	comf	___aomod@divisor+6,f
  2839  03EA  09A7               	comf	___aomod@divisor+7,f
  2840  03EB  0AA0               	incf	___aomod@divisor,f
  2841  03EC  1D03               	skipz
  2842  03ED  2C01               	goto	u95lld
  2843  03EE  0AA1               	incf	___aomod@divisor+1,f
  2844  03EF  1D03               	skipz
  2845  03F0  2C01               	goto	u95lld
  2846  03F1  0AA2               	incf	___aomod@divisor+2,f
  2847  03F2  1D03               	skipz
  2848  03F3  2C01               	goto	u95lld
  2849  03F4  0AA3               	incf	___aomod@divisor+3,f
  2850  03F5  1D03               	skipz
  2851  03F6  2C01               	goto	u95lld
  2852  03F7  0AA4               	incf	___aomod@divisor+4,f
  2853  03F8  1D03               	skipz
  2854  03F9  2C01               	goto	u95lld
  2855  03FA  0AA5               	incf	___aomod@divisor+5,f
  2856  03FB  1D03               	skipz
  2857  03FC  2C01               	goto	u95lld
  2858  03FD  0AA6               	incf	___aomod@divisor+6,f
  2859  03FE  1D03               	skipz
  2860  03FF  2C01               	goto	u95lld
  2861  0400  0AA7               	incf	___aomod@divisor+7,f
  2862  0401                     u95lld:
  2863  0401                     l1357:
  2864  0401  0140               	movlb	0	; select bank0
  2865  0402  0820               	movf	___aomod@divisor,w
  2866  0403  0421               	iorwf	___aomod@divisor+1,w
  2867  0404  0422               	iorwf	___aomod@divisor+2,w
  2868  0405  0423               	iorwf	___aomod@divisor+3,w
  2869  0406  0424               	iorwf	___aomod@divisor+4,w
  2870  0407  0425               	iorwf	___aomod@divisor+5,w
  2871  0408  0426               	iorwf	___aomod@divisor+6,w
  2872  0409  0427               	iorwf	___aomod@divisor+7,w
  2873  040A  1903               	skipnz
  2874  040B  2C0D               	goto	u961
  2875  040C  2C0E               	goto	u960
  2876  040D                     u961:
  2877  040D  2C61               	goto	l1373
  2878  040E                     u960:
  2879  040E                     l1359:
  2880  040E  01F1               	clrf	___aomod@counter
  2881  040F  0AF1               	incf	___aomod@counter,f
  2882  0410  2C1D               	goto	l1365
  2883  0411                     l1361:
  2884  0411  35A0               	lslf	___aomod@divisor,f
  2885  0412  0DA1               	rlf	___aomod@divisor+1,f
  2886  0413  0DA2               	rlf	___aomod@divisor+2,f
  2887  0414  0DA3               	rlf	___aomod@divisor+3,f
  2888  0415  0DA4               	rlf	___aomod@divisor+4,f
  2889  0416  0DA5               	rlf	___aomod@divisor+5,f
  2890  0417  0DA6               	rlf	___aomod@divisor+6,f
  2891  0418  0DA7               	rlf	___aomod@divisor+7,f
  2892  0419                     l1363:
  2893  0419  3001               	movlw	1
  2894  041A  00F0               	movwf	??___aomod
  2895  041B  0870               	movf	??___aomod,w
  2896  041C  07F1               	addwf	___aomod@counter,f
  2897  041D                     l1365:
  2898  041D  1FA7               	btfss	___aomod@divisor+7,7
  2899  041E  2C20               	goto	u971
  2900  041F  2C21               	goto	u970
  2901  0420                     u971:
  2902  0420  2C11               	goto	l1361
  2903  0421                     u970:
  2904  0421                     l1367:
  2905  0421  0827               	movf	___aomod@divisor+7,w
  2906  0422  022F               	subwf	___aomod@dividend+7,w
  2907  0423  1D03               	skipz
  2908  0424  2C3F               	goto	u985
  2909  0425  0826               	movf	___aomod@divisor+6,w
  2910  0426  022E               	subwf	___aomod@dividend+6,w
  2911  0427  1D03               	skipz
  2912  0428  2C3F               	goto	u985
  2913  0429  0825               	movf	___aomod@divisor+5,w
  2914  042A  022D               	subwf	___aomod@dividend+5,w
  2915  042B  1D03               	skipz
  2916  042C  2C3F               	goto	u985
  2917  042D  0824               	movf	___aomod@divisor+4,w
  2918  042E  022C               	subwf	___aomod@dividend+4,w
  2919  042F  1D03               	skipz
  2920  0430  2C3F               	goto	u985
  2921  0431  0823               	movf	___aomod@divisor+3,w
  2922  0432  022B               	subwf	___aomod@dividend+3,w
  2923  0433  1D03               	skipz
  2924  0434  2C3F               	goto	u985
  2925  0435  0822               	movf	___aomod@divisor+2,w
  2926  0436  022A               	subwf	___aomod@dividend+2,w
  2927  0437  1D03               	skipz
  2928  0438  2C3F               	goto	u985
  2929  0439  0821               	movf	___aomod@divisor+1,w
  2930  043A  0229               	subwf	___aomod@dividend+1,w
  2931  043B  1D03               	skipz
  2932  043C  2C3F               	goto	u985
  2933  043D  0820               	movf	___aomod@divisor,w
  2934  043E  0228               	subwf	___aomod@dividend,w
  2935  043F                     u985:
  2936  043F  1C03               	skipc
  2937  0440  2C42               	goto	u981
  2938  0441  2C43               	goto	u980
  2939  0442                     u981:
  2940  0442  2C53               	goto	l1371
  2941  0443                     u980:
  2942  0443                     l1369:
  2943  0443  0820               	movf	___aomod@divisor,w
  2944  0444  02A8               	subwf	___aomod@dividend,f
  2945  0445  0821               	movf	___aomod@divisor+1,w
  2946  0446  3BA9               	subwfb	___aomod@dividend+1,f
  2947  0447  0822               	movf	___aomod@divisor+2,w
  2948  0448  3BAA               	subwfb	___aomod@dividend+2,f
  2949  0449  0823               	movf	___aomod@divisor+3,w
  2950  044A  3BAB               	subwfb	___aomod@dividend+3,f
  2951  044B  0824               	movf	___aomod@divisor+4,w
  2952  044C  3BAC               	subwfb	___aomod@dividend+4,f
  2953  044D  0825               	movf	___aomod@divisor+5,w
  2954  044E  3BAD               	subwfb	___aomod@dividend+5,f
  2955  044F  0826               	movf	___aomod@divisor+6,w
  2956  0450  3BAE               	subwfb	___aomod@dividend+6,f
  2957  0451  0827               	movf	___aomod@divisor+7,w
  2958  0452  3BAF               	subwfb	___aomod@dividend+7,f
  2959  0453                     l1371:
  2960  0453  36A7               	lsrf	___aomod@divisor+7,f
  2961  0454  0CA6               	rrf	___aomod@divisor+6,f
  2962  0455  0CA5               	rrf	___aomod@divisor+5,f
  2963  0456  0CA4               	rrf	___aomod@divisor+4,f
  2964  0457  0CA3               	rrf	___aomod@divisor+3,f
  2965  0458  0CA2               	rrf	___aomod@divisor+2,f
  2966  0459  0CA1               	rrf	___aomod@divisor+1,f
  2967  045A  0CA0               	rrf	___aomod@divisor,f
  2968  045B  3001               	movlw	1
  2969  045C  02F1               	subwf	___aomod@counter,f
  2970  045D  1D03               	btfss	3,2
  2971  045E  2C60               	goto	u991
  2972  045F  2C61               	goto	u990
  2973  0460                     u991:
  2974  0460  2C21               	goto	l1367
  2975  0461                     u990:
  2976  0461                     l1373:
  2977  0461  0872               	movf	___aomod@sign,w
  2978  0462  1903               	btfsc	3,2
  2979  0463  2C65               	goto	u1001
  2980  0464  2C66               	goto	u1000
  2981  0465                     u1001:
  2982  0465  2C84               	goto	l317
  2983  0466                     u1000:
  2984  0466                     l1375:
  2985  0466  09A8               	comf	___aomod@dividend,f
  2986  0467  09A9               	comf	___aomod@dividend+1,f
  2987  0468  09AA               	comf	___aomod@dividend+2,f
  2988  0469  09AB               	comf	___aomod@dividend+3,f
  2989  046A  09AC               	comf	___aomod@dividend+4,f
  2990  046B  09AD               	comf	___aomod@dividend+5,f
  2991  046C  09AE               	comf	___aomod@dividend+6,f
  2992  046D  09AF               	comf	___aomod@dividend+7,f
  2993  046E  0AA8               	incf	___aomod@dividend,f
  2994  046F  1D03               	skipz
  2995  0470  2C84               	goto	u101lld
  2996  0471  0AA9               	incf	___aomod@dividend+1,f
  2997  0472  1D03               	skipz
  2998  0473  2C84               	goto	u101lld
  2999  0474  0AAA               	incf	___aomod@dividend+2,f
  3000  0475  1D03               	skipz
  3001  0476  2C84               	goto	u101lld
  3002  0477  0AAB               	incf	___aomod@dividend+3,f
  3003  0478  1D03               	skipz
  3004  0479  2C84               	goto	u101lld
  3005  047A  0AAC               	incf	___aomod@dividend+4,f
  3006  047B  1D03               	skipz
  3007  047C  2C84               	goto	u101lld
  3008  047D  0AAD               	incf	___aomod@dividend+5,f
  3009  047E  1D03               	skipz
  3010  047F  2C84               	goto	u101lld
  3011  0480  0AAE               	incf	___aomod@dividend+6,f
  3012  0481  1D03               	skipz
  3013  0482  2C84               	goto	u101lld
  3014  0483  0AAF               	incf	___aomod@dividend+7,f
  3015  0484                     u101lld:
  3016  0484                     l317:
  3017  0484  0140               	movlb	0	; select bank0
  3018  0485  0828               	movf	___aomod@dividend,w
  3019  0486  00A0               	movwf	?___aomod
  3020  0487  0829               	movf	___aomod@dividend+1,w
  3021  0488  00A1               	movwf	?___aomod+1
  3022  0489  082A               	movf	___aomod@dividend+2,w
  3023  048A  00A2               	movwf	?___aomod+2
  3024  048B  082B               	movf	___aomod@dividend+3,w
  3025  048C  00A3               	movwf	?___aomod+3
  3026  048D  082C               	movf	___aomod@dividend+4,w
  3027  048E  00A4               	movwf	?___aomod+4
  3028  048F  082D               	movf	___aomod@dividend+5,w
  3029  0490  00A5               	movwf	?___aomod+5
  3030  0491  082E               	movf	___aomod@dividend+6,w
  3031  0492  00A6               	movwf	?___aomod+6
  3032  0493  082F               	movf	___aomod@dividend+7,w
  3033  0494  00A7               	movwf	?___aomod+7
  3034  0495                     l318:
  3035  0495  0008               	return
  3036  0496                     __end_of___aomod:
  3037                           
  3038                           	psect	text12
  3039  0585                     __ptext12:	
  3040 ;; *************** function ___aodiv *****************
  3041 ;; Defined at:
  3042 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  divisor         8    0[BANK0 ] long long 
  3045 ;;  dividend        8    8[BANK0 ] long long 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  quotient        8    3[COMMON] long long 
  3048 ;;  sign            1    2[COMMON] unsigned char 
  3049 ;;  counter         1    1[COMMON] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  8    0[BANK0 ] long long 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3059 ;;      Params:         0      16       0       0       0       0       0       0
  3060 ;;      Locals:        10       0       0       0       0       0       0       0
  3061 ;;      Temps:          1       0       0       0       0       0       0       0
  3062 ;;      Totals:        11      16       0       0       0       0       0       0
  3063 ;;Total ram usage:       27 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_dtoa
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function ___aodiv
  3074  0585                     ___aodiv:
  3075  0585                     l1309:	
  3076                           ;incstack = 0
  3077                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3078                           
  3079  0585  01F2               	clrf	___aodiv@sign
  3080  0586                     l1311:
  3081  0586  3020               	movlw	low ___aodiv@divisor
  3082  0587  0086               	movwf	6
  3083  0588  3000               	movlw	high ___aodiv@divisor
  3084  0589  0087               	movwf	7
  3085  058A  3F47               	moviw [7]fsr1
  3086  058B  00F0               	movwf	??___aodiv
  3087  058C  1FF0               	btfss	??___aodiv,7
  3088  058D  2D8F               	goto	u811
  3089  058E  2D90               	goto	u810
  3090  058F                     u811:
  3091  058F  2DB1               	goto	l1315
  3092  0590                     u810:
  3093  0590                     l1313:
  3094  0590  0140               	movlb	0	; select bank0
  3095  0591  09A0               	comf	___aodiv@divisor,f
  3096  0592  09A1               	comf	___aodiv@divisor+1,f
  3097  0593  09A2               	comf	___aodiv@divisor+2,f
  3098  0594  09A3               	comf	___aodiv@divisor+3,f
  3099  0595  09A4               	comf	___aodiv@divisor+4,f
  3100  0596  09A5               	comf	___aodiv@divisor+5,f
  3101  0597  09A6               	comf	___aodiv@divisor+6,f
  3102  0598  09A7               	comf	___aodiv@divisor+7,f
  3103  0599  0AA0               	incf	___aodiv@divisor,f
  3104  059A  1D03               	skipz
  3105  059B  2DAF               	goto	u82lld
  3106  059C  0AA1               	incf	___aodiv@divisor+1,f
  3107  059D  1D03               	skipz
  3108  059E  2DAF               	goto	u82lld
  3109  059F  0AA2               	incf	___aodiv@divisor+2,f
  3110  05A0  1D03               	skipz
  3111  05A1  2DAF               	goto	u82lld
  3112  05A2  0AA3               	incf	___aodiv@divisor+3,f
  3113  05A3  1D03               	skipz
  3114  05A4  2DAF               	goto	u82lld
  3115  05A5  0AA4               	incf	___aodiv@divisor+4,f
  3116  05A6  1D03               	skipz
  3117  05A7  2DAF               	goto	u82lld
  3118  05A8  0AA5               	incf	___aodiv@divisor+5,f
  3119  05A9  1D03               	skipz
  3120  05AA  2DAF               	goto	u82lld
  3121  05AB  0AA6               	incf	___aodiv@divisor+6,f
  3122  05AC  1D03               	skipz
  3123  05AD  2DAF               	goto	u82lld
  3124  05AE  0AA7               	incf	___aodiv@divisor+7,f
  3125  05AF                     u82lld:
  3126  05AF  01F2               	clrf	___aodiv@sign
  3127  05B0  0AF2               	incf	___aodiv@sign,f
  3128  05B1                     l1315:
  3129  05B1  3028               	movlw	low ___aodiv@dividend
  3130  05B2  0086               	movwf	6
  3131  05B3  3000               	movlw	high ___aodiv@dividend
  3132  05B4  0087               	movwf	7
  3133  05B5  3F47               	moviw [7]fsr1
  3134  05B6  00F0               	movwf	??___aodiv
  3135  05B7  1FF0               	btfss	??___aodiv,7
  3136  05B8  2DBA               	goto	u831
  3137  05B9  2DBB               	goto	u830
  3138  05BA                     u831:
  3139  05BA  2DDE               	goto	l1321
  3140  05BB                     u830:
  3141  05BB                     l1317:
  3142  05BB  0140               	movlb	0	; select bank0
  3143  05BC  09A8               	comf	___aodiv@dividend,f
  3144  05BD  09A9               	comf	___aodiv@dividend+1,f
  3145  05BE  09AA               	comf	___aodiv@dividend+2,f
  3146  05BF  09AB               	comf	___aodiv@dividend+3,f
  3147  05C0  09AC               	comf	___aodiv@dividend+4,f
  3148  05C1  09AD               	comf	___aodiv@dividend+5,f
  3149  05C2  09AE               	comf	___aodiv@dividend+6,f
  3150  05C3  09AF               	comf	___aodiv@dividend+7,f
  3151  05C4  0AA8               	incf	___aodiv@dividend,f
  3152  05C5  1D03               	skipz
  3153  05C6  2DDA               	goto	u84lld
  3154  05C7  0AA9               	incf	___aodiv@dividend+1,f
  3155  05C8  1D03               	skipz
  3156  05C9  2DDA               	goto	u84lld
  3157  05CA  0AAA               	incf	___aodiv@dividend+2,f
  3158  05CB  1D03               	skipz
  3159  05CC  2DDA               	goto	u84lld
  3160  05CD  0AAB               	incf	___aodiv@dividend+3,f
  3161  05CE  1D03               	skipz
  3162  05CF  2DDA               	goto	u84lld
  3163  05D0  0AAC               	incf	___aodiv@dividend+4,f
  3164  05D1  1D03               	skipz
  3165  05D2  2DDA               	goto	u84lld
  3166  05D3  0AAD               	incf	___aodiv@dividend+5,f
  3167  05D4  1D03               	skipz
  3168  05D5  2DDA               	goto	u84lld
  3169  05D6  0AAE               	incf	___aodiv@dividend+6,f
  3170  05D7  1D03               	skipz
  3171  05D8  2DDA               	goto	u84lld
  3172  05D9  0AAF               	incf	___aodiv@dividend+7,f
  3173  05DA                     u84lld:
  3174  05DA                     l1319:
  3175  05DA  3001               	movlw	1
  3176  05DB  00F0               	movwf	??___aodiv
  3177  05DC  0870               	movf	??___aodiv,w
  3178  05DD  06F2               	xorwf	___aodiv@sign,f
  3179  05DE                     l1321:
  3180  05DE  3073               	movlw	low ___aodiv@quotient
  3181  05DF  0086               	movwf	6
  3182  05E0  3000               	movlw	high ___aodiv@quotient
  3183  05E1  0087               	movwf	7
  3184  05E2  3008               	movlw	8
  3185  05E3  00F0               	movwf	??___aodiv
  3186  05E4  3000               	movlw	0
  3187  05E5                     u850:
  3188  05E5  001E               	movwi fsr1++
  3189  05E6  0BF0               	decfsz	??___aodiv,f
  3190  05E7  2DE5               	goto	u850
  3191  05E8                     l1323:
  3192  05E8  0140               	movlb	0	; select bank0
  3193  05E9  0820               	movf	___aodiv@divisor,w
  3194  05EA  0421               	iorwf	___aodiv@divisor+1,w
  3195  05EB  0422               	iorwf	___aodiv@divisor+2,w
  3196  05EC  0423               	iorwf	___aodiv@divisor+3,w
  3197  05ED  0424               	iorwf	___aodiv@divisor+4,w
  3198  05EE  0425               	iorwf	___aodiv@divisor+5,w
  3199  05EF  0426               	iorwf	___aodiv@divisor+6,w
  3200  05F0  0427               	iorwf	___aodiv@divisor+7,w
  3201  05F1  1903               	skipnz
  3202  05F2  2DF4               	goto	u861
  3203  05F3  2DF5               	goto	u860
  3204  05F4                     u861:
  3205  05F4  2E51               	goto	l1343
  3206  05F5                     u860:
  3207  05F5                     l1325:
  3208  05F5  01F1               	clrf	___aodiv@counter
  3209  05F6  0AF1               	incf	___aodiv@counter,f
  3210  05F7  2E04               	goto	l1331
  3211  05F8                     l1327:
  3212  05F8  35A0               	lslf	___aodiv@divisor,f
  3213  05F9  0DA1               	rlf	___aodiv@divisor+1,f
  3214  05FA  0DA2               	rlf	___aodiv@divisor+2,f
  3215  05FB  0DA3               	rlf	___aodiv@divisor+3,f
  3216  05FC  0DA4               	rlf	___aodiv@divisor+4,f
  3217  05FD  0DA5               	rlf	___aodiv@divisor+5,f
  3218  05FE  0DA6               	rlf	___aodiv@divisor+6,f
  3219  05FF  0DA7               	rlf	___aodiv@divisor+7,f
  3220  0600                     l1329:
  3221  0600  3001               	movlw	1
  3222  0601  00F0               	movwf	??___aodiv
  3223  0602  0870               	movf	??___aodiv,w
  3224  0603  07F1               	addwf	___aodiv@counter,f
  3225  0604                     l1331:
  3226  0604  1FA7               	btfss	___aodiv@divisor+7,7
  3227  0605  2E07               	goto	u871
  3228  0606  2E08               	goto	u870
  3229  0607                     u871:
  3230  0607  2DF8               	goto	l1327
  3231  0608                     u870:
  3232  0608                     l1333:
  3233  0608  35F3               	lslf	___aodiv@quotient,f
  3234  0609  0DF4               	rlf	___aodiv@quotient+1,f
  3235  060A  0DF5               	rlf	___aodiv@quotient+2,f
  3236  060B  0DF6               	rlf	___aodiv@quotient+3,f
  3237  060C  0DF7               	rlf	___aodiv@quotient+4,f
  3238  060D  0DF8               	rlf	___aodiv@quotient+5,f
  3239  060E  0DF9               	rlf	___aodiv@quotient+6,f
  3240  060F  0DFA               	rlf	___aodiv@quotient+7,f
  3241  0610                     l1335:
  3242  0610  0827               	movf	___aodiv@divisor+7,w
  3243  0611  022F               	subwf	___aodiv@dividend+7,w
  3244  0612  1D03               	skipz
  3245  0613  2E2E               	goto	u885
  3246  0614  0826               	movf	___aodiv@divisor+6,w
  3247  0615  022E               	subwf	___aodiv@dividend+6,w
  3248  0616  1D03               	skipz
  3249  0617  2E2E               	goto	u885
  3250  0618  0825               	movf	___aodiv@divisor+5,w
  3251  0619  022D               	subwf	___aodiv@dividend+5,w
  3252  061A  1D03               	skipz
  3253  061B  2E2E               	goto	u885
  3254  061C  0824               	movf	___aodiv@divisor+4,w
  3255  061D  022C               	subwf	___aodiv@dividend+4,w
  3256  061E  1D03               	skipz
  3257  061F  2E2E               	goto	u885
  3258  0620  0823               	movf	___aodiv@divisor+3,w
  3259  0621  022B               	subwf	___aodiv@dividend+3,w
  3260  0622  1D03               	skipz
  3261  0623  2E2E               	goto	u885
  3262  0624  0822               	movf	___aodiv@divisor+2,w
  3263  0625  022A               	subwf	___aodiv@dividend+2,w
  3264  0626  1D03               	skipz
  3265  0627  2E2E               	goto	u885
  3266  0628  0821               	movf	___aodiv@divisor+1,w
  3267  0629  0229               	subwf	___aodiv@dividend+1,w
  3268  062A  1D03               	skipz
  3269  062B  2E2E               	goto	u885
  3270  062C  0820               	movf	___aodiv@divisor,w
  3271  062D  0228               	subwf	___aodiv@dividend,w
  3272  062E                     u885:
  3273  062E  1C03               	skipc
  3274  062F  2E31               	goto	u881
  3275  0630  2E32               	goto	u880
  3276  0631                     u881:
  3277  0631  2E43               	goto	l1341
  3278  0632                     u880:
  3279  0632                     l1337:
  3280  0632  0820               	movf	___aodiv@divisor,w
  3281  0633  02A8               	subwf	___aodiv@dividend,f
  3282  0634  0821               	movf	___aodiv@divisor+1,w
  3283  0635  3BA9               	subwfb	___aodiv@dividend+1,f
  3284  0636  0822               	movf	___aodiv@divisor+2,w
  3285  0637  3BAA               	subwfb	___aodiv@dividend+2,f
  3286  0638  0823               	movf	___aodiv@divisor+3,w
  3287  0639  3BAB               	subwfb	___aodiv@dividend+3,f
  3288  063A  0824               	movf	___aodiv@divisor+4,w
  3289  063B  3BAC               	subwfb	___aodiv@dividend+4,f
  3290  063C  0825               	movf	___aodiv@divisor+5,w
  3291  063D  3BAD               	subwfb	___aodiv@dividend+5,f
  3292  063E  0826               	movf	___aodiv@divisor+6,w
  3293  063F  3BAE               	subwfb	___aodiv@dividend+6,f
  3294  0640  0827               	movf	___aodiv@divisor+7,w
  3295  0641  3BAF               	subwfb	___aodiv@dividend+7,f
  3296  0642                     l1339:
  3297  0642  1473               	bsf	___aodiv@quotient,0
  3298  0643                     l1341:
  3299  0643  36A7               	lsrf	___aodiv@divisor+7,f
  3300  0644  0CA6               	rrf	___aodiv@divisor+6,f
  3301  0645  0CA5               	rrf	___aodiv@divisor+5,f
  3302  0646  0CA4               	rrf	___aodiv@divisor+4,f
  3303  0647  0CA3               	rrf	___aodiv@divisor+3,f
  3304  0648  0CA2               	rrf	___aodiv@divisor+2,f
  3305  0649  0CA1               	rrf	___aodiv@divisor+1,f
  3306  064A  0CA0               	rrf	___aodiv@divisor,f
  3307  064B  3001               	movlw	1
  3308  064C  02F1               	subwf	___aodiv@counter,f
  3309  064D  1D03               	btfss	3,2
  3310  064E  2E50               	goto	u891
  3311  064F  2E51               	goto	u890
  3312  0650                     u891:
  3313  0650  2E08               	goto	l1333
  3314  0651                     u890:
  3315  0651                     l1343:
  3316  0651  0872               	movf	___aodiv@sign,w
  3317  0652  1903               	btfsc	3,2
  3318  0653  2E55               	goto	u901
  3319  0654  2E56               	goto	u900
  3320  0655                     u901:
  3321  0655  2E74               	goto	l304
  3322  0656                     u900:
  3323  0656                     l1345:
  3324  0656  09F3               	comf	___aodiv@quotient,f
  3325  0657  09F4               	comf	___aodiv@quotient+1,f
  3326  0658  09F5               	comf	___aodiv@quotient+2,f
  3327  0659  09F6               	comf	___aodiv@quotient+3,f
  3328  065A  09F7               	comf	___aodiv@quotient+4,f
  3329  065B  09F8               	comf	___aodiv@quotient+5,f
  3330  065C  09F9               	comf	___aodiv@quotient+6,f
  3331  065D  09FA               	comf	___aodiv@quotient+7,f
  3332  065E  0AF3               	incf	___aodiv@quotient,f
  3333  065F  1D03               	skipz
  3334  0660  2E74               	goto	u91lld
  3335  0661  0AF4               	incf	___aodiv@quotient+1,f
  3336  0662  1D03               	skipz
  3337  0663  2E74               	goto	u91lld
  3338  0664  0AF5               	incf	___aodiv@quotient+2,f
  3339  0665  1D03               	skipz
  3340  0666  2E74               	goto	u91lld
  3341  0667  0AF6               	incf	___aodiv@quotient+3,f
  3342  0668  1D03               	skipz
  3343  0669  2E74               	goto	u91lld
  3344  066A  0AF7               	incf	___aodiv@quotient+4,f
  3345  066B  1D03               	skipz
  3346  066C  2E74               	goto	u91lld
  3347  066D  0AF8               	incf	___aodiv@quotient+5,f
  3348  066E  1D03               	skipz
  3349  066F  2E74               	goto	u91lld
  3350  0670  0AF9               	incf	___aodiv@quotient+6,f
  3351  0671  1D03               	skipz
  3352  0672  2E74               	goto	u91lld
  3353  0673  0AFA               	incf	___aodiv@quotient+7,f
  3354  0674                     u91lld:
  3355  0674                     l304:
  3356  0674  0873               	movf	___aodiv@quotient,w
  3357  0675  0140               	movlb	0	; select bank0
  3358  0676  00A0               	movwf	?___aodiv
  3359  0677  0874               	movf	___aodiv@quotient+1,w
  3360  0678  00A1               	movwf	?___aodiv+1
  3361  0679  0875               	movf	___aodiv@quotient+2,w
  3362  067A  00A2               	movwf	?___aodiv+2
  3363  067B  0876               	movf	___aodiv@quotient+3,w
  3364  067C  00A3               	movwf	?___aodiv+3
  3365  067D  0877               	movf	___aodiv@quotient+4,w
  3366  067E  00A4               	movwf	?___aodiv+4
  3367  067F  0878               	movf	___aodiv@quotient+5,w
  3368  0680  00A5               	movwf	?___aodiv+5
  3369  0681  0879               	movf	___aodiv@quotient+6,w
  3370  0682  00A6               	movwf	?___aodiv+6
  3371  0683  087A               	movf	___aodiv@quotient+7,w
  3372  0684  00A7               	movwf	?___aodiv+7
  3373  0685                     l305:
  3374  0685  0008               	return
  3375  0686                     __end_of___aodiv:
  3376                           
  3377                           	psect	text13
  3378  0006                     __ptext13:	
  3379 ;; *************** function _PIN_MANAGER_Initialize *****************
  3380 ;; Defined at:
  3381 ;;		line 79 in file "main.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3395 ;;      Params:         0       0       0       0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _PIN_MANAGER_Initialize
  3410  0006                     _PIN_MANAGER_Initialize:
  3411  0006                     l1631:	
  3412                           ;incstack = 0
  3413                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3414                           
  3415                           
  3416                           ;main.c: 82:   LATA = 0x00;
  3417  0006  0140               	movlb	0	; select bank0
  3418  0007  0198               	clrf	24	;volatile
  3419                           
  3420                           ;main.c: 83:   LATB = 0x00;
  3421  0008  0199               	clrf	25	;volatile
  3422                           
  3423                           ;main.c: 84:   LATC = 0x00;
  3424  0009  019A               	clrf	26	;volatile
  3425  000A                     l1633:
  3426                           
  3427                           ;main.c: 87:   TRISA = 0b00010000;
  3428  000A  3010               	movlw	16
  3429  000B  0092               	movwf	18	;volatile
  3430  000C                     l1635:
  3431                           
  3432                           ;main.c: 88:   TRISB = 0b10100000;
  3433  000C  30A0               	movlw	160
  3434  000D  0093               	movwf	19	;volatile
  3435  000E                     l1637:
  3436                           
  3437                           ;main.c: 89:   TRISC = 0b00000100;
  3438  000E  3004               	movlw	4
  3439  000F  0094               	movwf	20	;volatile
  3440  0010                     l1639:
  3441                           
  3442                           ;main.c: 92:   ANSELC = 0;
  3443  0010  017E               	movlb	62	; select bank62
  3444  0011  01CE               	clrf	78	;volatile
  3445  0012                     l1641:
  3446                           
  3447                           ;main.c: 93:   ANSELB = 0;
  3448  0012  01C3               	clrf	67	;volatile
  3449  0013                     l1643:
  3450                           
  3451                           ;main.c: 94:   ANSELA = 0;
  3452  0013  01B8               	clrf	56	;volatile
  3453                           
  3454                           ;main.c: 98:   WPUC = 0x04;
  3455  0014  3004               	movlw	4
  3456  0015  00CF               	movwf	79	;volatile
  3457                           
  3458                           ;main.c: 101:   ODCONA = 0x04;
  3459  0016  3004               	movlw	4
  3460  0017  00BA               	movwf	58	;volatile
  3461  0018                     l1645:
  3462                           
  3463                           ;main.c: 102:   ODCONB = 0x00;
  3464  0018  01C5               	clrf	69	;volatile
  3465  0019                     l1647:
  3466                           
  3467                           ;main.c: 103:   ODCONC = 0x00;
  3468  0019  01D0               	clrf	80	;volatile
  3469                           
  3470                           ;main.c: 106:   SLRCONA = 0x37;
  3471  001A  3037               	movlw	55
  3472  001B  00BB               	movwf	59	;volatile
  3473                           
  3474                           ;main.c: 107:   SLRCONB = 0xFF;
  3475  001C  30FF               	movlw	255
  3476  001D  00C6               	movwf	70	;volatile
  3477                           
  3478                           ;main.c: 108:   SLRCONC = 0xFF;
  3479  001E  30FF               	movlw	255
  3480  001F  00D1               	movwf	81	;volatile
  3481                           
  3482                           ;main.c: 111:   INLVLA = 0x3F;
  3483  0020  303F               	movlw	63
  3484  0021  00BC               	movwf	60	;volatile
  3485                           
  3486                           ;main.c: 112:   INLVLB = 0xFF;
  3487  0022  30FF               	movlw	255
  3488  0023  00C7               	movwf	71	;volatile
  3489                           
  3490                           ;main.c: 113:   INLVLC = 0xFF;
  3491  0024  30FF               	movlw	255
  3492  0025  00D2               	movwf	82	;volatile
  3493  0026                     l1649:
  3494                           
  3495                           ;main.c: 117:   TRISA3 =0;
  3496  0026  0140               	movlb	0	; select bank0
  3497  0027  1192               	bcf	18,3	;volatile
  3498  0028                     l1651:
  3499                           
  3500                           ;main.c: 118:   TRISA0=0;
  3501  0028  1012               	bcf	18,0	;volatile
  3502  0029                     l1653:
  3503                           
  3504                           ;main.c: 119:   TRISA4=0;
  3505  0029  1212               	bcf	18,4	;volatile
  3506  002A                     l1655:
  3507                           
  3508                           ;main.c: 120:   TRISA5=0;
  3509  002A  1292               	bcf	18,5	;volatile
  3510  002B                     l1657:
  3511                           
  3512                           ;main.c: 122:   TRISA2 =1;
  3513  002B  1512               	bsf	18,2	;volatile
  3514  002C                     l1659:
  3515                           
  3516                           ;main.c: 123:   TRISC3 =1;
  3517  002C  1594               	bsf	20,3	;volatile
  3518  002D                     l1661:
  3519                           
  3520                           ;main.c: 124:   TRISB7 =1;
  3521  002D  1793               	bsf	19,7	;volatile
  3522  002E                     l1663:
  3523                           
  3524                           ;main.c: 125:   TRISB5 =1;
  3525  002E  1693               	bsf	19,5	;volatile
  3526  002F                     l122:
  3527  002F  0008               	return
  3528  0030                     __end_of_PIN_MANAGER_Initialize:
  3529                           
  3530                           	psect	text14
  3531  0030                     __ptext14:	
  3532 ;; *************** function _Lcd_Out2 *****************
  3533 ;; Defined at:
  3534 ;;		line 115 in file "./flex_lcd.h"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  y               1    wreg     unsigned char 
  3537 ;;  x               1    3[COMMON] unsigned char 
  3538 ;;  buffer          1    4[COMMON] PTR unsigned char 
  3539 ;;		 -> carac(20), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  y               1    7[COMMON] unsigned char 
  3542 ;;  data            1    8[COMMON] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3552 ;;      Params:         2       0       0       0       0       0       0       0
  3553 ;;      Locals:         2       0       0       0       0       0       0       0
  3554 ;;      Temps:          2       0       0       0       0       0       0       0
  3555 ;;      Totals:         6       0       0       0       0       0       0       0
  3556 ;;Total ram usage:        6 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    1
  3559 ;; This function calls:
  3560 ;;		_Lcd_Chr_CP
  3561 ;;		_Lcd_Cmd
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _Lcd_Out2
  3569  0030                     _Lcd_Out2:
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3573                           ;Lcd_Out2@y stored from wreg
  3574  0030  00F7               	movwf	Lcd_Out2@y
  3575  0031                     l1605:
  3576                           
  3577                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  3578  0031  284A               	goto	l1617
  3579  0032                     l1607:
  3580  0032  0873               	movf	Lcd_Out2@x,w
  3581  0033  3E80               	addlw	128
  3582  0034  00F5               	movwf	??_Lcd_Out2
  3583  0035  0875               	movf	??_Lcd_Out2,w
  3584  0036  00F8               	movwf	Lcd_Out2@data
  3585  0037  2860               	goto	l1619
  3586  0038                     l1609:
  3587  0038  0873               	movf	Lcd_Out2@x,w
  3588  0039  3EC0               	addlw	192
  3589  003A  00F5               	movwf	??_Lcd_Out2
  3590  003B  0875               	movf	??_Lcd_Out2,w
  3591  003C  00F8               	movwf	Lcd_Out2@data
  3592  003D  2860               	goto	l1619
  3593  003E                     l1611:
  3594  003E  0873               	movf	Lcd_Out2@x,w
  3595  003F  3E94               	addlw	148
  3596  0040  00F5               	movwf	??_Lcd_Out2
  3597  0041  0875               	movf	??_Lcd_Out2,w
  3598  0042  00F8               	movwf	Lcd_Out2@data
  3599  0043  2860               	goto	l1619
  3600  0044                     l1613:
  3601  0044  0873               	movf	Lcd_Out2@x,w
  3602  0045  3ED4               	addlw	212
  3603  0046  00F5               	movwf	??_Lcd_Out2
  3604  0047  0875               	movf	??_Lcd_Out2,w
  3605  0048  00F8               	movwf	Lcd_Out2@data
  3606  0049  2860               	goto	l1619
  3607  004A                     l1617:
  3608  004A  0877               	movf	Lcd_Out2@y,w
  3609  004B  00F5               	movwf	??_Lcd_Out2
  3610  004C  01F6               	clrf	??_Lcd_Out2+1
  3611                           
  3612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3613                           ; Switch size 1, requested type "simple"
  3614                           ; Number of cases is 1, Range of values is 0 to 0
  3615                           ; switch strategies available:
  3616                           ; Name         Instructions Cycles
  3617                           ; simple_byte            4     3 (average)
  3618                           ; direct_byte            8     6 (fixed)
  3619                           ; jumptable            260     6 (fixed)
  3620                           ;	Chosen strategy is simple_byte
  3621  004D  0876               	movf	??_Lcd_Out2+1,w
  3622  004E  3A00               	xorlw	0	; case 0
  3623  004F  1903               	skipnz
  3624  0050  2852               	goto	l1773
  3625  0051  2860               	goto	l1619
  3626  0052                     l1773:
  3627                           
  3628                           ; Switch size 1, requested type "simple"
  3629                           ; Number of cases is 4, Range of values is 1 to 4
  3630                           ; switch strategies available:
  3631                           ; Name         Instructions Cycles
  3632                           ; simple_byte           13     7 (average)
  3633                           ; direct_byte           17     9 (fixed)
  3634                           ; jumptable            263     9 (fixed)
  3635                           ;	Chosen strategy is simple_byte
  3636  0052  0875               	movf	??_Lcd_Out2,w
  3637  0053  3A01               	xorlw	1	; case 1
  3638  0054  1903               	skipnz
  3639  0055  2832               	goto	l1607
  3640  0056  3A03               	xorlw	3	; case 2
  3641  0057  1903               	skipnz
  3642  0058  2838               	goto	l1609
  3643  0059  3A01               	xorlw	1	; case 3
  3644  005A  1903               	skipnz
  3645  005B  283E               	goto	l1611
  3646  005C  3A07               	xorlw	7	; case 4
  3647  005D  1903               	skipnz
  3648  005E  2844               	goto	l1613
  3649  005F  2860               	goto	l1619
  3650  0060                     l1619:
  3651                           
  3652                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  3653  0060  0878               	movf	Lcd_Out2@data,w
  3654  0061  3181  21AA  3180   	fcall	_Lcd_Cmd
  3655                           
  3656                           ;./flex_lcd.h: 127: while(*buffer)
  3657  0064  2870               	goto	l1625
  3658  0065                     l1621:
  3659                           
  3660                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  3661  0065  0874               	movf	Lcd_Out2@buffer,w
  3662  0066  0086               	movwf	6
  3663  0067  0187               	clrf	7
  3664  0068  0801               	movf	1,w
  3665  0069  3182  223C  3180   	fcall	_Lcd_Chr_CP
  3666  006C                     l1623:
  3667                           
  3668                           ;./flex_lcd.h: 130:     buffer++;
  3669  006C  3001               	movlw	1
  3670  006D  00F5               	movwf	??_Lcd_Out2
  3671  006E  0875               	movf	??_Lcd_Out2,w
  3672  006F  07F4               	addwf	Lcd_Out2@buffer,f
  3673  0070                     l1625:
  3674                           
  3675                           ;./flex_lcd.h: 127: while(*buffer)
  3676  0070  0874               	movf	Lcd_Out2@buffer,w
  3677  0071  0086               	movwf	6
  3678  0072  0187               	clrf	7
  3679  0073  0801               	movf	1,w
  3680  0074  1D03               	btfss	3,2
  3681  0075  2877               	goto	u1411
  3682  0076  2878               	goto	u1410
  3683  0077                     u1411:
  3684  0077  2865               	goto	l1621
  3685  0078                     u1410:
  3686  0078                     l105:
  3687  0078  0008               	return
  3688  0079                     __end_of_Lcd_Out2:
  3689                           
  3690                           	psect	text15
  3691  023C                     __ptext15:	
  3692 ;; *************** function _Lcd_Chr_CP *****************
  3693 ;; Defined at:
  3694 ;;		line 136 in file "./flex_lcd.h"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  data            1    wreg     unsigned char 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  data            1    2[COMMON] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3708 ;;      Params:         0       0       0       0       0       0       0       0
  3709 ;;      Locals:         1       0       0       0       0       0       0       0
  3710 ;;      Temps:          2       0       0       0       0       0       0       0
  3711 ;;      Totals:         3       0       0       0       0       0       0       0
  3712 ;;Total ram usage:        3 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_Lcd_Out2
  3718 ;;		_Lcd_Out
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _Lcd_Chr_CP
  3724  023C                     _Lcd_Chr_CP:
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  3728                           ;Lcd_Chr_CP@data stored from wreg
  3729  023C  00F2               	movwf	Lcd_Chr_CP@data
  3730  023D                     l1535:
  3731                           
  3732                           ;./flex_lcd.h: 137: PORTBbits.RB6 = 0; PORTBbits.RB4 = 1;
  3733  023D  0140               	movlb	0	; select bank0
  3734  023E  130D               	bcf	13,6	;volatile
  3735  023F  160D               	bsf	13,4	;volatile
  3736  0240                     l1537:
  3737                           
  3738                           ;./flex_lcd.h: 138: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  3739  0240  0872               	movf	Lcd_Chr_CP@data,w
  3740  0241  00F0               	movwf	??_Lcd_Chr_CP
  3741  0242  3007               	movlw	7
  3742  0243                     u1335:
  3743  0243  36F0               	lsrf	??_Lcd_Chr_CP,f
  3744  0244  0B89               	decfsz	9,f
  3745  0245  2A43               	goto	u1335
  3746  0246  0870               	movf	??_Lcd_Chr_CP,w
  3747  0247  3901               	andlw	1
  3748  0248  00F1               	movwf	??_Lcd_Chr_CP+1
  3749  0249  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  3750  024A  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  3751  024B  080E               	movf	14,w	;volatile
  3752  024C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3753  024D  397F               	andlw	-129
  3754  024E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3755  024F  008E               	movwf	14	;volatile
  3756  0250  0872               	movf	Lcd_Chr_CP@data,w
  3757  0251  00F0               	movwf	??_Lcd_Chr_CP
  3758  0252  3006               	movlw	6
  3759  0253                     u1345:
  3760  0253  36F0               	lsrf	??_Lcd_Chr_CP,f
  3761  0254  0B89               	decfsz	9,f
  3762  0255  2A53               	goto	u1345
  3763  0256  0870               	movf	??_Lcd_Chr_CP,w
  3764  0257  3901               	andlw	1
  3765  0258  00F1               	movwf	??_Lcd_Chr_CP+1
  3766  0259  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  3767  025A  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3768  025B  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3769  025C  080E               	movf	14,w	;volatile
  3770  025D  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3771  025E  39BF               	andlw	-65
  3772  025F  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3773  0260  008E               	movwf	14	;volatile
  3774                           
  3775                           ;./flex_lcd.h: 139: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  3776  0261  0872               	movf	Lcd_Chr_CP@data,w
  3777  0262  00F0               	movwf	??_Lcd_Chr_CP
  3778  0263  3005               	movlw	5
  3779  0264                     u1355:
  3780  0264  36F0               	lsrf	??_Lcd_Chr_CP,f
  3781  0265  0B89               	decfsz	9,f
  3782  0266  2A64               	goto	u1355
  3783  0267  0870               	movf	??_Lcd_Chr_CP,w
  3784  0268  3901               	andlw	1
  3785  0269  00F1               	movwf	??_Lcd_Chr_CP+1
  3786  026A  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  3787  026B  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3788  026C  080E               	movf	14,w	;volatile
  3789  026D  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3790  026E  39DF               	andlw	-33
  3791  026F  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3792  0270  008E               	movwf	14	;volatile
  3793  0271  0872               	movf	Lcd_Chr_CP@data,w
  3794  0272  00F0               	movwf	??_Lcd_Chr_CP
  3795  0273  3004               	movlw	4
  3796  0274                     u1365:
  3797  0274  36F0               	lsrf	??_Lcd_Chr_CP,f
  3798  0275  0B89               	decfsz	9,f
  3799  0276  2A74               	goto	u1365
  3800  0277  0870               	movf	??_Lcd_Chr_CP,w
  3801  0278  3901               	andlw	1
  3802  0279  00F1               	movwf	??_Lcd_Chr_CP+1
  3803  027A  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  3804  027B  080E               	movf	14,w	;volatile
  3805  027C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3806  027D  39EF               	andlw	-17
  3807  027E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3808  027F  008E               	movwf	14	;volatile
  3809  0280                     l1539:
  3810                           
  3811                           ;./flex_lcd.h: 140: _delay(10);
  3812  0280  3003               	movlw	3
  3813  0281                     u1567:
  3814  0281  0B89               	decfsz	9,f
  3815  0282  2A81               	goto	u1567
  3816  0283  0000               	nop
  3817  0284                     l1541:
  3818                           
  3819                           ;./flex_lcd.h: 141: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  3820  0284  0140               	movlb	0	; select bank0
  3821  0285  170D               	bsf	13,6	;volatile
  3822  0286                     l1543:
  3823  0286  0000               	nop
  3824  0287                     l1545:
  3825  0287  0140               	movlb	0	; select bank0
  3826  0288  130D               	bcf	13,6	;volatile
  3827  0289                     l1547:
  3828                           
  3829                           ;./flex_lcd.h: 142: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  3830  0289  0872               	movf	Lcd_Chr_CP@data,w
  3831  028A  00F0               	movwf	??_Lcd_Chr_CP
  3832  028B  3003               	movlw	3
  3833  028C                     u1375:
  3834  028C  36F0               	lsrf	??_Lcd_Chr_CP,f
  3835  028D  0B89               	decfsz	9,f
  3836  028E  2A8C               	goto	u1375
  3837  028F  0870               	movf	??_Lcd_Chr_CP,w
  3838  0290  3901               	andlw	1
  3839  0291  00F1               	movwf	??_Lcd_Chr_CP+1
  3840  0292  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  3841  0293  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  3842  0294  080E               	movf	14,w	;volatile
  3843  0295  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3844  0296  397F               	andlw	-129
  3845  0297  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3846  0298  008E               	movwf	14	;volatile
  3847  0299                     l1549:
  3848  0299  0872               	movf	Lcd_Chr_CP@data,w
  3849  029A  00F0               	movwf	??_Lcd_Chr_CP
  3850  029B  3002               	movlw	2
  3851  029C                     u1385:
  3852  029C  36F0               	lsrf	??_Lcd_Chr_CP,f
  3853  029D  0B89               	decfsz	9,f
  3854  029E  2A9C               	goto	u1385
  3855  029F  0870               	movf	??_Lcd_Chr_CP,w
  3856  02A0  3901               	andlw	1
  3857  02A1  00F1               	movwf	??_Lcd_Chr_CP+1
  3858  02A2  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  3859  02A3  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3860  02A4  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3861  02A5  080E               	movf	14,w	;volatile
  3862  02A6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3863  02A7  39BF               	andlw	-65
  3864  02A8  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3865  02A9  008E               	movwf	14	;volatile
  3866  02AA                     l1551:
  3867                           
  3868                           ;./flex_lcd.h: 143: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  3869  02AA  3672               	lsrf	Lcd_Chr_CP@data,w
  3870  02AB  3901               	andlw	1
  3871  02AC  00F0               	movwf	??_Lcd_Chr_CP
  3872  02AD  0EF0               	swapf	??_Lcd_Chr_CP,f
  3873  02AE  0DF0               	rlf	??_Lcd_Chr_CP,f
  3874  02AF  080E               	movf	14,w	;volatile
  3875  02B0  0670               	xorwf	??_Lcd_Chr_CP,w
  3876  02B1  39DF               	andlw	-33
  3877  02B2  0670               	xorwf	??_Lcd_Chr_CP,w
  3878  02B3  008E               	movwf	14	;volatile
  3879  02B4                     l1553:
  3880  02B4  0872               	movf	Lcd_Chr_CP@data,w
  3881  02B5  3901               	andlw	1
  3882  02B6  00F0               	movwf	??_Lcd_Chr_CP
  3883  02B7  0EF0               	swapf	??_Lcd_Chr_CP,f
  3884  02B8  080E               	movf	14,w	;volatile
  3885  02B9  0670               	xorwf	??_Lcd_Chr_CP,w
  3886  02BA  39EF               	andlw	-17
  3887  02BB  0670               	xorwf	??_Lcd_Chr_CP,w
  3888  02BC  008E               	movwf	14	;volatile
  3889  02BD                     l1555:
  3890                           
  3891                           ;./flex_lcd.h: 144: _delay(10);
  3892  02BD  3003               	movlw	3
  3893  02BE                     u1577:
  3894  02BE  0B89               	decfsz	9,f
  3895  02BF  2ABE               	goto	u1577
  3896  02C0  0000               	nop
  3897  02C1                     l1557:
  3898                           
  3899                           ;./flex_lcd.h: 145: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  3900  02C1  0140               	movlb	0	; select bank0
  3901  02C2  170D               	bsf	13,6	;volatile
  3902  02C3                     l1559:
  3903  02C3  0000               	nop
  3904  02C4                     l1561:
  3905  02C4  0140               	movlb	0	; select bank0
  3906  02C5  130D               	bcf	13,6	;volatile
  3907  02C6                     l1563:
  3908                           
  3909                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(1000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(1000000/4000000.0)));
  3910  02C6  0000               	nop
  3911  02C7                     l1565:
  3912  02C7  30C4               	movlw	196
  3913  02C8                     u1587:
  3914  02C8  3200               	nop2
  3915  02C9  3200               	nop2
  3916  02CA  0B89               	decfsz	9,f
  3917  02CB  2AC8               	goto	u1587
  3918  02CC  3200               	nop2
  3919  02CD  0000               	nop
  3920  02CE                     l108:
  3921  02CE  0008               	return
  3922  02CF                     __end_of_Lcd_Chr_CP:
  3923                           
  3924                           	psect	text16
  3925  011E                     __ptext16:	
  3926 ;; *************** function _Lcd_Init *****************
  3927 ;; Defined at:
  3928 ;;		line 52 in file "./flex_lcd.h"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  data            1    4[COMMON] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3942 ;;      Params:         0       0       0       0       0       0       0       0
  3943 ;;      Locals:         1       0       0       0       0       0       0       0
  3944 ;;      Temps:          1       0       0       0       0       0       0       0
  3945 ;;      Totals:         2       0       0       0       0       0       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    1
  3949 ;; This function calls:
  3950 ;;		_Lcd_Cmd
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _Lcd_Init
  3958  011E                     _Lcd_Init:
  3959  011E                     l1579:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3962                           
  3963                           
  3964                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC7 = 0;
  3965  011E  0140               	movlb	0	; select bank0
  3966  011F  1394               	bcf	20,7	;volatile
  3967                           
  3968                           ;./flex_lcd.h: 55: TRISCbits.TRISC6 = 0;
  3969  0120  1314               	bcf	20,6	;volatile
  3970                           
  3971                           ;./flex_lcd.h: 56: TRISCbits.TRISC5 = 0;
  3972  0121  1294               	bcf	20,5	;volatile
  3973                           
  3974                           ;./flex_lcd.h: 57: TRISCbits.TRISC4 = 0;
  3975  0122  1214               	bcf	20,4	;volatile
  3976                           
  3977                           ;./flex_lcd.h: 58: TRISBbits.TRISB6 = 0;
  3978  0123  1313               	bcf	19,6	;volatile
  3979                           
  3980                           ;./flex_lcd.h: 59: TRISBbits.TRISB4 = 0;
  3981  0124  1213               	bcf	19,4	;volatile
  3982                           
  3983                           ;./flex_lcd.h: 60: PORTCbits.RC7 = 0;
  3984  0125  138E               	bcf	14,7	;volatile
  3985                           
  3986                           ;./flex_lcd.h: 61: PORTCbits.RC6 = 0;
  3987  0126  130E               	bcf	14,6	;volatile
  3988                           
  3989                           ;./flex_lcd.h: 62: PORTCbits.RC5 = 0;
  3990  0127  128E               	bcf	14,5	;volatile
  3991                           
  3992                           ;./flex_lcd.h: 63: PORTCbits.RC4 = 0;
  3993  0128  120E               	bcf	14,4	;volatile
  3994                           
  3995                           ;./flex_lcd.h: 64: PORTBbits.RB6 = 0;
  3996  0129  130D               	bcf	13,6	;volatile
  3997                           
  3998                           ;./flex_lcd.h: 65: PORTBbits.RB4 = 0;
  3999  012A  120D               	bcf	13,4	;volatile
  4000  012B                     l1581:
  4001                           
  4002                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4003  012B  30C4               	movlw	196
  4004  012C                     u1597:
  4005  012C  3200               	nop2
  4006  012D  3200               	nop2
  4007  012E  0B89               	decfsz	9,f
  4008  012F  292C               	goto	u1597
  4009  0130  3200               	nop2
  4010  0131  0000               	nop
  4011                           
  4012                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4013  0132  30C4               	movlw	196
  4014  0133                     u1607:
  4015  0133  3200               	nop2
  4016  0134  3200               	nop2
  4017  0135  0B89               	decfsz	9,f
  4018  0136  2933               	goto	u1607
  4019  0137  3200               	nop2
  4020  0138  0000               	nop
  4021                           
  4022                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4023  0139  30C4               	movlw	196
  4024  013A                     u1617:
  4025  013A  3200               	nop2
  4026  013B  3200               	nop2
  4027  013C  0B89               	decfsz	9,f
  4028  013D  293A               	goto	u1617
  4029  013E  3200               	nop2
  4030  013F  0000               	nop
  4031                           
  4032                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4033  0140  30C4               	movlw	196
  4034  0141                     u1627:
  4035  0141  3200               	nop2
  4036  0142  3200               	nop2
  4037  0143  0B89               	decfsz	9,f
  4038  0144  2941               	goto	u1627
  4039  0145  3200               	nop2
  4040  0146  0000               	nop
  4041                           
  4042                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4043  0147  30C4               	movlw	196
  4044  0148                     u1637:
  4045  0148  3200               	nop2
  4046  0149  3200               	nop2
  4047  014A  0B89               	decfsz	9,f
  4048  014B  2948               	goto	u1637
  4049  014C  3200               	nop2
  4050  014D  0000               	nop
  4051                           
  4052                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4053  014E  30C4               	movlw	196
  4054  014F                     u1647:
  4055  014F  3200               	nop2
  4056  0150  3200               	nop2
  4057  0151  0B89               	decfsz	9,f
  4058  0152  294F               	goto	u1647
  4059  0153  3200               	nop2
  4060  0154  0000               	nop
  4061  0155                     l1583:
  4062                           
  4063                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  4064  0155  01F4               	clrf	Lcd_Init@data
  4065  0156  0AF4               	incf	Lcd_Init@data,f
  4066  0157                     l77:
  4067                           
  4068                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbi
      +                          ts.RC5 = 1; PORTCbits.RC4 = 1; PORTBbits.RB6 = 0;
  4069  0157  0140               	movlb	0	; select bank0
  4070  0158  138E               	bcf	14,7	;volatile
  4071  0159  130E               	bcf	14,6	;volatile
  4072  015A  168E               	bsf	14,5	;volatile
  4073  015B  160E               	bsf	14,4	;volatile
  4074  015C  130D               	bcf	13,6	;volatile
  4075                           
  4076                           ;./flex_lcd.h: 75:     PORTBbits.RB4 = 0; PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbit
      +                          s.RC5 = 1; PORTCbits.RC4 = 1;
  4077  015D  120D               	bcf	13,4	;volatile
  4078  015E  138E               	bcf	14,7	;volatile
  4079  015F  130E               	bcf	14,6	;volatile
  4080  0160  168E               	bsf	14,5	;volatile
  4081  0161  160E               	bsf	14,4	;volatile
  4082                           
  4083                           ;./flex_lcd.h: 76:     PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  4084  0162  170D               	bsf	13,6	;volatile
  4085  0163  120D               	bcf	13,4	;volatile
  4086                           
  4087                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  4088  0164  0000               	nop
  4089                           
  4090                           ;./flex_lcd.h: 78:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbit
      +                          s.RC4 = 1; PORTBbits.RB6 = 0;
  4091  0165  0140               	movlb	0	; select bank0
  4092  0166  138E               	bcf	14,7	;volatile
  4093  0167  130E               	bcf	14,6	;volatile
  4094  0168  168E               	bsf	14,5	;volatile
  4095  0169  160E               	bsf	14,4	;volatile
  4096  016A  130D               	bcf	13,6	;volatile
  4097                           
  4098                           ;./flex_lcd.h: 79:     PORTBbits.RB4 = 0;
  4099  016B  120D               	bcf	13,4	;volatile
  4100  016C                     l1587:
  4101                           
  4102                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4103  016C  30C4               	movlw	196
  4104  016D                     u1657:
  4105  016D  3200               	nop2
  4106  016E  3200               	nop2
  4107  016F  0B89               	decfsz	9,f
  4108  0170  296D               	goto	u1657
  4109  0171  3200               	nop2
  4110  0172  0000               	nop
  4111  0173                     l1589:
  4112                           
  4113                           ;./flex_lcd.h: 81: }
  4114  0173  3001               	movlw	1
  4115  0174  00F3               	movwf	??_Lcd_Init
  4116  0175  0873               	movf	??_Lcd_Init,w
  4117  0176  07F4               	addwf	Lcd_Init@data,f
  4118  0177                     l1591:
  4119  0177  3004               	movlw	4
  4120  0178  0274               	subwf	Lcd_Init@data,w
  4121  0179  1C03               	skipc
  4122  017A  297C               	goto	u1401
  4123  017B  297D               	goto	u1400
  4124  017C                     u1401:
  4125  017C  2957               	goto	l77
  4126  017D                     u1400:
  4127  017D                     l78:
  4128                           
  4129                           ;./flex_lcd.h: 82: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4130  017D  0140               	movlb	0	; select bank0
  4131  017E  138E               	bcf	14,7	;volatile
  4132  017F  130E               	bcf	14,6	;volatile
  4133  0180  168E               	bsf	14,5	;volatile
  4134  0181  120E               	bcf	14,4	;volatile
  4135  0182  130D               	bcf	13,6	;volatile
  4136  0183  120D               	bcf	13,4	;volatile
  4137                           
  4138                           ;./flex_lcd.h: 83: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  4139  0184  138E               	bcf	14,7	;volatile
  4140  0185  130E               	bcf	14,6	;volatile
  4141  0186  168E               	bsf	14,5	;volatile
  4142  0187  120E               	bcf	14,4	;volatile
  4143  0188  170D               	bsf	13,6	;volatile
  4144  0189  120D               	bcf	13,4	;volatile
  4145                           
  4146                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(1000000/4000000.0)));
  4147  018A  0000               	nop
  4148                           
  4149                           ;./flex_lcd.h: 85: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4150  018B  0140               	movlb	0	; select bank0
  4151  018C  138E               	bcf	14,7	;volatile
  4152  018D  130E               	bcf	14,6	;volatile
  4153  018E  168E               	bsf	14,5	;volatile
  4154  018F  120E               	bcf	14,4	;volatile
  4155  0190  130D               	bcf	13,6	;volatile
  4156  0191  120D               	bcf	13,4	;volatile
  4157  0192                     l1593:
  4158                           
  4159                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4160  0192  30C4               	movlw	196
  4161  0193                     u1667:
  4162  0193  3200               	nop2
  4163  0194  3200               	nop2
  4164  0195  0B89               	decfsz	9,f
  4165  0196  2993               	goto	u1667
  4166  0197  3200               	nop2
  4167  0198  0000               	nop
  4168  0199                     l1595:
  4169  0199  3028               	movlw	40
  4170  019A  3181  21AA  3181   	fcall	_Lcd_Cmd
  4171  019D                     l1597:
  4172  019D  3010               	movlw	16
  4173  019E  3181  21AA  3181   	fcall	_Lcd_Cmd
  4174  01A1                     l1599:
  4175  01A1  3001               	movlw	1
  4176  01A2  3181  21AA  3181   	fcall	_Lcd_Cmd
  4177  01A5                     l1601:
  4178  01A5                     l1603:
  4179  01A5  300F               	movlw	15
  4180  01A6  3181  21AA  3181   	fcall	_Lcd_Cmd
  4181  01A9                     l79:
  4182  01A9  0008               	return
  4183  01AA                     __end_of_Lcd_Init:
  4184                           
  4185                           	psect	text17
  4186  01AA                     __ptext17:	
  4187 ;; *************** function _Lcd_Cmd *****************
  4188 ;; Defined at:
  4189 ;;		line 150 in file "./flex_lcd.h"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  data            1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  data            1    2[COMMON] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4203 ;;      Params:         0       0       0       0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0       0
  4205 ;;      Temps:          2       0       0       0       0       0       0       0
  4206 ;;      Totals:         3       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        3 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_Lcd_Init
  4213 ;;		_Lcd_Out2
  4214 ;;		_main
  4215 ;;		_Lcd_Out
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _Lcd_Cmd
  4221  01AA                     _Lcd_Cmd:
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4225                           ;Lcd_Cmd@data stored from wreg
  4226  01AA  00F2               	movwf	Lcd_Cmd@data
  4227  01AB                     l1505:
  4228                           
  4229                           ;./flex_lcd.h: 151: PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  4230  01AB  0140               	movlb	0	; select bank0
  4231  01AC  130D               	bcf	13,6	;volatile
  4232  01AD  120D               	bcf	13,4	;volatile
  4233  01AE                     l1507:
  4234                           
  4235                           ;./flex_lcd.h: 152: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  4236  01AE  0872               	movf	Lcd_Cmd@data,w
  4237  01AF  00F0               	movwf	??_Lcd_Cmd
  4238  01B0  3007               	movlw	7
  4239  01B1                     u1275:
  4240  01B1  36F0               	lsrf	??_Lcd_Cmd,f
  4241  01B2  0B89               	decfsz	9,f
  4242  01B3  29B1               	goto	u1275
  4243  01B4  0870               	movf	??_Lcd_Cmd,w
  4244  01B5  3901               	andlw	1
  4245  01B6  00F1               	movwf	??_Lcd_Cmd+1
  4246  01B7  0CF1               	rrf	??_Lcd_Cmd+1,f
  4247  01B8  0CF1               	rrf	??_Lcd_Cmd+1,f
  4248  01B9  080E               	movf	14,w	;volatile
  4249  01BA  0671               	xorwf	??_Lcd_Cmd+1,w
  4250  01BB  397F               	andlw	-129
  4251  01BC  0671               	xorwf	??_Lcd_Cmd+1,w
  4252  01BD  008E               	movwf	14	;volatile
  4253  01BE  0872               	movf	Lcd_Cmd@data,w
  4254  01BF  00F0               	movwf	??_Lcd_Cmd
  4255  01C0  3006               	movlw	6
  4256  01C1                     u1285:
  4257  01C1  36F0               	lsrf	??_Lcd_Cmd,f
  4258  01C2  0B89               	decfsz	9,f
  4259  01C3  29C1               	goto	u1285
  4260  01C4  0870               	movf	??_Lcd_Cmd,w
  4261  01C5  3901               	andlw	1
  4262  01C6  00F1               	movwf	??_Lcd_Cmd+1
  4263  01C7  0EF1               	swapf	??_Lcd_Cmd+1,f
  4264  01C8  0DF1               	rlf	??_Lcd_Cmd+1,f
  4265  01C9  0DF1               	rlf	??_Lcd_Cmd+1,f
  4266  01CA  080E               	movf	14,w	;volatile
  4267  01CB  0671               	xorwf	??_Lcd_Cmd+1,w
  4268  01CC  39BF               	andlw	-65
  4269  01CD  0671               	xorwf	??_Lcd_Cmd+1,w
  4270  01CE  008E               	movwf	14	;volatile
  4271                           
  4272                           ;./flex_lcd.h: 153: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  4273  01CF  0872               	movf	Lcd_Cmd@data,w
  4274  01D0  00F0               	movwf	??_Lcd_Cmd
  4275  01D1  3005               	movlw	5
  4276  01D2                     u1295:
  4277  01D2  36F0               	lsrf	??_Lcd_Cmd,f
  4278  01D3  0B89               	decfsz	9,f
  4279  01D4  29D2               	goto	u1295
  4280  01D5  0870               	movf	??_Lcd_Cmd,w
  4281  01D6  3901               	andlw	1
  4282  01D7  00F1               	movwf	??_Lcd_Cmd+1
  4283  01D8  0EF1               	swapf	??_Lcd_Cmd+1,f
  4284  01D9  0DF1               	rlf	??_Lcd_Cmd+1,f
  4285  01DA  080E               	movf	14,w	;volatile
  4286  01DB  0671               	xorwf	??_Lcd_Cmd+1,w
  4287  01DC  39DF               	andlw	-33
  4288  01DD  0671               	xorwf	??_Lcd_Cmd+1,w
  4289  01DE  008E               	movwf	14	;volatile
  4290  01DF  0872               	movf	Lcd_Cmd@data,w
  4291  01E0  00F0               	movwf	??_Lcd_Cmd
  4292  01E1  3004               	movlw	4
  4293  01E2                     u1305:
  4294  01E2  36F0               	lsrf	??_Lcd_Cmd,f
  4295  01E3  0B89               	decfsz	9,f
  4296  01E4  29E2               	goto	u1305
  4297  01E5  0870               	movf	??_Lcd_Cmd,w
  4298  01E6  3901               	andlw	1
  4299  01E7  00F1               	movwf	??_Lcd_Cmd+1
  4300  01E8  0EF1               	swapf	??_Lcd_Cmd+1,f
  4301  01E9  080E               	movf	14,w	;volatile
  4302  01EA  0671               	xorwf	??_Lcd_Cmd+1,w
  4303  01EB  39EF               	andlw	-17
  4304  01EC  0671               	xorwf	??_Lcd_Cmd+1,w
  4305  01ED  008E               	movwf	14	;volatile
  4306  01EE                     l1509:
  4307                           
  4308                           ;./flex_lcd.h: 154: _delay(10);
  4309  01EE  3003               	movlw	3
  4310  01EF                     u1677:
  4311  01EF  0B89               	decfsz	9,f
  4312  01F0  29EF               	goto	u1677
  4313  01F1  0000               	nop
  4314  01F2                     l1511:
  4315                           
  4316                           ;./flex_lcd.h: 155: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4317  01F2  0140               	movlb	0	; select bank0
  4318  01F3  170D               	bsf	13,6	;volatile
  4319  01F4                     l1513:
  4320  01F4  0000               	nop
  4321  01F5                     l1515:
  4322  01F5  0140               	movlb	0	; select bank0
  4323  01F6  130D               	bcf	13,6	;volatile
  4324  01F7                     l1517:
  4325                           
  4326                           ;./flex_lcd.h: 156: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  4327  01F7  0872               	movf	Lcd_Cmd@data,w
  4328  01F8  00F0               	movwf	??_Lcd_Cmd
  4329  01F9  3003               	movlw	3
  4330  01FA                     u1315:
  4331  01FA  36F0               	lsrf	??_Lcd_Cmd,f
  4332  01FB  0B89               	decfsz	9,f
  4333  01FC  29FA               	goto	u1315
  4334  01FD  0870               	movf	??_Lcd_Cmd,w
  4335  01FE  3901               	andlw	1
  4336  01FF  00F1               	movwf	??_Lcd_Cmd+1
  4337  0200  0CF1               	rrf	??_Lcd_Cmd+1,f
  4338  0201  0CF1               	rrf	??_Lcd_Cmd+1,f
  4339  0202  080E               	movf	14,w	;volatile
  4340  0203  0671               	xorwf	??_Lcd_Cmd+1,w
  4341  0204  397F               	andlw	-129
  4342  0205  0671               	xorwf	??_Lcd_Cmd+1,w
  4343  0206  008E               	movwf	14	;volatile
  4344  0207                     l1519:
  4345  0207  0872               	movf	Lcd_Cmd@data,w
  4346  0208  00F0               	movwf	??_Lcd_Cmd
  4347  0209  3002               	movlw	2
  4348  020A                     u1325:
  4349  020A  36F0               	lsrf	??_Lcd_Cmd,f
  4350  020B  0B89               	decfsz	9,f
  4351  020C  2A0A               	goto	u1325
  4352  020D  0870               	movf	??_Lcd_Cmd,w
  4353  020E  3901               	andlw	1
  4354  020F  00F1               	movwf	??_Lcd_Cmd+1
  4355  0210  0EF1               	swapf	??_Lcd_Cmd+1,f
  4356  0211  0DF1               	rlf	??_Lcd_Cmd+1,f
  4357  0212  0DF1               	rlf	??_Lcd_Cmd+1,f
  4358  0213  080E               	movf	14,w	;volatile
  4359  0214  0671               	xorwf	??_Lcd_Cmd+1,w
  4360  0215  39BF               	andlw	-65
  4361  0216  0671               	xorwf	??_Lcd_Cmd+1,w
  4362  0217  008E               	movwf	14	;volatile
  4363  0218                     l1521:
  4364                           
  4365                           ;./flex_lcd.h: 157: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  4366  0218  3672               	lsrf	Lcd_Cmd@data,w
  4367  0219  3901               	andlw	1
  4368  021A  00F0               	movwf	??_Lcd_Cmd
  4369  021B  0EF0               	swapf	??_Lcd_Cmd,f
  4370  021C  0DF0               	rlf	??_Lcd_Cmd,f
  4371  021D  080E               	movf	14,w	;volatile
  4372  021E  0670               	xorwf	??_Lcd_Cmd,w
  4373  021F  39DF               	andlw	-33
  4374  0220  0670               	xorwf	??_Lcd_Cmd,w
  4375  0221  008E               	movwf	14	;volatile
  4376  0222                     l1523:
  4377  0222  0872               	movf	Lcd_Cmd@data,w
  4378  0223  3901               	andlw	1
  4379  0224  00F0               	movwf	??_Lcd_Cmd
  4380  0225  0EF0               	swapf	??_Lcd_Cmd,f
  4381  0226  080E               	movf	14,w	;volatile
  4382  0227  0670               	xorwf	??_Lcd_Cmd,w
  4383  0228  39EF               	andlw	-17
  4384  0229  0670               	xorwf	??_Lcd_Cmd,w
  4385  022A  008E               	movwf	14	;volatile
  4386  022B                     l1525:
  4387                           
  4388                           ;./flex_lcd.h: 158: _delay(10);
  4389  022B  3003               	movlw	3
  4390  022C                     u1687:
  4391  022C  0B89               	decfsz	9,f
  4392  022D  2A2C               	goto	u1687
  4393  022E  0000               	nop
  4394  022F                     l1527:
  4395                           
  4396                           ;./flex_lcd.h: 159: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  4397  022F  0140               	movlb	0	; select bank0
  4398  0230  170D               	bsf	13,6	;volatile
  4399  0231                     l1529:
  4400  0231  0000               	nop
  4401  0232                     l1531:
  4402  0232  0140               	movlb	0	; select bank0
  4403  0233  130D               	bcf	13,6	;volatile
  4404  0234                     l1533:
  4405                           
  4406                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  4407  0234  30C4               	movlw	196
  4408  0235                     u1697:
  4409  0235  3200               	nop2
  4410  0236  3200               	nop2
  4411  0237  0B89               	decfsz	9,f
  4412  0238  2A35               	goto	u1697
  4413  0239  3200               	nop2
  4414  023A  0000               	nop
  4415  023B                     l111:
  4416  023B  0008               	return
  4417  023C                     __end_of_Lcd_Cmd:
  4418  007E                     btemp	set	126	;btemp
  4419  007E                     wtemp0	set	126
  4420                           
  4421                           	psect	config
  4422                           
  4423                           ;Config register CONFIG1 @ 0x8007
  4424                           ;	External Oscillator Mode Selection bits
  4425                           ;	FEXTOSC = OFF, Oscillator not enabled
  4426                           ;	Power-up Default Value for COSC bits
  4427                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  4428                           ;	Clock Out Enable bit
  4429                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4430                           ;	VDD Range Analog Calibration Selection bit
  4431                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4432  8007                     	org	32775
  4433  8007  3FED               	dw	16365
  4434                           
  4435                           ;Config register CONFIG2 @ 0x8008
  4436                           ;	Master Clear Enable bit
  4437                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4438                           ;	Power-up Timer Selection bits
  4439                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4440                           ;	WDT Operating Mode bits
  4441                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4442                           ;	Brown-out Reset Enable bits
  4443                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4444                           ;	Brown-out Reset Voltage Selection bit
  4445                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4446                           ;	PPSLOCKED One-Way Set Enable bit
  4447                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  4448                           ;	Stack Overflow/Underflow Reset Enable bit
  4449                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4450  8008                     	org	32776
  4451  8008  3FE7               	dw	16359
  4452                           
  4453                           ;Config register CONFIG4 @ 0x800A
  4454                           ;	Boot Block Size Selection bits
  4455                           ;	BBSIZE = BB512, 512 words boot block size
  4456                           ;	Boot Block Enable bit
  4457                           ;	BBEN = OFF, Boot Block is disabled
  4458                           ;	SAF Enable bit
  4459                           ;	SAFEN = OFF, SAF is disabled
  4460                           ;	Application Block Write Protection bit
  4461                           ;	WRTAPP = OFF, Application Block is not write-protected
  4462                           ;	Boot Block Write Protection bit
  4463                           ;	WRTB = OFF, Boot Block is not write-protected
  4464                           ;	Configuration Registers Write Protection bit
  4465                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4466                           ;	Storage Area Flash (SAF) Write Protection bit
  4467                           ;	WRTSAF = OFF, SAF is not write-protected
  4468                           ;	Low Voltage Programming Enable bit
  4469                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  4470  800A                     	org	32778
  4471  800A  3FFF               	dw	16383
  4472                           
  4473                           ;Config register CONFIG5 @ 0x800B
  4474                           ;	User Program Flash Memory Code Protection bit
  4475                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4476  800B                     	org	32779
  4477  800B  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         66
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      9      71
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> carac(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[16]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[16]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[16]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> carac(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S560_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> carac(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> carac(BANK1[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> carac(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8070
                                             74 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
             _PIN_MANAGER_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6439
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             6     4      2    1141
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PIN_MANAGER_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      9      47       8       88.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A5      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon May 24 11:29:23 2021

                             l77 0157                               l78 017D                               l79 01A9  
                            l111 023B                              l105 0078                              l122 002F  
                            l108 02CE                              l304 0674                              l305 0685  
                            l317 0484                              l318 0495                              l702 06CF  
                            l711 077C                              l703 06D9                              l707 06F7  
                            l708 070D                              l732 03AB                              l725 07EF  
                            l743 0F82                              l746 0F82                              l739 0FFF  
                            l667 0FA6                              l758 00C7                              l766 0FCE  
                            l694 00E2                              l775 0F68                              l769 0005  
                            l697 0104                              l699 011D                              u800 0F62  
                            u801 0F61                              u810 0590                              u811 058F  
                            u900 0656                              u901 0655                              u830 05BB  
                            u750 007E                              u831 05BA                              u751 007D  
                            u920 03B7                              u760 0083                              u921 03B6  
                            u761 0082                              u850 05E5                              u770 0092  
                            u771 0091                              u860 05F5                              u940 03E2  
                            u780 00AF                              u861 05F4                              u941 03E1  
                            u781 00AE                              u870 0608                              u790 0FCE  
                            u871 0607                              u791 0FCD                              u880 0632  
                            u960 040E                              u881 0631                              u961 040D  
                            u785 00AB                              u890 0651                              u970 0421  
                            u891 0650                              u971 0420                              u980 0443  
                            u885 062E                              u981 0442                              u990 0461  
                            u991 0460                              u985 043F                              _abs 0F69  
                            _pad 00C8                              wreg 0009                             ?_abs 0073  
                           l1301 0F56                             l1311 0586                             l1303 0F5A  
                           l1321 05DE                             l1313 0590                             l1401 0F76  
                           l1305 0F62                             l1331 0604                             l1323 05E8  
                           l1315 05B1                             l1411 06D4                             l1403 0688  
                           l1341 0643                             l1333 0608                             l1325 05F5  
                           l1317 05BB                             l1309 0585                             l1421 0709  
                           l1413 06E9                             l1405 0698                             l1511 01F2  
                           l1335 0610                             l1327 05F8                             l1343 0651  
                           l1319 05DA                             l1351 03B7                             l1431 074B  
                           l1423 0711                             l1415 06EF                             l1407 06AB  
                           l1521 0218                             l1513 01F4                             l1505 01AB  
                           l1601 01A5                             l1345 0656                             l1337 0632  
                           l1329 0600                             l1361 0411                             l1353 03D8  
                           l1281 0088                             l1441 07B2                             l1433 074F  
                           l1425 0714                             l1417 06FF                             l1409 06B1  
                           l1531 0232                             l1523 0222                             l1515 01F5  
                           l1507 01AE                             l1603 01A5                             l1611 003E  
                           l1339 0642                             l1371 0453                             l1363 0419  
                           l1355 03E2                             l1347 03AC                             l1283 0092  
                           l1275 0079                             l1291 0FA9                             l1451 07CC  
                           l1435 078A                             l1443 07B7                             l1427 0719  
                           l1419 0705                             l1533 0234                             l1525 022B  
                           l1517 01F7                             l1509 01EE                             l1541 0284  
                           l1621 0065                             l1613 0044                             l1605 0031  
                           l1365 041D                             l1373 0461                             l1357 0401  
                           l1349 03AD                             l1285 00AF                             l1277 007E  
                           l1293 0FAC                             l1381 00D6                             l1453 07D1  
                           l1445 07BE                             l1437 0797                             l1429 0747  
                           l1461 02D1                             l1527 022F                             l1519 0207  
                           l1551 02AA                             l1543 0286                             l1535 023D  
                           l1623 006C                             l1607 0032                             l1631 0006  
                           l1375 0466                             l1367 0421                             l1359 040E  
                           l1287 00BF                             l1279 0083                             l1295 0FBA  
                           l1391 00F6                             l1383 00DB                             l1455 07D5  
                           l1447 07C2                             l1439 07A4                             l1471 0307  
                           l1463 02E2                             l1711 04B4                             l1703 0496  
                           l1529 0231                             l1561 02C4                             l1553 02B4  
                           l1545 0287                             l1537 0240                             l1625 0070  
                           l1609 0038                             l1617 004A                             l1641 0012  
                           l1633 000A                             l1369 0443                             l1297 0FBF  
                           l1393 0109                             l1385 00E0                             l1377 00CA  
                           l1449 07C6                             l1457 07DD                             l1481 0353  
                           l1473 0318                             l1465 02EA                             l1721 04E0  
                           l1713 04BC                             l1705 0499                             l1563 02C6  
                           l1555 02BD                             l1547 0289                             l1539 0280  
                           l1619 0060                             l1651 0028                             l1643 0013  
                           l1635 000C                             l1299 0F51                             l1395 0111  
                           l1387 00E5                             l1379 00CE                             l1483 0364  
                           l1491 037D                             l1475 0320                             l1467 02F0  
                           l1571 0FD9                             l1731 050C                             l1715 04C1  
                           l1723 04E8                             l1707 04A2                             l1581 012B  
                           l1565 02C7                             l1557 02C1                             l1549 0299  
                           l1661 002D                             l1653 0029                             l1645 0018  
                           l1637 000E                             l1389 00F1                             l1493 0385  
                           l1485 036C                             l1477 0339                             l1469 02F5  
                           l1573 0FED                             l1741 052C                             l1725 04ED  
                           l1733 0514                             l1717 04C7                             l1709 04AF  
                           l1591 0177                             l1583 0155                             l1559 02C3  
                           l1663 002E                             l1655 002A                             l1647 0019  
                           l1639 0010                             l1399 0F69                             l1487 0377  
                           l1575 0FF7                             l1567 0FD1                             l1671 0F91  
                           l1751 056D                             l1743 053D                             l1735 0519  
                           l1727 04F3                             l1719 04D3                             l1593 0192  
                           l1657 002B                             l1649 0026                             l1497 0388  
                           l1569 0FD5                             l1673 0F9E                             l1665 0F85  
                           l1745 0552                             l1737 0522                             l1729 04FF  
                           l1595 0199                             l1587 016C                             l1579 011E  
                           l1659 002C                             l1499 03A1                             l1667 0F8D  
                           l1747 0557                             l1739 0527                             l1597 019D  
                           l1589 0173                             l1773 0052                             l1669 0F8F  
                           l1749 055C                             l1599 01A1                             ?_pad 0024  
                           STR_1 0813                             STR_2 0813                             STR_3 0800  
                           STR_4 0800                             u1000 0466                             u1001 0465  
                           u1020 00CE                             u1021 00CD                             u1030 00DB  
                           u1110 06D4                             u1031 00DA                             u1111 06D3  
                           u1040 0104                             u1200 07BE                             u1120 06E9  
                           u1041 0103                             u1201 07BD                             u1121 06E8  
                           u1050 0109                             u1210 07C2                             u1130 0705  
                           u1051 0108                             u1211 07C1                             u1131 0704  
                           u1060 0F76                             u1220 07CC                             u1140 0709  
                           u1061 0F75                             u1045 0100                             u1221 07CB  
                           u1141 0708                             u1125 06E5                             u1150 078A  
                           u1070 06A3                             u1230 02E2                             u1151 0789  
                           u1071 06A1                             u1231 02E1                             u1400 017D  
                           u1160 0797                             u1080 06A4                             u1240 0307  
                           u1305 01E2                             u1401 017C                             u1065 0F72  
                           u1161 0796                             u1241 0306                             u1410 0078  
                           u1170 07A4                             u1090 06B1                             u1250 0318  
                           u1315 01FA                             u1411 0077                             u1171 07A3  
                           u1155 0786                             u1091 06B0                             u1251 0317  
                           u1180 07B2                             u1260 0364                             u1325 020A  
                           u1181 07B1                             u1261 0363                             _LATA 0018  
                           u1190 07B7                             u1430 04B4                             _LATB 0019  
                           u1335 0243                             u1191 07B6                             u1175 07A0  
                           u1431 04B3                             _LATC 001A                             u1440 04C1  
                           u1345 0253                             u1185 07AE                             u1441 04C0  
                           u1450 04ED                             u1275 01B1                             u1355 0264  
                           u1451 04EC                             u1507 04B8                             u1460 0519  
                           u1285 01C1                             u1365 0274                             u1461 0518  
                           u1517 04E4                             u1390 0FF7                             u1470 0527  
                           u1295 01D2                             u1607 0133                             u1375 028C  
                           u1391 0FF6                             u1471 0526                             u1527 0510  
                           u1480 0557                             u1617 013A                             u1385 029C  
                           u1481 0556                             u1537 051D                             u1627 0141  
                           u1547 054E                             u1637 0148                             u1557 057E  
                           u1647 014F                             u1567 0281                             u1657 016D  
                           u1577 02BE                             u1497 04A8                             u1667 0193  
                           u1587 02C8                             u1677 01EF                             u1597 012C  
                           u1687 022C                             u1697 0235                             _WPUC 1F4F  
                           abs@a 0073                             _dbuf 00AA                             _main 0496  
                           _dtoa 0686                             _prec 00A4                             _nout 00A0  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                             start 0002                  __end_of_Lcd_Cmd 023C  
                     _Lcd_Chr_CP 023C                            ??_abs 0075                            ??_pad 007C  
                 Lcd_Out2@buffer 0074                  __end_of___aodiv 0686                            ?_main 0070  
                          ?_dtoa 0030                  __end_of___aomod 0496                     vfpfcnvrt@fmt 004E  
                          _TRISA 0012                            _TRISB 0013                            _TRISC 0014  
                          u82lld 05AF                            u91lld 0674                            u84lld 05DA  
                          u93lld 03D6                            u95lld 0401                            _carac 00CA  
                          _flags 006C                            _fputc 0079                            _mitad 00A8  
                          _fputs 0FA7                            pad@fp 002B                            _width 00A2  
                          _putch 0005                            dtoa@d 0030                            dtoa@i 004C  
                          dtoa@n 0044                            dtoa@p 003E                            dtoa@s 0042  
                          dtoa@w 0040                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0FA7                 __end_of_Lcd_Init 01AA                 __end_of_Lcd_Out2 0079  
                __initialization 07F0                     __end_of_main 0585                     __end_of_dtoa 07F0  
                         ??_main 006A                           ??_dtoa 0038                           ?_fputc 0070  
                         ?_fputs 0078                           _ANSELA 1F38                           ?_putch 0070  
                         _ANSELB 1F43                           _ANSELC 1F4E                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           u101lld 0484  
                         u110lld 06CF                        ??_Lcd_Cmd 0070                           _TRISA0 0090  
                         _TRISA2 0092                           _TRISA3 0093                           _TRISA4 0094  
                         _TRISA5 0095                           _TRISC3 00A3                           _TRISB5 009D  
                         _TRISB7 009F                     vfprintf@cfmt 0064                      ?_Lcd_Chr_CP 0070  
                      ??___aodiv 0070                        ??___aomod 0070                           pad@buf 0024  
                         dtoa@fp 003D                           _strlen 0F50                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
                         putch@c 0070                 __end_of_vfprintf 1000                        ??_sprintf 007D  
        __end_of__initialization 07FD                   __pcstackCOMMON 0070                    __end_of_fputc 00C8  
                  __end_of_fputs 0FCF                    __end_of_putch 0006                        ?_Lcd_Init 0070  
                      ?_Lcd_Out2 0073                          ??_fputc 0073                          ??_fputs 0079  
            __size_of_Lcd_Chr_CP 0093                          ??_putch 0070                       __pbssBANK0 006C  
                     __pbssBANK1 00A0                       __pmaintext 0496                          ?_strlen 0070  
             __size_of_vfpfcnvrt 00DD                       ??_Lcd_Init 0073                       ??_Lcd_Out2 0075  
                        _SLRCONA 1F3B                          _SLRCONB 1F46                          _SLRCONC 1F51  
                        _Lcd_Cmd 01AA                          ___aodiv 0585                          ___aomod 03AC  
                      ?_vfprintf 005E                          __ptext1 0F83                          __ptext2 0FCF  
                        __ptext3 02CF                          __ptext4 0686                          __ptext5 00C8  
                        __ptext6 0F50                          __ptext7 0FA7                          __ptext8 0079  
                        __ptext9 0005                  __size_of_strlen 0019                     __size_of_abs 001A  
                   __size_of_pad 0056         ??_PIN_MANAGER_Initialize 0070                          _sprintf 0F83  
                        clrloop0 0F4B             end_of_initialization 07FD                          fputc@fp 0072  
                        fputs@fp 0078                __end_of_vfpfcnvrt 03AC                     ??_Lcd_Chr_CP 0070  
                      Lcd_Out2@x 0073                        Lcd_Out2@y 0077                       ??_vfprintf 0061  
                        strlen@a 0073                          strlen@s 0074                        _PORTAbits 000C  
                      _PORTBbits 000D                        _PORTCbits 000E                        _TRISBbits 0013  
                      _TRISCbits 0014                     _contadoperso 00A6               __end_of_Lcd_Chr_CP 02CF  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D                      vfpfcnvrt@ll 0055  
                 __end_of_strlen 0F69              start_initialization 07F0  __size_of_PIN_MANAGER_Initialize 002A  
                    __end_of_abs 0F83                      __end_of_pad 011E                __size_of_Lcd_Init 008C  
              __size_of_Lcd_Out2 0049                      vfprintf@fmt 005E                         ??_strlen 0072  
                      ___latbits 0001                    __pcstackBANK0 0020                    __pcstackBANK1 00DE  
               ___aodiv@dividend 0028                         ?_Lcd_Cmd 0070           _PIN_MANAGER_Initialize 0006  
                       ?___aodiv 0020                         ?___aomod 0020                 ___aodiv@quotient 0073  
              __size_of_vfprintf 0031                         ?_sprintf 0066                   __size_of_fputc 004F  
                 __size_of_fputs 0028                   __size_of_putch 0001                         _LATAbits 0018  
                      clear_ram0 0F4A                        _vfpfcnvrt 02CF                     Lcd_Init@data 0074  
                   Lcd_Out2@data 0078                         _Lcd_Init 011E                         _Lcd_Out2 0030  
               __size_of_Lcd_Cmd 0092                       vfprintf@ap 0060                       vfprintf@fp 0063  
               __size_of___aodiv 0101                 __size_of___aomod 00EA                       ?_vfpfcnvrt 004E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071                       sprintf@fmt 0066  
                 Lcd_Chr_CP@data 0072                         _dtoa$633 003B                         __ptext10 0F69  
                       __ptext11 03AC                         __ptext12 0585                         __ptext13 0006  
                       __ptext14 0030                         __ptext15 023C                         __ptext16 011E  
                       __ptext17 01AA                 __size_of_sprintf 0024                      Lcd_Cmd@data 0072  
                  __size_of_main 00EF                    __size_of_dtoa 016A                         _persomax 006E  
                       _vfprintf 0FCF                 ___aomod@dividend 0028                        sprintf@ap 00E0  
        ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                    __pstringtext1 0800                    __pstringtext2 0813  
                  __pstringtext3 0000                         sprintf@f 00E2                         sprintf@s 00E1  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0030                     ___aomod@sign 0072  
